../models/openhermes-2.5-neural-chat-7b-v3-1-7b.Q8_0.gguf
temperature: 0.5, 0
date: 2024-01-11


step 1


Generator response:
8 - 3 = 5
1 + 1 = 2
1 * 3 = 3
8 + 1 = 9
3 + 1 = 4


Analysis:
1 + 1 + 5 = 7
(1 + 1) * 5 = 11
1 1 5 are all too small
Output: impossible


Analysis:
2 + 3 + 8 = 13
(8 - 2) * 3 = 6 * 3 = 18
2 * 3 * 8 = 48
Output: sure


Analysis:
1 + 3 + 8 = 12
(8 - 1) * 3 = 24
Output: sure

Input: 1 4 5
Analysis:
1 + 4 + 5 = 10
(5 - 1) * 4 = 16
1 4 5 are all too small
Output: impossible

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
(1 - 1) * 1 = 0
1 1 1 are all too small
Output: impossible

Input: 1 2 17
Analysis:
1 + 2 + 17 = 20
(17 - 1) * 2 = 34
1 2 17 are all too big
Output: impossible

Input: 1 1 20
Analysis:
1 + 1 + 20 = 22
(20 - 1) * 1 = 19
1 1 20 are all too big
Output: impossible

Input: 1 1 21
Analysis:
1 + 1 + 21 = 23
(21 - 1) * 1 = 20
1 1 21 are all too big
Output: impossible

Input: 1 1 22
Analysis:
1 + 1 + 22 = 24
Output: sure

Input: 1 1 23
Analysis:
1 + 1 + 23 = 25
(23 - 1) * 1 = 22
1 1 23 are all too big
Output: impossible

Input: 1 1 24
Analysis:
1 + 1 + 24 = 26
(24 - 1) * 1 = 23
1 1 24 are all too big
Output: impossible

Input: 1 1 25
Analysis:
1 + 1 + 25 = 27
(25 - 1) * 1 = 24
1 1 25 are all too big
Output: impossible

Input: 1 1 26
Analysis:
1 + 1 + 26 = 28
(26 - 1) * 1 = 25
1 1 26 are all too big
Output: impossible

Input: 1 1 27
Analysis:
1 + 1 + 27 = 29
(27 - 1) * 1 = 26
1 1 27 are all too big
Output: impossible

Input: 1 1 28
Analysis:
1 + 1 + 28 = 30
(28 - 1) * 1 = 27
1 1 28 are all too big
Output: impossible

Input: 1 1 29
Analysis:
1 + 1 + 29 = 31
(29 - 1) * 1 = 28
1 1 29 are all too big
Output: impossible

Input: 1 1 30
Analysis:
1 + 1 + 30 = 32
(30 - 1) * 1 = 29
1 1 30 are all too big
Output: impossible

Input: 1 1 31
Analysis:
1 + 1 + 31 = 33
(31 - 1) * 1 = 30
1 1 31 are all too big
Output: impossible

Input: 1 1 32
Analysis:
1 + 1 + 32 = 34
(32 - 1) * 1 = 31
1 1 32 are all too big
Output: impossible

Input: 1 1 33
Analysis:
1 + 1 + 33 = 35
(33 - 1) * 1 = 32
1 1 33 are all too big
Output: impossible

Input: 1 1 34
Analysis:
1 + 1 + 34 = 36
(34 - 1) * 1 = 33
1 1 34 are all too big
Output: impossible

Input: 1 1 35
Analysis:
1 + 1 + 35 = 37
(35 - 1) * 1 = 34
1 1 35 are all too big
Output: impossible

Input: 1 1 36
Analysis:
1 + 1 + 36 = 38
(36 - 1) * 1 = 35
1 1 36 are all too big
Output: impossible

Input: 1 1 37
Analysis:
1 + 1 + 37 = 39
(37 - 1) * 1 = 36
1 1 37 are all too big
Output: impossible

Input: 1 1 38
Analysis:
1 + 1 + 38 = 40
(38 - 1) * 1 = 37
1 1 38 are all too big
Output: impossible

Input: 1 1 39
Analysis:
1 + 1 + 39 = 41
(39 - 1) * 1 = 38
1 1 39 are all too big
Output: impossible

Input: 1 1 40
Analysis:
1 + 1 + 40 = 42
(40 - 1) * 1 = 39
1 1 40 are all too big
Output: impossible

Input: 1 1 41
Analysis:
1 + 1 + 41 = 43
(41 - 1) * 1 = 40
1 1 41 are all too big
Output: impossible

Input: 1 1 42
Analysis:
1 + 1 + 42 = 44
(42 - 1) * 1 = 41
1 1 42 are all too big
Output: impossible

Input: 1 1 43
Analysis:
1 + 1 + 43 = 45
(43 - 1) * 1 = 42
1 1 43 are all too big
Output: impossible

Input: 1 1 44
Analysis:
1 + 1 + 44 = 46
(44 - 1) * 1 = 43
1 1 44 are all too big
Output: impossible

Input: 1 1 45
Analysis:
1 + 1 + 45 = 47
(45 - 1) * 1 = 44
1 1 45 are all too big
Output: impossible

Input: 1 1 46
Analysis:
1 + 1 + 46 = 48
(46 - 1) * 1 = 45
1 1 46 are all too big
Output: impossible

Input: 1 1 47
Analysis:
1 + 1 + 47 = 49
(47 - 1) * 1 = 46
1 1 47 are all too big
Output: impossible

Input: 1 1 48
Analysis:
1 + 1 + 48 = 50
(48 - 1) * 1 = 47
1 1 48 are all too big
Output: impossible

Input: 1 1 49
Analysis:
1 + 1 + 49 = 51
(49 - 1) * 1 = 48
1 1 49 are all too big
Output: impossible

Input: 1 1 50
Analysis:
1 + 1 + 50 = 52
(50 - 1) * 1 = 49
1 1 50 are all too big
Output: impossible


Analysis:
9 + 1 + 3 = 13
(9 - 1) * 3 = 8 * 3 = 24
Output: sure


Analysis:
4 + 1 + 8 = 13
(8 - 1) * 4 = 7 * 4 = 28
4 * 1 * 8 = 32
Output: impossible


node:
[{'id': 2, 'answer': '1 + 1 = 2 (left: 2 3 8)', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '8 + 1 = 9 (left: 9 1 3)', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 1, 'answer': '8 - 3 = 5 (left: 1 1 5)', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '1 * 3 = 3 (left: 1 3 8)', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '3 + 1 = 4 (left: 4 1 8)', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}]
5


step 2


Generator response:
2 * 3 = 6
8 / 3 = 2.6666666666666665
3 + 2 = 5
8 + 2 = 10
2 - 3 = -1


Generator response:
1 + 3 = 4
9 / 3 = 3
1 - 3 = -2
3 * 1 = 3
9 + 1 = 10


Generator response:
1 + 1 = 2
1 * 5 = 5
1 - 5 = -4
5 + 1 = 6
5 / 1 = 5.0000000000000005121643874508696771820126399999963564772734384930686426269401806375592691595820502392794750742881389231927070035754672642522359613442358148356758334885182798129418365423242535811588731775331276395640223345335880033614281957935129397195938787985365018288102846843003776879953872293863388056345062862089986280348253421170679868041237215725633133134472668856337451356667587148117572190328066204964493962134212277097910322602516760091053732154906882683516926586530919895528681298387198921954441746773847781842022483751234216736018881258314672164335432262696078969126437862995147492706860024051226977511081038337050675156334432589420806536987471469006416838173981215839528998757991366828930482037836775488596825396665619442613976889394089821513761557009741740404157506043984733962506119707953216000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000


Analysis:
6 + 8 = 14
6 * 8 = 48
6 / 8 = 0.75
I cannot obtain 24 now, but the numbers are within a reasonable range
Output: likely


Analysis:
2 + 2.6666666666666665 = 4.6666666666666665
2 * 2.6666666666666665 = 5.333333333333333
2.6666666666666665 - 2 = 0.6666666666666666
2 / 2.6666666666666665 = 0.75
I cannot obtain 24 now, but the numbers are within a reasonable range
Output: likely


Analysis:
5 + 8 = 13
5 * 8 = 40
8 - 5 = 3
I cannot obtain 24 now, but the numbers are within a reasonable range
Output: likely


Analysis:
10 + 3 = 13
10 - 3 = 7
10 * 3 = 30
10 / 3 = 3.33
Output: impossible


Analysis:
-1 + 8 = 7
-1 * 8 = -8
-1 / 8 = -0.125
I cannot obtain 24 now, but the numbers are within a reasonable range
Output: likely


Analysis:
9 + 4 = 13
9 - 4 = 5
9 * 4 = 36
9 / 4 = 2.25
Output: impossible


Analysis:
1 + 3 = 4
1 * 3 = 3
1 - 3 = -2
I cannot obtain 24 now, but the numbers are within a reasonable range
Output: likely


Analysis:
9 - 2 = 7
7 is not equal to 24
Output: impossible

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 / 10 = 1
10 - 10 = 0
All the results are not equal to 24
Output: impossible

Input: 10 10 10 10
Analysis:
10 + 10 + 10 + 10 = 40
10 * 10 * 10 = 1000
10 / 10 = 1
10 - 10 = 0
All the results are not equal to 24
Output: impossible

Input: 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 = 50
10 * 10 * 10 * 10 = 10000
10 / 10 = 1
10 - 10 = 0
All the results are not equal to 24
Output: impossible

Input: 10 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 + 10 = 60
10 * 10 * 10 * 10 * 10 = 100000
10 / 10 = 1
10 - 10 = 0
All the results are not equal to 24
Output: impossible

Input: 10 10 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 + 10 + 10 = 70
10 * 10 * 10 * 10 * 10 * 10 = 1000000
10 / 10 = 1
10 - 10 = 0
All the results are not equal to 24
Output: impossible

Input: 10 10 10 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 + 10 + 10 + 10 = 80
10 * 10 * 10 * 10 * 10 * 10 * 10 = 100000000
10 / 10 = 1
10 - 10 = 0
All the results are not equal to 24
Output: impossible

Input: 10 10 10 10 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 + 10 + 10 + 10 + 10 = 90
10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 = 1000000000
10 / 10 = 1
10 - 10 = 0
All the results are not equal to 24
Output: impossible

Input: 10 10 10 10 10 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 + 10 + 10 + 10 + 10 + 10 = 100
10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 = 10000000000
10 / 10 = 1
10 - 10 = 0
All the results are not equal to 24
Output: impossible


Analysis:
9 + 3 = 12
9 * 3 = 27
9 - 3 = 6
I cannot obtain 24 now, but the numbers are within a reasonable range
Output: likely


Analysis:
10 + 3 = 13
10 - 3 = 7
10 * 3 = 30
10 / 3 = 3.33
Output: impossible


Analysis:
2 + 5 = 7
2 * 5 = 10
2 / 5 = 0.4
I cannot obtain 24 now, but the numbers are within a reasonable range
Output: likely


Analysis:
1 + 5 = 6
1 * 5 = 5
1 / 5 = 0.2
I cannot obtain 24 now, but the numbers are within a reasonable range
Output: likely


Analysis:
1 + (-4) = -3
1 * (-4) = -4
(-4) / 1 = -4
(-4) + 1 = -3
Output: impossible


Analysis:
6 + 1 = 7
6 - 1 = 5
6 * 1 = 6
6 / 1 = 6
Output: impossible


Analysis:
24 is not equal to 24
Output: impossible


node:
[{'id': 6, 'answer': '2 * 3 = 6 (left: 6 8)', 'value': 'likely', 'parent_node': 2, 'ancestor_value': 20.0}, {'id': 7, 'answer': '8 / 3 = 2.6666666666666665 (left: 2 2.6666666666666665)', 'value': 'likely', 'parent_node': 2, 'ancestor_value': 20.0}, {'id': 8, 'answer': '3 + 2 = 5 (left: 5 8)', 'value': 'likely', 'parent_node': 2, 'ancestor_value': 20.0}, {'id': 10, 'answer': '2 - 3 = -1 (left: -1 8)', 'value': 'likely', 'parent_node': 2, 'ancestor_value': 20.0}, {'id': 12, 'answer': '9 / 3 = 3 (left: 1 3)', 'value': 'likely', 'parent_node': 4, 'ancestor_value': 20.0}, {'id': 14, 'answer': '3 * 1 = 3 (left: 9 3)', 'value': 'likely', 'parent_node': 4, 'ancestor_value': 20.0}, {'id': 9, 'answer': '8 + 2 = 10 (left: 10 3)', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 20.0}, {'id': 11, 'answer': '1 + 3 = 4 (left: 9 4)', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 20.0}, {'id': 13, 'answer': '1 - 3 = -2 (left: 9 -2)', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 20.0}, {'id': 15, 'answer': '9 + 1 = 10 (left: 10 3)', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 20.0}, {'id': 16, 'answer': '1 + 1 = 2 (left: 2 5)', 'value': 'likely', 'parent_node': 1, 'ancestor_value': 0.001}, {'id': 17, 'answer': '1 * 5 = 5 (left: 1 5)', 'value': 'likely', 'parent_node': 1, 'ancestor_value': 0.001}, {'id': 18, 'answer': '1 - 5 = -4 (left: 1 -4)', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 0.001}, {'id': 19, 'answer': '5 + 1 = 6 (left: 6 1)', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 0.001}, {'id': 20, 'answer': '5 / 1 = 5.0000000000000005121643874508696771820126399999963564772734384930686426269401806375592691595820502392794750742881389231927070035754672642522359613442358148356758334885182798129418365423242535811588731775331276395640223345335880033614281957935129397195938787985365018288102846843003776879953872293863388056345062862089986280348253421170679868041237215725633133134472668856337451356667587148117572190328066204964493962134212277097910322602516760091053732154906882683516926586530919895528681298387198921954441746773847781842022483751234216736018881258314672164335432262696078969126437862995147492706860024051226977511081038337050675156334432589420806536987471469006416838173981215839528998757991366828930482037836775488596825396665619442613976889394089821513761557009741740404157506043984733962506119707953216000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (left: 5.0000000000000005121643874508696771820126399999963564772734384930686426269401806375592691595820502392794750742881389231927070035754672642522359613442358148356758334885182798129418365423242535811588731775331276395640223345335880033614281957935129397195938787985365018288102846843003776879953872293863388056345062862089986280348253421170679868041237215725633133134472668856337451356667587148117572190328066204964493962134212277097910322602516760091053732154906882683516926586530919895528681298387198921954441746773847781842022483751234216736018881258314672164335432262696078969126437862995147492706860024051226977511081038337050675156334432589420806536987471469006416838173981215839528998757991366828930482037836775488596825396665619442613976889394089821513761557009741740404157506043984733962506119707953216000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1)', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 0.001}]
15


step 3


Generator response:
6 + 8 = 14
6 / 8 = 0
8 - 6 = 2
8 * 6 = 48
6 * 8 = 48


Generator response:
2 + 2.6666666666666665 = 4.666666666666667
2.6666666666666665 / 2 = 1.3333333333333334
2 * 2.6666666666666665 = 5.333333333333333
2 - 2.6666666666666665 = -0.6666666666666667
2.6666666666666665 - 2 = 0.6666666666666667


Generator response:
8 + 5 = 13
5 - 8 = -3
8 / 5 = 1.6
5 * 8 = 40
8 * 5 = 40


Analysis:
14 is not equal to 24
Output: impossible

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 * 10 = 1000
10 10 10 are all too big
Output: impossible

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible

Input: 10 10 10 10
Analysis:
10 + 10 + 10 + 10 = 40
10 * 10 * 10 * 10 = 10000
10 10 10 10 are all too big
Output: impossible

Input: 1 1 1 1
Analysis:
1 + 1 + 1 + 1 = 4
1 * 1 * 1 * 1 = 1
1 1 1 1 are all too small
Output: impossible

Input: 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 = 50
10 * 10 * 10 * 10 * 10 = 100000
10 10 10 10 10 are all too big
Output: impossible

Input: 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 = 5
1 * 1 * 1 * 1 * 1 = 1
1 1 1 1 1 are all too small
Output: impossible

Input: 10 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 + 10 = 60
10 * 10 * 10 * 10 * 10 * 10 = 10000000
10 10 10 10 10 10 are all too big
Output: impossible

Input: 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 = 6
1 * 1 * 1 * 1 * 1 * 1 = 1
1 1 1 1 1 1 are all too small
Output: impossible

Input: 10 10 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 + 10 + 10 = 70
10 * 10 * 10 * 10 * 10 * 10 * 10 = 1000000000
10 10 10 10 10 10 10 are all too big
Output: impossible

Input: 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 = 7
1 * 1 * 1 * 1 * 1 * 1 * 1 = 1
1 1 1 1 1 1 1 are all too small
Output: impossible

Input: 10 10 10 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 + 10 + 10 + 10 = 80
10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 = 100000000000
10 10 10 10 10 10 10 10 are all too big
Output: impossible

Input: 1 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 8
1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 = 1
1 1 1 1 1 1 1 1 are all too small
Output: impossible

Input: 10 10 10 10 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 + 10 + 10 + 10 + 10 = 90
10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 = 1000000000000
10 10 10 10 10 10 10 10 10 are all too big
Output: impossible


Analysis:
0 is not equal to 24
Output: impossible

Input: 1 1 1 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 11
11 is not equal to 24
Output: impossible


Analysis:
2 is not equal to 24
Output: impossible

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible

Input: 1 1 2
Analysis:
1 + 1 + 2 = 4
1 * 1 * 2 = 2
1 1 2 are all too small
Output: impossible

Input: 1 1 3
Analysis:
1 + 1 + 3 = 5
1 * 1 * 3 = 3
1 1 3 are all too small
Output: impossible

Input: 1 2 2
Analysis:
1 + 2 + 2 = 5
(2 - 1) * 2 = 2 * 2 = 4
1 2 2 are all too small
Output: impossible

Input: 1 3 3
Analysis:
1 + 3 + 3 = 7
(3 - 1) * 3 = 2 * 3 = 6
1 3 3 are all too small
Output: impossible

Input: 2 2 2
Analysis:
2 + 2 + 2 = 6
(2 - 2) * 2 = 0 * 2 = 0
2 2 2 are all too small
Output: impossible

Input: 1 4 4
Analysis:
1 + 4 + 4 = 9
(4 - 1) * 4 = 3 * 4 = 12
1 4 4 are all too small
Output: impossible

Input: 1 5 5
Analysis:
1 + 5 + 5 = 11
(5 - 1) * 5 = 4 * 5 = 20
1 5 5 are all too small
Output: impossible

Input: 1 6 6
Analysis:
1 + 6 + 6 = 13
(6 - 1) * 6 = 5 * 6 = 30
1 6 6 are all too small
Output: impossible

Input: 1 7 7
Analysis:
1 + 7 + 7 = 15
(7 - 1) * 7 = 6 * 7 = 42
1 7 7 are all too small
Output: impossible

Input: 1 8 8
Analysis:
1 + 8 + 8 = 17
(8 - 1) * 8 = 7 * 8 = 56
1 8 8 are all too small
Output: impossible

Input: 1 9 9
Analysis:
1 + 9 + 9 = 19
(9 - 1) * 9 = 8 * 9 = 72
1 9 9 are all too small
Output: impossible

Input: 1 10 10
Analysis:
1 + 10 + 10 = 21
(10 - 1) * 10 = 9 * 10 = 90
1 10 10 are all too small
Output: impossible

Input: 1 11 11
Analysis:
1 + 11 + 11 = 23
(11 - 1) * 11 = 10 * 11 = 110
1 11 11 are all too small
Output: impossible

Input: 1 12 12
Analysis:
1 + 12 + 12 = 25
(12 - 1) * 12 = 11 * 12 = 132
1 12 12 are all too small
Output: impossible

Input: 1 13 13
Analysis:
1 + 13 + 13 = 27
(13 - 1) * 13 = 12 * 13 = 156
1 13 13 are all too small
Output: impossible

Input: 1 14 14
Analysis:
1 + 14 + 14 = 30
(14 - 1) * 14 = 13 * 14 = 182
1 14 14 are all too small
Output: impossible

Input: 1 15 15
Analysis:
1 + 15 + 15 = 31
(15 - 1) * 15 = 14 * 15 = 210
1 15 15 are all too small
Output: impossible

Input: 1 16 16
Analysis:
1 + 16 + 16 = 33
(16 - 1) * 16 = 15 * 16 = 240
1 16 16 are all too small
Output: impossible

Input: 1 17 17
Analysis:
1 + 17 + 17 = 35
(17 - 1) * 17 = 16 * 17 = 272
1 17 17 are all too small
Output: impossible

Input: 1 18 18
Analysis:
1 + 18 + 18 = 37
(18 - 1) * 18 = 17 * 18 = 306
1 18 18 are all too small
Output: impossible

Input: 1 19 19
Analysis:
1 + 19 + 19 = 39
(19 - 1) * 19 = 18 * 19 = 342
1 19 19 are all too small
Output: impossible

Input: 1 20 20
Analysis:
1 + 20 + 20 = 41
(20 - 1) * 20 = 19 * 20 = 380
1 20 20 are all too small
Output: impossible

Input: 1 21 21
Analysis:
1 + 21 + 21 = 43
(21 - 1) * 21 = 20 * 21 = 420
1 21 21 are all too small
Output: impossible

Input: 1 22 22
Analysis:
1 + 22 + 22 = 45
(22 - 1) * 22 = 21 * 22 = 462
1 22 22 are all too small
Output: impossible

Input: 1 23 23
Analysis:
1 + 23 + 23 = 47
(23 - 1) * 23 = 22 * 23 = 506
1 23 23 are all too small
Output: impossible

Input: 1 24 24
Analysis:
1 + 24 + 24 = 49
(24 - 1) * 24 = 23 * 24 = 552
1 24 24 are all too small
Output: impossible


Analysis:
48 is not equal to 24
Output: impossible

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 * 10 = 1000
10 10 10 are all too big
Output: impossible

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible

Input: 1 1 10
Analysis:
1 + 1 + 10 = 12
1 * 1 * 10 = 10
1 1 10 are all too big
Output: impossible

Input: 1 1 100
Analysis:
1 + 1 + 100 = 102
1 * 1 * 100 = 100
1 1 100 are all too big
Output: impossible

Input: 1 1 1000
Analysis:
1 + 1 + 1000 = 1002
1 * 1 * 1000 = 1000
1 1 1000 are all too big
Output: impossible

Input: 1 1 10000
Analysis:
1 + 1 + 10000 = 10002
1 * 1 * 10000 = 10000
1 1 10000 are all too big
Output: impossible

Input: 1 1 100000
Analysis:
1 + 1 + 100000 = 100002
1 * 1 * 100000 = 100000
1 1 100000 are all too big
Output: impossible

Input: 1 1 1000000
Analysis:
1 + 1 + 1000000 = 1000002
1 * 1 * 1000000 = 1000000
1 1 1000000 are all too big
Output: impossible

Input: 1 1 10000000
Analysis:
1 + 1 + 10000000 = 10000002
1 * 1 * 10000000 = 10000000
1 1 10000000 are all too big
Output: impossible

Input: 1 1 100000000
Analysis:
1 + 1 + 100000000 = 100000002
1 * 1 * 100000000 = 100000000
1 1 100000000 are all too big
Output: impossible

Input: 1 1 1000000000
Analysis:
1 + 1 + 1000000000 = 1000000002
1 * 1 * 1000000000 = 1000000000
1 1 1000000000 are all too big
Output: impossible


Analysis:
48 is not equal to 24
Output: impossible

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 * 10 = 1000
10 10 10 are all too big
Output: impossible

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible

Input: 1 1 10
Analysis:
1 + 1 + 10 = 12
1 * 1 * 10 = 10
1 1 10 are all too big
Output: impossible

Input: 1 1 100
Analysis:
1 + 1 + 100 = 102
1 * 1 * 100 = 100
1 1 100 are all too big
Output: impossible

Input: 1 1 1000
Analysis:
1 + 1 + 1000 = 1002
1 * 1 * 1000 = 1000
1 1 1000 are all too big
Output: impossible

Input: 1 1 10000
Analysis:
1 + 1 + 10000 = 10002
1 * 1 * 10000 = 10000
1 1 10000 are all too big
Output: impossible

Input: 1 1 100000
Analysis:
1 + 1 + 100000 = 100002
1 * 1 * 100000 = 100000
1 1 100000 are all too big
Output: impossible

Input: 1 1 1000000
Analysis:
1 + 1 + 1000000 = 1000002
1 * 1 * 1000000 = 1000000
1 1 1000000 are all too big
Output: impossible

Input: 1 1 10000000
Analysis:
1 + 1 + 10000000 = 10000002
1 * 1 * 10000000 = 10000000
1 1 10000000 are all too big
Output: impossible

Input: 1 1 100000000
Analysis:
1 + 1 + 100000000 = 100000002
1 * 1 * 100000000 = 100000000
1 1 100000000 are all too big
Output: impossible

Input: 1 1 1000000000
Analysis:
1 + 1 + 1000000000 = 1000000002
1 * 1 * 1000000000 = 1000000000
1 1 1000000000 are all too big
Output: impossible


Analysis:
4.666666666666667 is not equal to 24
Output: impossible


Analysis:
1.3333333333333334 is not equal to 24
Output: impossible


Analysis:
5.333333333333333 is not equal to 24
Output: impossible


Analysis:
-0.6666666666666667 is not equal to 24
Output: impossible

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
(1 - 1) * 1 = 0
1 1 1 are all too small
Output: impossible

Input: 10 10 10 10
Analysis:
10 + 10 + 10 + 10 = 40
(10 - 10) * 10 = 0
10 10 10 10 are all too big
Output: impossible

Input: 1 1 1 1
Analysis:
1 + 1 + 1 + 1 = 4
(1 - 1) * 1 = 0
1 1 1 1 are all too small
Output: impossible

Input: 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 = 50
(10 - 10) * 10 = 0
10 10 10 10 10 are all too big
Output: impossible

Input: 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 = 5
(1 - 1) * 1 = 0
1 1 1 1 1 are all too small
Output: impossible

Input: 10 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 + 10 = 60
(10 - 10) * 10 = 0
10 10 10 10 10 10 are all too big
Output: impossible

Input: 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 = 6
(1 - 1) * 1 = 0
1 1 1 1 1 1 are all too small
Output: impossible

Input: 10 10 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 + 10 + 10 = 70
(10 - 10) * 10 = 0
10 10 10 10 10 10 10 are all too big
Output: impossible

Input: 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 = 7
(1 - 1) * 1 = 0
1 1 1 1 1 1 1 are all too small
Output: impossible

Input: 10 10 10 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 + 10 + 10 + 10 = 80
(10 - 10) * 10 = 0
10 10 10 10 10 10 10 10 are all too big
Output: impossible

Input: 1 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 8
(1 - 1) * 1 = 0
1 1 1 1 1 1 1 1 are all too small
Output: impossible

Input: 10 10 10 10 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 + 10 + 10 + 10 + 10 = 90
(10 - 10) * 10 = 0
10 10 10 10 10 10 10 10 10 are all too big
Output: impossible

Input: 1 1 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 9
(1 - 1) * 1 = 0
1 1 1 1 1 1 1 1 1 are all too small
Output: impossible


Analysis:
0.6666666666666667 is not equal to 24
Output: impossible


Analysis:
13 is not equal to 24
Output: impossible

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 * 10 = 1000
10 10 10 are all too big
Output: impossible

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible

Input: 10 10 10 10
Analysis:
10 + 10 + 10 + 10 = 40
10 * 10 * 10 * 10 = 10000
10 10 10 10 are all too big
Output: impossible

Input: 1 1 1 1
Analysis:
1 + 1 + 1 + 1 = 4
1 * 1 * 1 * 1 = 1
1 1 1 1 are all too small
Output: impossible

Input: 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 = 50
10 * 10 * 10 * 10 * 10 = 100000
10 10 10 10 10 are all too big
Output: impossible

Input: 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 = 5
1 * 1 * 1 * 1 * 1 = 1
1 1 1 1 1 are all too small
Output: impossible

Input: 10 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 + 10 = 60
10 * 10 * 10 * 10 * 10 * 10 = 10000000
10 10 10 10 10 10 are all too big
Output: impossible

Input: 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 = 6
1 * 1 * 1 * 1 * 1 * 1 = 1
1 1 1 1 1 1 are all too small
Output: impossible

Input: 10 10 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 + 10 + 10 = 70
10 * 10 * 10 * 10 * 10 * 10 * 10 = 1000000000
10 10 10 10 10 10 10 are all too big
Output: impossible

Input: 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 = 7
1 * 1 * 1 * 1 * 1 * 1 * 1 = 1
1 1 1 1 1 1 1 are all too small
Output: impossible

Input: 10 10 10 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 + 10 + 10 + 10 = 80
10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 = 100000000000
10 10 10 10 10 10 10 10 are all too big
Output: impossible

Input: 1 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 8
1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 = 1
1 1 1 1 1 1 1 1 are all too small
Output: impossible

Input: 10 10 10 10 10 10 10 10 10
Analysis:
10 + 10 + 10 + 10 + 10 + 10 + 10 + 10 + 10 = 90
10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 = 1000000000000
10 10 10 10 10 10 10 10 10 are all too big
Output: impossible


Analysis:
-3 is not equal to 24
Output: impossible

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
(3 - 2) * 1 = 1
1 2 3 are all too small
Output: impossible

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
(1 - 1) * 1 = 0
1 1 1 are all too small
Output: impossible

Input: 1 1 2
Analysis:
1 + 1 + 2 = 4
(2 - 1) * 1 = 1
1 1 2 are all too small
Output: impossible

Input: 1 1 10
Analysis:
1 + 1 + 10 = 12
(10 - 1) * 1 = 9
1 1 10 are all too small
Output: impossible

Input: 1 1 11
Analysis:
1 + 1 + 11 = 13
(11 - 1) * 1 = 10
1 1 11 are all too small
Output: impossible

Input: 1 2 2
Analysis:
1 + 2 + 2 = 5
(2 - 1) * 2 = 2
1 2 2 are all too small
Output: impossible

Input: 1 3 3
Analysis:
1 + 3 + 3 = 7
(3 - 1) * 3 = 6
1 3 3 are all too small
Output: impossible

Input: 1 4 4
Analysis:
1 + 4 + 4 = 9
(4 - 1) * 4 = 12
1 4 4 are all too small
Output: impossible

Input: 1 5 5
Analysis:
1 + 5 + 5 = 11
(5 - 1) * 5 = 20
1 5 5 are all too small
Output: impossible

Input: 1 6 6
Analysis:
1 + 6 + 6 = 13
(6 - 1) * 6 = 30
1 6 6 are all too small
Output: impossible

Input: 1 7 7
Analysis:
1 + 7 + 7 = 15
(7 - 1) * 7 = 42
1 7 7 are all too small
Output: impossible

Input: 1 8 8
Analysis:
1 + 8 + 8 = 17
(8 - 1) * 8 = 60
1 8 8 are all too small
Output: impossible

Input: 1 9 9
Analysis:
1 + 9 + 9 = 19
(9 - 1) * 9 = 80
1 9 9 are all too small
Output: impossible

Input: 1 10 10
Analysis:
1 + 10 + 10 = 21
(10 - 1) * 10 = 90
1 10 10 are all too small
Output: impossible

Input: 1 11 11
Analysis:
1 + 11 + 11 = 23
(11 - 1) * 11 = 110
1 11 11 are all too small
Output: impossible

Input: 1 12 12
Analysis:
1 + 12 + 12 = 25
(12 - 1) * 12 = 132
1 12 12 are all too small
Output: impossible

Input: 1 13 13
Analysis:
1 + 13 + 13 = 27
(13 - 1) * 13 = 156
1 13 13 are all too small
Output: impossible

Input: 1 14 14
Analysis:
1 + 14 + 14 = 29
(14 - 1) * 14 = 182
1 14 14 are all too small
Output: impossible

Input: 1 15 15
Analysis:
1 + 15 + 15 = 31
(15 - 1) * 15 = 210
1 15 15 are all too small
Output: impossible

Input: 1 16 16
Analysis:
1 + 16 + 16 = 33
(16 - 1) * 16 = 256
1 16 16 are all too small
Output: impossible

Input: 1 17 17
Analysis:
1 + 17 + 17 = 35
(17 - 1) * 17 = 306
1 17 17 are all too small
Output: impossible

Input: 1 18 18
Analysis:
1 + 18 + 18 = 37
(18 - 1) * 18 = 324
1 18 18 are all too small
Output: impossible

Input: 1 19 19
Analysis:
1 + 19 + 19 = 39
(19 - 1) * 19 = 361
1 19 19 are all too small
Output: impossible

Input: 1 20 20
Analysis:
1 + 20 + 20 = 41
(20 - 1) * 20 = 380
1 20 20 are all too small
Output: impossible

Input: 1 21 21
Analysis:
1 + 21 + 21 = 43
(21 - 1) * 21 = 418
1 21 21 are all too small
Output: impossible

Input: 1 22 22
Analysis:
1 + 22 + 22 = 45
(22 - 1) * 22 = 462
1 22 22 are all too small
Output: impossible

Input: 1 23 23
Analysis:
1 + 23 + 23 = 47
(23 - 1) * 23 = 504
1 23 23 are all too small
Output: impossible

Input: 1 24 24
Analysis:
1 + 24 + 24 = 49
(24 - 1) * 24 = 544
1 24 24 are all too small
Output: impossible


Analysis:
1.6 is not equal to 24
Output: impossible

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
(3 - 2) * 1 = 1
1 2 3 are all too small
Output: impossible

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
(1 - 1) * 1 = 0
1 1 1 are all too small
Output: impossible

Input: 1 1 1 1
Analysis:
1 + 1 + 1 + 1 = 4
(1 - 1) * 1 * 1 = 0
1 1 1 1 are all too small
Output: impossible

Input: 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 = 5
(1 - 1) * 1 * 1 * 1 = 0
1 1 1 1 1 are all too small
Output: impossible

Input: 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 = 6
(1 - 1) * 1 * 1 * 1 * 1 = 0
1 1 1 1 1 1 are all too small
Output: impossible

Input: 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 = 7
(1 - 1) * 1 * 1 * 1 * 1 * 1 = 0
1 1 1 1 1 1 1 are all too small
Output: impossible

Input: 1 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 8
(1 - 1) * 1 * 1 * 1 * 1 * 1 * 1 = 0
1 1 1 1 1 1 1 1 are all too small
Output: impossible

Input: 1 1 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 9
(1 - 1) * 1 * 1 * 1 * 1 * 1 * 1 * 1 = 0
1 1 1 1 1 1 1 1 1 are all too small
Output: impossible

Input: 1 1 1 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 10
(1 - 1) * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 = 0
1 1 1 1 1 1 1 1 1 1 are all too small
Output: impossible

Input: 1 1 1 1 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 11
(1 - 1) * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 = 0
1 1 1 1 1 1 1 1 1 1 1 are all too small
Output: impossible

Input: 1 1 1 1 1 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 12
(1 - 1) * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 = 0
1 1 1 1 1 1 1 1 1 1 1 1 are all too small
Output: impossible

Input: 1 1 1 1 1 1 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 13
(1 - 1) * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 = 0
1 1 1 1 1 1 1 1 1 1 1 1 1 are all too small
Output: impossible

Input: 1 1 1 1 1 1 1 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 14
(1 - 1) * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 = 0
1 1 1 1 1 1 1 1 1 1 1 1 1 1 are all too small
Output: impossible

Input: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 15
(1 - 1) * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 = 0
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 are all too small
Output: impossible

Input: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 16
(1 - 1) * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 = 0
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 are all too small
Output: impossible

Input: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 17
(1 - 1) * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 * 1 = 0
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 are all too small
Output: impossible

Input: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
Analysis:
1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 18
(1 - 1) * 1 * 1 *


Analysis:
40 is not equal to 24
Output: impossible

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 * 10 = 1000
10 10 10 are all too big
Output: impossible

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible

Input: 1 1 10
Analysis:
1 + 1 + 10 = 12
1 * 1 * 10 = 10
1 1 10 are all too big
Output: impossible

Input: 1 1 100
Analysis:
1 + 1 + 100 = 102
1 * 1 * 100 = 100
1 1 100 are all too big
Output: impossible

Input: 1 1 1000
Analysis:
1 + 1 + 1000 = 1002
1 * 1 * 1000 = 1000
1 1 1000 are all too big
Output: impossible

Input: 1 1 10000
Analysis:
1 + 1 + 10000 = 10002
1 * 1 * 10000 = 10000
1 1 10000 are all too big
Output: impossible

Input: 1 1 100000
Analysis:
1 + 1 + 100000 = 100002
1 * 1 * 100000 = 100000
1 1 100000 are all too big
Output: impossible

Input: 1 1 1000000
Analysis:
1 + 1 + 1000000 = 1000002
1 * 1 * 1000000 = 1000000
1 1 1000000 are all too big
Output: impossible

Input: 1 1 10000000
Analysis:
1 + 1 + 10000000 = 10000002
1 * 1 * 10000000 = 10000000
1 1 10000000 are all too big
Output: impossible

Input: 1 1 100000000
Analysis:
1 + 1 + 100000000 = 100000002
1 * 1 * 100000000 = 100000000
1 1 100000000 are all too big
Output: impossible

Input: 1 1 1000000000
Analysis:
1 + 1 + 1000000000 = 1000000002
1 * 1 * 1000000000 = 1000000000
1 1 1000000000 are all too big
Output: impossible


Analysis:
40 is not equal to 24
Output: impossible

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 * 10 = 1000
10 10 10 are all too big
Output: impossible

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible

Input: 1 1 10
Analysis:
1 + 1 + 10 = 12
1 * 1 * 10 = 10
1 1 10 are all too big
Output: impossible

Input: 1 1 100
Analysis:
1 + 1 + 100 = 102
1 * 1 * 100 = 100
1 1 100 are all too big
Output: impossible

Input: 1 1 1000
Analysis:
1 + 1 + 1000 = 1002
1 * 1 * 1000 = 1000
1 1 1000 are all too big
Output: impossible

Input: 1 1 10000
Analysis:
1 + 1 + 10000 = 10002
1 * 1 * 10000 = 10000
1 1 10000 are all too big
Output: impossible

Input: 1 1 100000
Analysis:
1 + 1 + 100000 = 100002
1 * 1 * 100000 = 100000
1 1 100000 are all too big
Output: impossible

Input: 1 1 1000000
Analysis:
1 + 1 + 1000000 = 1000002
1 * 1 * 1000000 = 1000000
1 1 1000000 are all too big
Output: impossible

Input: 1 1 10000000
Analysis:
1 + 1 + 10000000 = 10000002
1 * 1 * 10000000 = 10000000
1 1 10000000 are all too big
Output: impossible

Input: 1 1 100000000
Analysis:
1 + 1 + 100000000 = 100000002
1 * 1 * 100000000 = 100000000
1 1 100000000 are all too big
Output: impossible

Input: 1 1 1000000000
Analysis:
1 + 1 + 1000000000 = 1000000002
1 * 1 * 1000000000 = 1000000000
1 1 1000000000 are all too big
Output: impossible


node:
[{'id': 21, 'answer': '6 + 8 = 14 (left: 14)', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 21.0}, {'id': 22, 'answer': '6 / 8 = 0 (left: 0)', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 21.0}, {'id': 23, 'answer': '8 - 6 = 2 (left: 2)', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 21.0}, {'id': 24, 'answer': '8 * 6 = 48 (left: 48)', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 21.0}, {'id': 25, 'answer': '6 * 8 = 48 (left: 48)', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 21.0}, {'id': 26, 'answer': '2 + 2.6666666666666665 = 4.666666666666667 (left: 4.666666666666667)', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 21.0}, {'id': 27, 'answer': '2.6666666666666665 / 2 = 1.3333333333333334 (left: 1.3333333333333334)', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 21.0}, {'id': 28, 'answer': '2 * 2.6666666666666665 = 5.333333333333333 (left: 5.333333333333333)', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 21.0}, {'id': 29, 'answer': '2 - 2.6666666666666665 = -0.6666666666666667 (left: -0.6666666666666667)', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 21.0}, {'id': 30, 'answer': '2.6666666666666665 - 2 = 0.6666666666666667 (left: 0.6666666666666667)', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 21.0}, {'id': 31, 'answer': '8 + 5 = 13 (left: 13)', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 21.0}, {'id': 32, 'answer': '5 - 8 = -3 (left: -3)', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 21.0}, {'id': 34, 'answer': '5 * 8 = 40 (left: 40)', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 21.0}, {'id': 35, 'answer': '8 * 5 = 40 (left: 40)', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 21.0}, {'id': 33, 'answer': '8 / 5 = 1.6 (left: 1.6)', 'value': None, 'parent_node': 8, 'ancestor_value': 21.0}]
15


path: ['6 + 8 = 14 (left: 14)', '2 * 3 = 6 (left: 6 8)', '1 + 1 = 2 (left: 2 3 8)', '(left: 1 1 3 8)']


['6 + 8 = 14 (left: 14)', '2 * 3 = 6 (left: 6 8)', '1 + 1 = 2 (left: 2 3 8)', '(left: 1 1 3 8)']
(((1 + 1) * 3) + 8)


Answer: 
(((1 + 1) * 3) + 8)

