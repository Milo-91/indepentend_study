TheBloke/OpenHermes-2.5-Mistral-7B-GPTQ
temperature: 0.5, 0
date: 2024-01-18


step 1


Generator response:
4 + 4 = 8
9 + 12 = 21
12 - 4 = 8
4 * 4 = 16
9 - 12 = -3


Generated answers:
['4 + 4 = 8 ( left: 8 9 12 )', '9 + 12 = 21 ( left: 4 4 21 )', '12 - 4 = 8 ( left: 8 4 9 )', '4 * 4 = 16 ( left: 16 9 12 )', '9 - 12 = -3 ( left: 4 4 -3 )']


Analysis:
8 + 9 + 12 = 29
8 * 9 = 72
8 / 9 = 0.8888888888888889
8 - 12 = -4
Output: impossible (8 9 12)


Analysis:
4 + 4 + 21 = 29
4 * 21 - 4 = 84 - 4 = 80
(21 - 4) * 4 = 17 * 4 = 68
Output: sure (4 4 21)


Analysis:
8 + 4 + 9 = 21
8 * 4 = 32
(9 - 8) * 4 = 1 * 4 = 4
Output: impossible (8 4 9)


Analysis:
16 + 9 + 12 = 37
16 * 9 = 144
16 / 9 = 1.89
12 - 9 = 3
16 + 12 = 28
16 / 12 = 1.33
16 * 12 = 192
Output: impossible (16 9 12)


Analysis:
4 + 4 - 3 = 7
4 * 4 - 3 = 11
(4 + 4) - 3 = 8
Output: sure (4 4 -3)


node:
[{'id': 2, 'answer': '9 + 12 = 21 ( left: 4 4 21 )', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '9 - 12 = -3 ( left: 4 4 -3 )', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 1, 'answer': '4 + 4 = 8 ( left: 8 9 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '12 - 4 = 8 ( left: 8 4 9 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '4 * 4 = 16 ( left: 16 9 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}]
5


step 2


Generator response:
4 + 4 = 8
21 + 4 = 25
4 * 4 = 16
21 - 4 = 17
4 / 2 = 2.0000000000000003


Generated answers:
['4 + 4 = 8 ( left: 8 21 )', '21 + 4 = 25 ( left: 25 4 )', '4 * 4 = 16 ( left: 16 21 )', '21 - 4 = 17 ( left: 17 4 )', '4 / 2 = 2.0000000000000003 ( left: 4 2.00000000000000031 )']


Analysis:
8 + 21 = 29
8 * 21 = 168
Output: impossible (8 21)


Analysis:
25 + 4 = 29
25 - 4 = 21
25 * 4 = 100
25 / 4 = 6.25
Output: impossible (25 4)


Analysis:
16 + 21 = 37
16 - 21 = -5
16 * 21 = 336
16 / 21 = 0.76
Output: impossible (16 21)


Analysis:
17 + 4 = 21
17 - 4 = 13
17 * 4 = 68
17 / 4 = 4.25
Output: impossible (17 4)


Analysis:
4 + 2.00000000000000031 = 6.000000000000001
Output: impossible (4 2.00000000000000031)


node:
[{'id': 6, 'answer': '4 + 4 = 8 ( left: 8 21 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}, {'id': 7, 'answer': '21 + 4 = 25 ( left: 25 4 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}, {'id': 8, 'answer': '4 * 4 = 16 ( left: 16 21 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}, {'id': 9, 'answer': '21 - 4 = 17 ( left: 17 4 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}, {'id': 10, 'answer': '4 / 2 = 2.0000000000000003 ( left: 4 2.00000000000000031 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}]
5


step 3


Generator response:
8 + 21 = 29
21 - 8 = 13
21 * 8 = 168
21 / 8 = 2.625



Generated answers:
['8 + 21 = 29 ( left: 29 )', '21 - 8 = 13 ( left: 13 )', '21 * 8 = 168 ( left: 168 )', '21 / 8 = 2.625 ( left: 2.625 )', '21 / 2 = 10.50000000000000143142150831313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131 ( left: 8 )']


Analysis:
29 is not equal to 24
Output: impossible (29)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 / 10 = 1
Output: impossible (10 10 10)


Analysis:
13 is not equal to 24
Output: impossible (13)

Input: 10 10
Analysis:
10 + 10 = 20
Output: sure (10 10)


Analysis:
168 is not equal to 24
Output: impossible (168)


Analysis:
2.625 is not equal to 24
Output: impossible (2.625)


Analysis:
8 is not equal to 24
Output: impossible (8)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)


node:
[{'id': 11, 'answer': '8 + 21 = 29 ( left: 29 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}, {'id': 12, 'answer': '21 - 8 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}, {'id': 13, 'answer': '21 * 8 = 168 ( left: 168 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}, {'id': 14, 'answer': '21 / 8 = 2.625 ( left: 2.625 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}, {'id': 15, 'answer': '21 / 2 = 10.50000000000000143142150831313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131 ( left: 8 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}]
5


linked list:
000 -> 2 -> 5 -> 1 -> 3 -> 4

001

002 -> 6 -> 7 -> 8 -> 9 -> 10

003

004

005

006 -> 11 -> 12 -> 13 -> 14 -> 15

007

008

009

010

011

012

013

014

015

016

017

018

019

020

021

022

023

024

025

026

027

028

029

030

031

032

033

034

035

036

037

038

039

040

041

042

043

044

045

046

047

048

049

050

051

052

053

054

055

056

057

058

059

060

061

062

063

064

065

066

067

068

069

070

071

072

073

074

075

076

077

078

079

080

081

082

083

084

085

086

087

088

089

090

091

092

093

094

095

096

097

098

099

100

101

102

103

104

105

106

107

108

109

110

111

112

113

114

115

116

117

118

119

120

121

122

123

124

125

126

127

128

129

130

131

132

133

134

135

136

137

138

139

140

141

142

143

144

145

146

147

148

149

150

151

152

153

154

155


path: ['8 + 21 = 29 ( left: 29 )', '4 + 4 = 8 ( left: 8 21 )', '9 + 12 = 21 ( left: 4 4 21 )', '( left: 4 4 9 12 )']


['8 + 21 = 29 ( left: 29 )', '4 + 4 = 8 ( left: 8 21 )', '9 + 12 = 21 ( left: 4 4 21 )', '( left: 4 4 9 12 )']
 ( ( 4 + 4 ) + ( 9 + 12 ) ) 


Answer: 
 ( ( 4 + 4 ) + ( 9 + 12 ) ) 


d_thres: 18.0

step 0


distance: 0
d_threshold: 18.0

input_node:{'id': 2, 'answer': '9 + 12 = 21 ( left: 4 4 21 )', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


distance: 9
d_threshold: 18.0

input_node:{'id': 6, 'answer': '4 + 4 = 8 ( left: 8 21 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}


step 2


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 11, 'answer': '8 + 21 = 29 ( left: 29 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 12, 'answer': '21 - 8 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 13, 'answer': '21 * 8 = 168 ( left: 168 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 14, 'answer': '21 / 8 = 2.625 ( left: 2.625 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 15, 'answer': '21 / 2 = 10.50000000000000143142150831313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131 ( left: 8 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 7, 'answer': '21 + 4 = 25 ( left: 25 4 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}


step 2


Generator response:
25 - 4 = 21
25 * 4 = 100
25 / 4 = 6.25
4 + 25 = 29
25 - 4 = 21


Generated answers:
['25 - 4 = 21 ( left: 21 )', '25 * 4 = 100 ( left: 100 )', '25 / 4 = 6.25 ( left: 6.25 )', '4 + 25 = 29 ( left: 29 )', '25 - 4 = 21 ( left: 21 )']


Analysis:
21 is not equal to 24
Output: impossible (21)


Analysis:
100 is not equal to 24
Output: impossible (100)


Analysis:
6.25 is not equal to 24
Output: impossible (6.25)


Analysis:
29 is not equal to 24
Output: impossible (29)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 / 10 = 1
Output: impossible (10 10 10)


Analysis:
21 is not equal to 24
Output: impossible (21)


node:
[{'id': 16, 'answer': '25 - 4 = 21 ( left: 21 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}, {'id': 17, 'answer': '25 * 4 = 100 ( left: 100 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}, {'id': 18, 'answer': '25 / 4 = 6.25 ( left: 6.25 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}, {'id': 19, 'answer': '4 + 25 = 29 ( left: 29 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}, {'id': 20, 'answer': '25 - 4 = 21 ( left: 21 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 16, 'answer': '25 - 4 = 21 ( left: 21 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 17, 'answer': '25 * 4 = 100 ( left: 100 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 18, 'answer': '25 / 4 = 6.25 ( left: 6.25 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 19, 'answer': '4 + 25 = 29 ( left: 29 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 20, 'answer': '25 - 4 = 21 ( left: 21 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 8, 'answer': '4 * 4 = 16 ( left: 16 21 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}


step 2


Generator response:
16 + 21 = 37
21 - 16 = 5
16 / 2 = 8
21 / 2 = 10.5
16 * 2 = 32


Generated answers:
['16 + 21 = 37 ( left: 37 )', '21 - 16 = 5 ( left: 5 )', '16 / 2 = 8 ( left: 81 )', '21 / 2 = 10.5 ( left: 16 )', '16 * 2 = 32 ( left: 321 )']


Analysis:
37 is not equal to 24
Output: impossible (37)


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
81 is not equal to 24
Output: impossible (81)


Analysis:
16 is not equal to 24
Output: impossible (16)


Analysis:
321 is not equal to 24
Output: impossible (321)


node:
[{'id': 21, 'answer': '16 + 21 = 37 ( left: 37 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}, {'id': 22, 'answer': '21 - 16 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}, {'id': 23, 'answer': '16 / 2 = 8 ( left: 81 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}, {'id': 24, 'answer': '21 / 2 = 10.5 ( left: 16 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}, {'id': 25, 'answer': '16 * 2 = 32 ( left: 321 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 21, 'answer': '16 + 21 = 37 ( left: 37 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 22, 'answer': '21 - 16 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 23, 'answer': '16 / 2 = 8 ( left: 81 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 24, 'answer': '21 / 2 = 10.5 ( left: 16 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 25, 'answer': '16 * 2 = 32 ( left: 321 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 9, 'answer': '21 - 4 = 17 ( left: 17 4 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}


step 2


Generator response:
17 - 4 = 13
17 + 4 = 21
17 * 4 = 68
4 / 17 = 0.2352941176
4 - 17 = -13


Generated answers:
['17 - 4 = 13 ( left: 13 )', '17 + 4 = 21 ( left: 21 )', '17 * 4 = 68 ( left: 68 )', '4 / 17 = 0.2352941176 ( left: 0.2352941176 )', '4 - 17 = -13 ( left: -13 )']


Analysis:
13 is not equal to 24
Output: impossible (13)

Input: 10 10
Analysis:
10 + 10 = 20
Output: sure (10 10)


Analysis:
21 is not equal to 24
Output: impossible (21)


Analysis:
68 is not equal to 24
Output: impossible (68)

Input: 100
Analysis:
100 is not equal to 24
Output: impossible (100)


Analysis:
0.2352941176 is not equal to 24
Output: impossible (0.2352941176)


Analysis:
-13 is not equal to 24
Output: impossible (-13)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 / 10 = 1
Output: impossible (10 10 10)


node:
[{'id': 26, 'answer': '17 - 4 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}, {'id': 27, 'answer': '17 + 4 = 21 ( left: 21 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}, {'id': 28, 'answer': '17 * 4 = 68 ( left: 68 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}, {'id': 29, 'answer': '4 / 17 = 0.2352941176 ( left: 0.2352941176 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}, {'id': 30, 'answer': '4 - 17 = -13 ( left: -13 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 26, 'answer': '17 - 4 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 27, 'answer': '17 + 4 = 21 ( left: 21 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 28, 'answer': '17 * 4 = 68 ( left: 68 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 29, 'answer': '4 / 17 = 0.2352941176 ( left: 0.2352941176 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 30, 'answer': '4 - 17 = -13 ( left: -13 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 10, 'answer': '4 / 2 = 2.0000000000000003 ( left: 4 2.00000000000000031 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}


step 2


Generator response:
4 + 2 = 6
4 / 2 = 2
2 * 4 = 8
4 - 2 = 2
2 - 4 = -2


Generated answers:
['4 + 2 = 6 ( left: 6.00000000000000031 )', '4 / 2 = 2 ( left: 2.00000000000000031 )', '2 * 4 = 8 ( left: 8 .00000000000000031 )', '4 - 2 = 2 ( left: 2.00000000000000031 )', '2 - 4 = -2 ( left: -2 .00000000000000031 )']


Analysis:
6.00000000000000031 is not equal to 24
Output: impossible (6.00000000000000031)


Analysis:
2.00000000000000031 is not equal to 24
Output: impossible (2.00000000000000031)


Analysis:
8.00000000000000031 is not equal to 24
Output: impossible (8.00000000000000031)


Analysis:
2.00000000000000031 is not equal to 24
Output: impossible (2.00000000000000031)


Analysis:
-2.00000000000000031 is not equal to 24
Output: impossible (-2.00000000000000031)


node:
[{'id': 31, 'answer': '4 + 2 = 6 ( left: 6.00000000000000031 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 32, 'answer': '4 / 2 = 2 ( left: 2.00000000000000031 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 33, 'answer': '2 * 4 = 8 ( left: 8 .00000000000000031 )', 'value': None, 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 34, 'answer': '4 - 2 = 2 ( left: 2.00000000000000031 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 35, 'answer': '2 - 4 = -2 ( left: -2 .00000000000000031 )', 'value': None, 'parent_node': 10, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 31, 'answer': '4 + 2 = 6 ( left: 6.00000000000000031 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 32, 'answer': '4 / 2 = 2 ( left: 2.00000000000000031 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}


distance: 19.0
d_threshold: 18.0

(prune)input_node:{'id': 33, 'answer': '2 * 4 = 8 ( left: 8 .00000000000000031 )', 'value': None, 'parent_node': 10, 'ancestor_value': 11.0}


distance: 18.0
d_threshold: 18.0

(prune)input_node:{'id': 34, 'answer': '4 - 2 = 2 ( left: 2.00000000000000031 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}


distance: 19.0
d_threshold: 18.0

(prune)input_node:{'id': 35, 'answer': '2 - 4 = -2 ( left: -2 .00000000000000031 )', 'value': None, 'parent_node': 10, 'ancestor_value': 11.0}


distance: 0
d_threshold: 18.0

input_node:{'id': 5, 'answer': '9 - 12 = -3 ( left: 4 4 -3 )', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
4 + 4 = 8
4 * -3 = -12
-3 + 4 = 1
-3 / 4 = -0.75
4 - 4 = 0


Generated answers:
['4 + 4 = 8 ( left: 8 -3 )', '4 * -3 = -12 ( left: 4 -12 )', '-3 + 4 = 1 ( left: 1 4 )', '-3 / 4 = -0.75 ( left: -0.75 4 )', '4 - 4 = 0 ( left: 0 -3 )']


Analysis:
8 - 3 = 5
-3 is not equal to 24
Output: impossible (8 -3)


Analysis:
4 - 12 = -8
Output: impossible (4 -12)


Analysis:
1 + 4 = 5
1 * 4 = 4
Output: impossible (1 4)


Analysis:
-0.75 + 4 = 3.25
-0.75 * 4 = -3
Output: impossible (-0.75 4)


Analysis:
0 - 3 = -3
0 * -3 = 0
Output: impossible (0 -3)


node:
[{'id': 36, 'answer': '4 + 4 = 8 ( left: 8 -3 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 10.0}, {'id': 37, 'answer': '4 * -3 = -12 ( left: 4 -12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 10.0}, {'id': 38, 'answer': '-3 + 4 = 1 ( left: 1 4 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 10.0}, {'id': 39, 'answer': '-3 / 4 = -0.75 ( left: -0.75 4 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 10.0}, {'id': 40, 'answer': '4 - 4 = 0 ( left: 0 -3 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 10.0}]
5


distance: 9
d_threshold: 18.0

input_node:{'id': 36, 'answer': '4 + 4 = 8 ( left: 8 -3 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 10.0}


step 2


Generator response:
8 + 3 = 11
8 / 3 = 2.6667
-3 - 8 = -11
-3 * 8 = -24
-3 - 8 = -11


Generated answers:
['8 + 3 = 11 ( left: -11 )', '8 / 3 = 2.6667 ( left: -2.6667 )', '-3 - 8 = -11 ( left: -11 )', '-3 * 8 = -24 ( left: -24 )', '-3 - 8 = -11 ( left: -11 )']


Analysis:
-11 is not equal to 24
Output: impossible (-11)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
-2.6667 is not equal to 24
Output: impossible (-2.6667)


Analysis:
-11 is not equal to 24
Output: impossible (-11)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
-24 is not equal to 24
Output: impossible (-24)


Analysis:
-11 is not equal to 24
Output: impossible (-11)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


node:
[{'id': 41, 'answer': '8 + 3 = 11 ( left: -11 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 11.0}, {'id': 42, 'answer': '8 / 3 = 2.6667 ( left: -2.6667 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 11.0}, {'id': 43, 'answer': '-3 - 8 = -11 ( left: -11 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 11.0}, {'id': 44, 'answer': '-3 * 8 = -24 ( left: -24 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 11.0}, {'id': 45, 'answer': '-3 - 8 = -11 ( left: -11 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 41, 'answer': '8 + 3 = 11 ( left: -11 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 42, 'answer': '8 / 3 = 2.6667 ( left: -2.6667 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 43, 'answer': '-3 - 8 = -11 ( left: -11 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 44, 'answer': '-3 * 8 = -24 ( left: -24 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 45, 'answer': '-3 - 8 = -11 ( left: -11 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 37, 'answer': '4 * -3 = -12 ( left: 4 -12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 10.0}


step 2


Generator response:
4 + 12 = 16
12 / -12 = -1
4 * -12 = -48
4 + 12 = 16
4 - 12 = -8


Generated answers:
['4 + 12 = 16 ( left: -16 )', '12 / -12 = -1 ( left: 4 - )', '4 * -12 = -48 ( left: -48 )', '4 + 12 = 16 ( left: -16 )', '4 - 12 = -8 ( left: --8 )']


Analysis:
-16 is not equal to 24
Output: impossible (-16)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
4 - is not equal to 24
Output: impossible (4 -)


Analysis:
-48 is not equal to 24
Output: impossible (-48)


Analysis:
-16 is not equal to 24
Output: impossible (-16)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
--8 is not equal to 24
Output: impossible (--8)


node:
[{'id': 46, 'answer': '4 + 12 = 16 ( left: -16 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 11.0}, {'id': 47, 'answer': '12 / -12 = -1 ( left: 4 - )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 11.0}, {'id': 48, 'answer': '4 * -12 = -48 ( left: -48 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 11.0}, {'id': 49, 'answer': '4 + 12 = 16 ( left: -16 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 11.0}, {'id': 50, 'answer': '4 - 12 = -8 ( left: --8 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 46, 'answer': '4 + 12 = 16 ( left: -16 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 47, 'answer': '12 / -12 = -1 ( left: 4 - )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 48, 'answer': '4 * -12 = -48 ( left: -48 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 49, 'answer': '4 + 12 = 16 ( left: -16 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 50, 'answer': '4 - 12 = -8 ( left: --8 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 38, 'answer': '-3 + 4 = 1 ( left: 1 4 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 10.0}


step 2


Generator response:
1 + 4 = 5
4 / 1 = 4
4 * 1 = 4
1 - 4 = -3
4 + 1 = 5


Generated answers:
['1 + 4 = 5 ( left: 5 )', '4 / 1 = 4 ( left: 4 )', '4 * 1 = 4 ( left: 4 )', '1 - 4 = -3 ( left: -3 )', '4 + 1 = 5 ( left: 5 )']


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
4 is not equal to 24
Output: impossible (4)


Analysis:
4 is not equal to 24
Output: impossible (4)


Analysis:
-3 is not equal to 24
Output: impossible (-3)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


node:
[{'id': 51, 'answer': '1 + 4 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}, {'id': 52, 'answer': '4 / 1 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}, {'id': 53, 'answer': '4 * 1 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}, {'id': 54, 'answer': '1 - 4 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}, {'id': 55, 'answer': '4 + 1 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 51, 'answer': '1 + 4 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 52, 'answer': '4 / 1 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 53, 'answer': '4 * 1 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 54, 'answer': '1 - 4 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 55, 'answer': '4 + 1 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 39, 'answer': '-3 / 4 = -0.75 ( left: -0.75 4 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 10.0}


step 2


Generator response:
-0.75 + 4 = 3.25
-0.75 - 4 = -3.75
-0.75 * 4 = -3
-0.75 / 4 = -0.1875
-0.75 + 4 = 3.25


Generated answers:
['-0.75 + 4 = 3.25 ( left: 3.25 )', '-0.75 - 4 = -3.75 ( left: -3.75 )', '-0.75 * 4 = -3 ( left: -3 )', '-0.75 / 4 = -0.1875 ( left: -0.1875 )', '-0.75 + 4 = 3.25 ( left: 3.25 )']


Analysis:
3.25 is not equal to 24
Output: impossible (3.25)


Analysis:
-3.75 is not equal to 24
Output: impossible (-3.75)


Analysis:
-3 is not equal to 24
Output: impossible (-3)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
-0.1875 is not equal to 24
Output: impossible (-0.1875)


Analysis:
3.25 is not equal to 24
Output: impossible (3.25)


node:
[{'id': 56, 'answer': '-0.75 + 4 = 3.25 ( left: 3.25 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}, {'id': 57, 'answer': '-0.75 - 4 = -3.75 ( left: -3.75 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}, {'id': 58, 'answer': '-0.75 * 4 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}, {'id': 59, 'answer': '-0.75 / 4 = -0.1875 ( left: -0.1875 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}, {'id': 60, 'answer': '-0.75 + 4 = 3.25 ( left: 3.25 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 56, 'answer': '-0.75 + 4 = 3.25 ( left: 3.25 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 57, 'answer': '-0.75 - 4 = -3.75 ( left: -3.75 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 58, 'answer': '-0.75 * 4 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 59, 'answer': '-0.75 / 4 = -0.1875 ( left: -0.1875 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 60, 'answer': '-0.75 + 4 = 3.25 ( left: 3.25 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 40, 'answer': '4 - 4 = 0 ( left: 0 -3 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 10.0}


step 2


Generator response:
0 + 3 = 3
0 - 3 = -3
0 * -3 = 0
-3 / -3 = 1
-3 + 0 = -3


Generated answers:
['0 + 3 = 3 ( left: -3 )', '0 - 3 = -3 ( left: --3 )', '0 * -3 = 0 ( left: 0 )', '-3 / -3 = 1 ( left: 0 )', '-3 + 0 = -3 ( left: -3 )']


Analysis:
-3 is not equal to 24
Output: impossible (-3)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
--3 is not equal to 24
Output: impossible (--3)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
-3 is not equal to 24
Output: impossible (-3)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


node:
[{'id': 61, 'answer': '0 + 3 = 3 ( left: -3 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 11.0}, {'id': 62, 'answer': '0 - 3 = -3 ( left: --3 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 11.0}, {'id': 63, 'answer': '0 * -3 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 11.0}, {'id': 64, 'answer': '-3 / -3 = 1 ( left: 0 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 11.0}, {'id': 65, 'answer': '-3 + 0 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 61, 'answer': '0 + 3 = 3 ( left: -3 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 62, 'answer': '0 - 3 = -3 ( left: --3 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 63, 'answer': '0 * -3 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 64, 'answer': '-3 / -3 = 1 ( left: 0 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 65, 'answer': '-3 + 0 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 1, 'answer': '4 + 4 = 8 ( left: 8 9 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
8 + 9 = 17
12 - 8 = 4
8 * 9 = 72
9 + 12 = 21
8 / 9 = 0.8888888888888889


Generated answers:
['8 + 9 = 17 ( left: 17 12 )', '12 - 8 = 4 ( left: 4 9 )', '8 * 9 = 72 ( left: 72 12 )', '9 + 12 = 21 ( left: 8 21 )', '8 / 9 = 0.8888888888888889 ( left: 0.8888888888888889 12 )']


Analysis:
17 + 12 = 29
17 - 12 = 5
17 * 12 = 204
17 / 12 = 1.41
Output: impossible (17 12)


Analysis:
4 + 9 = 13
4 * 9 = 36
Output: impossible (4 9)


Analysis:
72 + 12 = 84
72 - 12 = 60
72 * 12 = 864
72 / 12 = 6
Output: impossible (72 12)


Analysis:
8 + 21 = 29
8 * 21 = 168
Output: impossible (8 21)


Analysis:
0.8888888888888889 + 12 = 12.88888888888889
Output: sure (0.8888888888888889 12)


node:
[{'id': 66, 'answer': '8 + 9 = 17 ( left: 17 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 67, 'answer': '12 - 8 = 4 ( left: 4 9 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 68, 'answer': '8 * 9 = 72 ( left: 72 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 69, 'answer': '9 + 12 = 21 ( left: 8 21 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 70, 'answer': '8 / 9 = 0.8888888888888889 ( left: 0.8888888888888889 12 )', 'value': 'sure', 'parent_node': 1, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 66, 'answer': '8 + 9 = 17 ( left: 17 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 67, 'answer': '12 - 8 = 4 ( left: 4 9 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 68, 'answer': '8 * 9 = 72 ( left: 72 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 69, 'answer': '9 + 12 = 21 ( left: 8 21 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 70, 'answer': '8 / 9 = 0.8888888888888889 ( left: 0.8888888888888889 12 )', 'value': 'sure', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
0.8888888888888889 * 12 = 10.666666666666667
0.8888888888888889 + 12 = 12.88888888888889
12 / 0.8888888888888889 = 13.191847815749997
12 - 0.8888888888888889 = 11.11111111111111
12 * 0.8888888888888889 = 10.666666666666667


Generated answers:
['0.8888888888888889 * 12 = 10.666666666666667 ( left: 10.666666666666667 )', '0.8888888888888889 + 12 = 12.88888888888889 ( left: 12.88888888888889 )', '12 / 0.8888888888888889 = 13.191847815749997 ( left: 13.191847815749997 )', '12 - 0.8888888888888889 = 11.11111111111111 ( left: 11.11111111111111 )', '12 * 0.8888888888888889 = 10.666666666666667 ( left: 10.666666666666667 )']


Analysis:
10.666666666666667 is not equal to 24
Output: impossible (10.666666666666667)


Analysis:
12.88888888888889 is not equal to 24
Output: impossible (12.88888888888889)


Analysis:
13.191847815749997 is not equal to 24
Output: impossible (13.191847815749997)


Analysis:
11.11111111111111 is not equal to 24
Output: impossible (11.11111111111111)


Analysis:
10.666666666666667 is not equal to 24
Output: impossible (10.666666666666667)


node:
[{'id': 71, 'answer': '0.8888888888888889 * 12 = 10.666666666666667 ( left: 10.666666666666667 )', 'value': 'impossible', 'parent_node': 70, 'ancestor_value': 11.0}, {'id': 72, 'answer': '0.8888888888888889 + 12 = 12.88888888888889 ( left: 12.88888888888889 )', 'value': 'impossible', 'parent_node': 70, 'ancestor_value': 11.0}, {'id': 73, 'answer': '12 / 0.8888888888888889 = 13.191847815749997 ( left: 13.191847815749997 )', 'value': 'impossible', 'parent_node': 70, 'ancestor_value': 11.0}, {'id': 74, 'answer': '12 - 0.8888888888888889 = 11.11111111111111 ( left: 11.11111111111111 )', 'value': 'impossible', 'parent_node': 70, 'ancestor_value': 11.0}, {'id': 75, 'answer': '12 * 0.8888888888888889 = 10.666666666666667 ( left: 10.666666666666667 )', 'value': 'impossible', 'parent_node': 70, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 71, 'answer': '0.8888888888888889 * 12 = 10.666666666666667 ( left: 10.666666666666667 )', 'value': 'impossible', 'parent_node': 70, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 72, 'answer': '0.8888888888888889 + 12 = 12.88888888888889 ( left: 12.88888888888889 )', 'value': 'impossible', 'parent_node': 70, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 73, 'answer': '12 / 0.8888888888888889 = 13.191847815749997 ( left: 13.191847815749997 )', 'value': 'impossible', 'parent_node': 70, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 74, 'answer': '12 - 0.8888888888888889 = 11.11111111111111 ( left: 11.11111111111111 )', 'value': 'impossible', 'parent_node': 70, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 75, 'answer': '12 * 0.8888888888888889 = 10.666666666666667 ( left: 10.666666666666667 )', 'value': 'impossible', 'parent_node': 70, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 3, 'answer': '12 - 4 = 8 ( left: 8 4 9 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
8 + 4 = 12
4 / 2 = 2
9 + 8 = 17
8 * 4 = 32
4 - 8 = -4


Generated answers:
['8 + 4 = 12 ( left: 12 9 )', '4 / 2 = 2 ( left: 8 9 )', '9 + 8 = 17 ( left: 17 4 )', '8 * 4 = 32 ( left: 32 9 )', '4 - 8 = -4 ( left: -4 9 )']


Analysis:
12 + 9 = 21
12 - 9 = 3
12 * 9 = 108
12 / 9 = 1.33
Output: impossible (12 9)


Analysis:
8 + 9 = 17
8 * 9 = 72
Output: impossible (8 9)


Analysis:
17 + 4 = 21
17 - 4 = 13
17 * 4 = 68
17 / 4 = 4.25
Output: impossible (17 4)


Analysis:
32 + 9 = 41
32 - 9 = 23
32 * 9 = 288
32 / 9 = 3.55
Output: impossible (32 9)


Analysis:
-4 + 9 = 5
-4 * 9 = -36
Output: impossible (-4 9)


node:
[{'id': 76, 'answer': '8 + 4 = 12 ( left: 12 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 77, 'answer': '4 / 2 = 2 ( left: 8 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 78, 'answer': '9 + 8 = 17 ( left: 17 4 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 79, 'answer': '8 * 4 = 32 ( left: 32 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 80, 'answer': '4 - 8 = -4 ( left: -4 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 76, 'answer': '8 + 4 = 12 ( left: 12 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 77, 'answer': '4 / 2 = 2 ( left: 8 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 78, 'answer': '9 + 8 = 17 ( left: 17 4 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 79, 'answer': '8 * 4 = 32 ( left: 32 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 80, 'answer': '4 - 8 = -4 ( left: -4 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 4, 'answer': '4 * 4 = 16 ( left: 16 9 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
16 + 9 = 25
16 - 9 = 7
12 + 9 = 21
16 * 9 = 144
9 * 12 = 108


Generated answers:
['16 + 9 = 25 ( left: 25 12 )', '16 - 9 = 7 ( left: 7 12 )', '12 + 9 = 21 ( left: 16 21 )', '16 * 9 = 144 ( left: 144 12 )', '9 * 12 = 108 ( left: 16 108 )']


Analysis:
25 + 12 = 37
25 - 12 = 13
25 * 12 = 300
25 / 12 = 2.08
Output: impossible (25 12)


Analysis:
7 + 12 = 19
7 * 12 = 84
12 - 7 = 5
Output: impossible (7 12)


Analysis:
16 + 21 = 37
16 - 21 = -5
16 * 21 = 336
16 / 21 = 0.76
Output: impossible (16 21)


Analysis:
144 + 12 = 156
144 - 12 = 132
144 * 12 = 1728
144 / 12 = 12
Output: impossible (144 12)


Analysis:
16 + 108 = 124
Output: impossible (16 108)


node:
[{'id': 81, 'answer': '16 + 9 = 25 ( left: 25 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 82, 'answer': '16 - 9 = 7 ( left: 7 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 83, 'answer': '12 + 9 = 21 ( left: 16 21 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 84, 'answer': '16 * 9 = 144 ( left: 144 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 85, 'answer': '9 * 12 = 108 ( left: 16 108 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 81, 'answer': '16 + 9 = 25 ( left: 25 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 82, 'answer': '16 - 9 = 7 ( left: 7 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 83, 'answer': '12 + 9 = 21 ( left: 16 21 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 84, 'answer': '16 * 9 = 144 ( left: 144 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 85, 'answer': '9 * 12 = 108 ( left: 16 108 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


all_nodes:
{'id': 0, 'answer': '4 4 9 12', 'value': None, 'parent_node': None, 'ancestor_value': None}
{'id': 1, 'answer': '4 + 4 = 8 ( left: 8 9 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 2, 'answer': '9 + 12 = 21 ( left: 4 4 21 )', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 3, 'answer': '12 - 4 = 8 ( left: 8 4 9 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 4, 'answer': '4 * 4 = 16 ( left: 16 9 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 5, 'answer': '9 - 12 = -3 ( left: 4 4 -3 )', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 6, 'answer': '4 + 4 = 8 ( left: 8 21 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}
{'id': 7, 'answer': '21 + 4 = 25 ( left: 25 4 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}
{'id': 8, 'answer': '4 * 4 = 16 ( left: 16 21 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}
{'id': 9, 'answer': '21 - 4 = 17 ( left: 17 4 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}
{'id': 10, 'answer': '4 / 2 = 2.0000000000000003 ( left: 4 2.00000000000000031 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}
{'id': 11, 'answer': '8 + 21 = 29 ( left: 29 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}
{'id': 12, 'answer': '21 - 8 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}
{'id': 13, 'answer': '21 * 8 = 168 ( left: 168 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}
{'id': 14, 'answer': '21 / 8 = 2.625 ( left: 2.625 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}
{'id': 15, 'answer': '21 / 2 = 10.50000000000000143142150831313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131 ( left: 8 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}
{'id': 16, 'answer': '25 - 4 = 21 ( left: 21 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}
{'id': 17, 'answer': '25 * 4 = 100 ( left: 100 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}
{'id': 18, 'answer': '25 / 4 = 6.25 ( left: 6.25 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}
{'id': 19, 'answer': '4 + 25 = 29 ( left: 29 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}
{'id': 20, 'answer': '25 - 4 = 21 ( left: 21 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}
{'id': 21, 'answer': '16 + 21 = 37 ( left: 37 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}
{'id': 22, 'answer': '21 - 16 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}
{'id': 23, 'answer': '16 / 2 = 8 ( left: 81 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}
{'id': 24, 'answer': '21 / 2 = 10.5 ( left: 16 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}
{'id': 25, 'answer': '16 * 2 = 32 ( left: 321 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}
{'id': 26, 'answer': '17 - 4 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}
{'id': 27, 'answer': '17 + 4 = 21 ( left: 21 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}
{'id': 28, 'answer': '17 * 4 = 68 ( left: 68 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}
{'id': 29, 'answer': '4 / 17 = 0.2352941176 ( left: 0.2352941176 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}
{'id': 30, 'answer': '4 - 17 = -13 ( left: -13 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}
{'id': 31, 'answer': '4 + 2 = 6 ( left: 6.00000000000000031 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 32, 'answer': '4 / 2 = 2 ( left: 2.00000000000000031 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 33, 'answer': '2 * 4 = 8 ( left: 8 .00000000000000031 )', 'value': None, 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 34, 'answer': '4 - 2 = 2 ( left: 2.00000000000000031 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 35, 'answer': '2 - 4 = -2 ( left: -2 .00000000000000031 )', 'value': None, 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 36, 'answer': '4 + 4 = 8 ( left: 8 -3 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 10.0}
{'id': 37, 'answer': '4 * -3 = -12 ( left: 4 -12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 10.0}
{'id': 38, 'answer': '-3 + 4 = 1 ( left: 1 4 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 10.0}
{'id': 39, 'answer': '-3 / 4 = -0.75 ( left: -0.75 4 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 10.0}
{'id': 40, 'answer': '4 - 4 = 0 ( left: 0 -3 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 10.0}
{'id': 41, 'answer': '8 + 3 = 11 ( left: -11 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 11.0}
{'id': 42, 'answer': '8 / 3 = 2.6667 ( left: -2.6667 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 11.0}
{'id': 43, 'answer': '-3 - 8 = -11 ( left: -11 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 11.0}
{'id': 44, 'answer': '-3 * 8 = -24 ( left: -24 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 11.0}
{'id': 45, 'answer': '-3 - 8 = -11 ( left: -11 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 11.0}
{'id': 46, 'answer': '4 + 12 = 16 ( left: -16 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 11.0}
{'id': 47, 'answer': '12 / -12 = -1 ( left: 4 - )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 11.0}
{'id': 48, 'answer': '4 * -12 = -48 ( left: -48 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 11.0}
{'id': 49, 'answer': '4 + 12 = 16 ( left: -16 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 11.0}
{'id': 50, 'answer': '4 - 12 = -8 ( left: --8 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 11.0}
{'id': 51, 'answer': '1 + 4 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 52, 'answer': '4 / 1 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 53, 'answer': '4 * 1 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 54, 'answer': '1 - 4 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 55, 'answer': '4 + 1 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 56, 'answer': '-0.75 + 4 = 3.25 ( left: 3.25 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 57, 'answer': '-0.75 - 4 = -3.75 ( left: -3.75 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 58, 'answer': '-0.75 * 4 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 59, 'answer': '-0.75 / 4 = -0.1875 ( left: -0.1875 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 60, 'answer': '-0.75 + 4 = 3.25 ( left: 3.25 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 61, 'answer': '0 + 3 = 3 ( left: -3 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 11.0}
{'id': 62, 'answer': '0 - 3 = -3 ( left: --3 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 11.0}
{'id': 63, 'answer': '0 * -3 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 11.0}
{'id': 64, 'answer': '-3 / -3 = 1 ( left: 0 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 11.0}
{'id': 65, 'answer': '-3 + 0 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 11.0}
{'id': 66, 'answer': '8 + 9 = 17 ( left: 17 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 67, 'answer': '12 - 8 = 4 ( left: 4 9 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 68, 'answer': '8 * 9 = 72 ( left: 72 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 69, 'answer': '9 + 12 = 21 ( left: 8 21 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 70, 'answer': '8 / 9 = 0.8888888888888889 ( left: 0.8888888888888889 12 )', 'value': 'sure', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 71, 'answer': '0.8888888888888889 * 12 = 10.666666666666667 ( left: 10.666666666666667 )', 'value': 'impossible', 'parent_node': 70, 'ancestor_value': 11.0}
{'id': 72, 'answer': '0.8888888888888889 + 12 = 12.88888888888889 ( left: 12.88888888888889 )', 'value': 'impossible', 'parent_node': 70, 'ancestor_value': 11.0}
{'id': 73, 'answer': '12 / 0.8888888888888889 = 13.191847815749997 ( left: 13.191847815749997 )', 'value': 'impossible', 'parent_node': 70, 'ancestor_value': 11.0}
{'id': 74, 'answer': '12 - 0.8888888888888889 = 11.11111111111111 ( left: 11.11111111111111 )', 'value': 'impossible', 'parent_node': 70, 'ancestor_value': 11.0}
{'id': 75, 'answer': '12 * 0.8888888888888889 = 10.666666666666667 ( left: 10.666666666666667 )', 'value': 'impossible', 'parent_node': 70, 'ancestor_value': 11.0}
{'id': 76, 'answer': '8 + 4 = 12 ( left: 12 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 77, 'answer': '4 / 2 = 2 ( left: 8 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 78, 'answer': '9 + 8 = 17 ( left: 17 4 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 79, 'answer': '8 * 4 = 32 ( left: 32 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 80, 'answer': '4 - 8 = -4 ( left: -4 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 81, 'answer': '16 + 9 = 25 ( left: 25 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 82, 'answer': '16 - 9 = 7 ( left: 7 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 83, 'answer': '12 + 9 = 21 ( left: 16 21 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 84, 'answer': '16 * 9 = 144 ( left: 144 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 85, 'answer': '9 * 12 = 108 ( left: 16 108 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


linked list:
000 -> 2 -> 5 -> 1 -> 3 -> 4

001 -> 66 -> 67 -> 68 -> 69 -> 70

002 -> 6 -> 7 -> 8 -> 9 -> 10

003 -> 76 -> 77 -> 78 -> 79 -> 80

004 -> 81 -> 82 -> 83 -> 84 -> 85

005 -> 36 -> 37 -> 38 -> 39 -> 40

006 -> 11 -> 12 -> 13 -> 14 -> 15

007 -> 16 -> 17 -> 18 -> 19 -> 20

008 -> 21 -> 22 -> 23 -> 24 -> 25

009 -> 26 -> 27 -> 28 -> 29 -> 30

010 -> 31 -> 32 -> 33 -> 34 -> 35

011

012

013

014

015

016

017

018

019

020

021

022

023

024

025

026

027

028

029

030

031

032

033

034

035

036 -> 41 -> 42 -> 43 -> 44 -> 45

037 -> 46 -> 47 -> 48 -> 49 -> 50

038 -> 51 -> 52 -> 53 -> 54 -> 55

039 -> 56 -> 57 -> 58 -> 59 -> 60

040 -> 61 -> 62 -> 63 -> 64 -> 65

041

042

043

044

045

046

047

048

049

050

051

052

053

054

055

056

057

058

059

060

061

062

063

064

065

066

067

068

069

070 -> 71 -> 72 -> 73 -> 74 -> 75

071

072

073

074

075

076

077

078

079

080

081

082

083

084

085

086

087

088

089

090

091

092

093

094

095

096

097

098

099

100

101

102

103

104

105

106

107

108

109

110

111

112

113

114

115

116

117

118

119

120

121

122

123

124

125

126

127

128

129

130

131

132

133

134

135

136

137

138

139

140

141

142

143

144

145

146

147

148

149

150

151

152

153

154

155


best node: {'id': 11, 'answer': '8 + 21 = 29 ( left: 29 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}

best node: {'id': 6, 'answer': '4 + 4 = 8 ( left: 8 21 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}

best node: {'id': 2, 'answer': '9 + 12 = 21 ( left: 4 4 21 )', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}

best node: {'id': 0, 'answer': '4 4 9 12', 'value': None, 'parent_node': None, 'ancestor_value': None}

path: ['8 + 21 = 29 ( left: 29 )', '4 + 4 = 8 ( left: 8 21 )', '9 + 12 = 21 ( left: 4 4 21 )', '( left: 4 4 9 12 )']


['8 + 21 = 29 ( left: 29 )', '4 + 4 = 8 ( left: 8 21 )', '9 + 12 = 21 ( left: 4 4 21 )', '( left: 4 4 9 12 )']
 ( ( 4 + 4 ) + ( 9 + 12 ) ) 


Answer: 
 ( ( 4 + 4 ) + ( 9 + 12 ) ) 

