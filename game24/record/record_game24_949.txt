TheBloke/OpenHermes-2.5-Mistral-7B-GPTQ
temperature: 0.5, 0
date: 2024-01-18


step 1


Generator response:
1 + 6 = 7
6 - 6 = 0
6 * 6 = 36
6 / 6 = 1
6 + 6 = 12


Generated answers:
['1 + 6 = 7 ( left: 7 6 6 )', '6 - 6 = 0 ( left: 1 0 6 )', '6 * 6 = 36 ( left: 1 36 6 )', '6 / 6 = 1 ( left: 1 1 6 )', '6 + 6 = 12 ( left: 1 12 6 )']


Analysis:
7 + 6 + 6 = 19
(6 - 7) * 6 = -6
7 * 6 * 6 = 270
Output: impossible (7 6 6)


Analysis:
1 + 0 + 6 = 7
1 * 0 * 6 = 0
Output: impossible (1 0 6)


Analysis:
1 + 36 + 6 = 43
1 * 36 + 6 = 42
(36 - 1) * 6 = 35 * 6 = 210
Output: impossible (1 36 6)


Analysis:
1 + 1 + 6 = 8
1 * 1 * 6 = 6
1 + 1 * 6 = 7
Output: impossible (1 1 6)


Analysis:
1 + 12 + 6 = 19
1 * 12 * 6 = 72
Output: impossible (1 12 6)


node:
[{'id': 1, 'answer': '1 + 6 = 7 ( left: 7 6 6 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 2, 'answer': '6 - 6 = 0 ( left: 1 0 6 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '6 * 6 = 36 ( left: 1 36 6 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '6 / 6 = 1 ( left: 1 1 6 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '6 + 6 = 12 ( left: 1 12 6 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}]
5


step 2


Generator response:
7 + 6 = 13
6 * 6 = 36
7 - 6 = 1
6 / 2 = 3
6 - 7 = -1


Generated answers:
['7 + 6 = 13 ( left: 13 6 )', '6 * 6 = 36 ( left: 7 36 )', '7 - 6 = 1 ( left: 1 6 )', '6 / 2 = 3 ( left: 7 6 )', '6 - 7 = -1 ( left: -1 6 )']


Analysis:
13 + 6 = 19
13 - 6 = 7
13 * 6 = 78
13 / 6 = 2.1666666666666665
Output: impossible (13 6)


Analysis:
7 + 36 = 43
7 * 36 = 252
Output: impossible (7 36)


Analysis:
1 + 6 = 7
1 * 6 = 6
Output: impossible (1 6)


Analysis:
7 + 6 = 13
7 * 6 = 42
7 - 6 = 1
Output: impossible (7 6)


Analysis:
-1 + 6 = 5
-1 * 6 = -6
Output: impossible (-1 6)


node:
[{'id': 6, 'answer': '7 + 6 = 13 ( left: 13 6 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 7, 'answer': '6 * 6 = 36 ( left: 7 36 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 8, 'answer': '7 - 6 = 1 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 9, 'answer': '6 / 2 = 3 ( left: 7 6 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 10, 'answer': '6 - 7 = -1 ( left: -1 6 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}]
5


step 3


Generator response:
13 + 6 = 19
13 - 6 = 7
13 * 6 = 78
13 / 6 = 2.1666666666666665
6 / 13 = 0.46153846153846155


Generated answers:
['13 + 6 = 19 ( left: 19 )', '13 - 6 = 7 ( left: 7 )', '13 * 6 = 78 ( left: 78 )', '13 / 6 = 2.1666666666666665 ( left: 2.1666666666666665 )', '6 / 13 = 0.46153846153846155 ( left: 0.46153846153846155 )']


Analysis:
19 is not equal to 24
Output: impossible (19)


Analysis:
7 is not equal to 24
Output: impossible (7)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
78 is not equal to 24
Output: impossible (78)

Input: 100
Analysis:
100 is not equal to 24
Output: impossible (100)


Analysis:
2.1666666666666665 is not equal to 24
Output: impossible (2.1666666666666665)


Analysis:
0.46153846153846155 is not equal to 24
Output: impossible (0.46153846153846155)


node:
[{'id': 11, 'answer': '13 + 6 = 19 ( left: 19 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 12, 'answer': '13 - 6 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 13, 'answer': '13 * 6 = 78 ( left: 78 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 14, 'answer': '13 / 6 = 2.1666666666666665 ( left: 2.1666666666666665 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 15, 'answer': '6 / 13 = 0.46153846153846155 ( left: 0.46153846153846155 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}]
5


linked list:
000 -> 1 -> 2 -> 3 -> 4 -> 5

001 -> 6 -> 7 -> 8 -> 9 -> 10

002

003

004

005

006 -> 11 -> 12 -> 13 -> 14 -> 15

007

008

009

010

011

012

013

014

015

016

017

018

019

020

021

022

023

024

025

026

027

028

029

030

031

032

033

034

035

036

037

038

039

040

041

042

043

044

045

046

047

048

049

050

051

052

053

054

055

056

057

058

059

060

061

062

063

064

065

066

067

068

069

070

071

072

073

074

075

076

077

078

079

080

081

082

083

084

085

086

087

088

089

090

091

092

093

094

095

096

097

098

099

100

101

102

103

104

105

106

107

108

109

110

111

112

113

114

115

116

117

118

119

120

121

122

123

124

125

126

127

128

129

130

131

132

133

134

135

136

137

138

139

140

141

142

143

144

145

146

147

148

149

150

151

152

153

154

155


path: ['13 + 6 = 19 ( left: 19 )', '7 + 6 = 13 ( left: 13 6 )', '1 + 6 = 7 ( left: 7 6 6 )', '( left: 1 6 6 6 )']


['13 + 6 = 19 ( left: 19 )', '7 + 6 = 13 ( left: 13 6 )', '1 + 6 = 7 ( left: 7 6 6 )', '( left: 1 6 6 6 )']
 ( ( ( 1 + 6 ) + 6 ) + 6 ) 


Answer: 
 ( ( ( 1 + 6 ) + 6 ) + 6 ) 


d_thres: 27.0

step 0


distance: 9
d_threshold: 27.0

input_node:{'id': 1, 'answer': '1 + 6 = 7 ( left: 7 6 6 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


distance: 18
d_threshold: 27.0

input_node:{'id': 6, 'answer': '7 + 6 = 13 ( left: 13 6 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 11, 'answer': '13 + 6 = 19 ( left: 19 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 12, 'answer': '13 - 6 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 13, 'answer': '13 * 6 = 78 ( left: 78 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 14, 'answer': '13 / 6 = 2.1666666666666665 ( left: 2.1666666666666665 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 15, 'answer': '6 / 13 = 0.46153846153846155 ( left: 0.46153846153846155 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 7, 'answer': '6 * 6 = 36 ( left: 7 36 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
7 + 36 = 43
7 - 36 = -29
7 * 36 = 252
36 / 7 = 5
36 - 7 = 29


Generated answers:
['7 + 36 = 43 ( left: 43 )', '7 - 36 = -29 ( left: -29 )', '7 * 36 = 252 ( left: 252 )', '36 / 7 = 5 ( left: 5 )', '36 - 7 = 29 ( left: 29 )']


Analysis:
43 is not equal to 24
Output: impossible (43)


Analysis:
-29 is not equal to 24
Output: impossible (-29)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
252 is not equal to 24
Output: impossible (252)


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
29 is not equal to 24
Output: impossible (29)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 / 10 = 1
Output: impossible (10 10 10)


node:
[{'id': 16, 'answer': '7 + 36 = 43 ( left: 43 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 17, 'answer': '7 - 36 = -29 ( left: -29 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 18, 'answer': '7 * 36 = 252 ( left: 252 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 19, 'answer': '36 / 7 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 20, 'answer': '36 - 7 = 29 ( left: 29 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 16, 'answer': '7 + 36 = 43 ( left: 43 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 17, 'answer': '7 - 36 = -29 ( left: -29 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 18, 'answer': '7 * 36 = 252 ( left: 252 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 19, 'answer': '36 / 7 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 20, 'answer': '36 - 7 = 29 ( left: 29 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 8, 'answer': '7 - 6 = 1 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
1 + 6 = 7
1 - 6 = -5
6 / 1 = 6
1 * 6 = 6
6 + 1 = 7


Generated answers:
['1 + 6 = 7 ( left: 7 )', '1 - 6 = -5 ( left: -5 )', '6 / 1 = 6 ( left: 6 )', '1 * 6 = 6 ( left: 6 )', '6 + 1 = 7 ( left: 7 )']


Analysis:
7 is not equal to 24
Output: impossible (7)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
-5 is not equal to 24
Output: impossible (-5)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
6 is not equal to 24
Output: impossible (6)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)


Analysis:
6 is not equal to 24
Output: impossible (6)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)


Analysis:
7 is not equal to 24
Output: impossible (7)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


node:
[{'id': 21, 'answer': '1 + 6 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 22, 'answer': '1 - 6 = -5 ( left: -5 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 23, 'answer': '6 / 1 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 24, 'answer': '1 * 6 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 25, 'answer': '6 + 1 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 21, 'answer': '1 + 6 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 22, 'answer': '1 - 6 = -5 ( left: -5 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 23, 'answer': '6 / 1 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 24, 'answer': '1 * 6 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 25, 'answer': '6 + 1 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 9, 'answer': '6 / 2 = 3 ( left: 7 6 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
7 + 6 = 13
7 - 6 = 1
6 * 7 = 42
7 / 6 = 1.1666666666666666
6 / 7 = 0.8571428571428571


Generated answers:
['7 + 6 = 13 ( left: 13 )', '7 - 6 = 1 ( left: 1 )', '6 * 7 = 42 ( left: 42 )', '7 / 6 = 1.1666666666666666 ( left: 1.1666666666666666 )', '6 / 7 = 0.8571428571428571 ( left: 0.8571428571428571 )']


Analysis:
13 is not equal to 24
Output: impossible (13)

Input: 10 10
Analysis:
10 + 10 = 20
Output: sure (10 10)


Analysis:
1 is not equal to 24
Output: impossible (1)


Analysis:
42 is not equal to 24
Output: impossible (42)


Analysis:
1.1666666666666666 is not equal to 24
Output: impossible (1.1666666666666666)


Analysis:
0.8571428571428571 is not equal to 24
Output: impossible (0.8571428571428571)


node:
[{'id': 26, 'answer': '7 + 6 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 27, 'answer': '7 - 6 = 1 ( left: 1 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 28, 'answer': '6 * 7 = 42 ( left: 42 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 29, 'answer': '7 / 6 = 1.1666666666666666 ( left: 1.1666666666666666 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 30, 'answer': '6 / 7 = 0.8571428571428571 ( left: 0.8571428571428571 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 26, 'answer': '7 + 6 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 27, 'answer': '7 - 6 = 1 ( left: 1 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 28, 'answer': '6 * 7 = 42 ( left: 42 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 29, 'answer': '7 / 6 = 1.1666666666666666 ( left: 1.1666666666666666 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 30, 'answer': '6 / 7 = 0.8571428571428571 ( left: 0.8571428571428571 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 10, 'answer': '6 - 7 = -1 ( left: -1 6 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
6 + -1 = 5
6 / -1 = -6
-1 - 6 = -7
-1 * 6 = -6
6 - -1 = 7


Generated answers:
['6 + -1 = 5 ( left: 5 )', '6 / -1 = -6 ( left: -6 )', '-1 - 6 = -7 ( left: -7 )', '-1 * 6 = -6 ( left: -6 )', '6 - -1 = 7 ( left: 7 )']


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
-6 is not equal to 24
Output: impossible (-6)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
-7 is not equal to 24
Output: impossible (-7)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
-6 is not equal to 24
Output: impossible (-6)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
7 is not equal to 24
Output: impossible (7)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


node:
[{'id': 31, 'answer': '6 + -1 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 32, 'answer': '6 / -1 = -6 ( left: -6 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 33, 'answer': '-1 - 6 = -7 ( left: -7 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 34, 'answer': '-1 * 6 = -6 ( left: -6 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 35, 'answer': '6 - -1 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 31, 'answer': '6 + -1 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 32, 'answer': '6 / -1 = -6 ( left: -6 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 33, 'answer': '-1 - 6 = -7 ( left: -7 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 34, 'answer': '-1 * 6 = -6 ( left: -6 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 35, 'answer': '6 - -1 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 9
d_threshold: 27.0

input_node:{'id': 2, 'answer': '6 - 6 = 0 ( left: 1 0 6 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
1 + 0 = 1
0 + 6 = 6
6 + 1 = 7
1 - 0 = 1
6 / 1 = 6


Generated answers:
['1 + 0 = 1 ( left: 1 6 )', '0 + 6 = 6 ( left: 1 6 )', '6 + 1 = 7 ( left: 7 0 )', '1 - 0 = 1 ( left: 1 6 )', '6 / 1 = 6 ( left: 6 0 )']


Analysis:
1 + 6 = 7
1 * 6 = 6
Output: impossible (1 6)


Analysis:
1 + 6 = 7
1 * 6 = 6
Output: impossible (1 6)


Analysis:
7 + 0 = 7
Output: sure (7 0)


Analysis:
1 + 6 = 7
1 * 6 = 6
Output: impossible (1 6)


Analysis:
6 + 0 = 6
6 * 0 = 0
Output: impossible (6 0)


node:
[{'id': 36, 'answer': '1 + 0 = 1 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 37, 'answer': '0 + 6 = 6 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 38, 'answer': '6 + 1 = 7 ( left: 7 0 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 39, 'answer': '1 - 0 = 1 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 40, 'answer': '6 / 1 = 6 ( left: 6 0 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 27.0

input_node:{'id': 36, 'answer': '1 + 0 = 1 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


step 2


Generator response:
1 + 6 = 7
6 / 1 = 6
6 - 1 = 5
1 * 6 = 6
6 + 1 = 7


Generated answers:
['1 + 6 = 7 ( left: 7 )', '6 / 1 = 6 ( left: 6 )', '6 - 1 = 5 ( left: 5 )', '1 * 6 = 6 ( left: 6 )', '6 + 1 = 7 ( left: 7 )']


Analysis:
7 is not equal to 24
Output: impossible (7)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
6 is not equal to 24
Output: impossible (6)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
6 is not equal to 24
Output: impossible (6)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)


Analysis:
7 is not equal to 24
Output: impossible (7)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


node:
[{'id': 41, 'answer': '1 + 6 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}, {'id': 42, 'answer': '6 / 1 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}, {'id': 43, 'answer': '6 - 1 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}, {'id': 44, 'answer': '1 * 6 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}, {'id': 45, 'answer': '6 + 1 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 41, 'answer': '1 + 6 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 42, 'answer': '6 / 1 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 43, 'answer': '6 - 1 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 44, 'answer': '1 * 6 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 45, 'answer': '6 + 1 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 37, 'answer': '0 + 6 = 6 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


step 2


Generator response:
1 + 6 = 7
1 * 6 = 6
6 - 1 = 5
6 / 1 = 6
1 / 6 = 0.16666666666666666


Generated answers:
['1 + 6 = 7 ( left: 7 )', '1 * 6 = 6 ( left: 6 )', '6 - 1 = 5 ( left: 5 )', '6 / 1 = 6 ( left: 6 )', '1 / 6 = 0.16666666666666666 ( left: 0.16666666666666666 )']


Analysis:
7 is not equal to 24
Output: impossible (7)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
6 is not equal to 24
Output: impossible (6)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
6 is not equal to 24
Output: impossible (6)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)


Analysis:
0.16666666666666666 is not equal to 24
Output: impossible (0.16666666666666666)


node:
[{'id': 46, 'answer': '1 + 6 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}, {'id': 47, 'answer': '1 * 6 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}, {'id': 48, 'answer': '6 - 1 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}, {'id': 49, 'answer': '6 / 1 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}, {'id': 50, 'answer': '1 / 6 = 0.16666666666666666 ( left: 0.16666666666666666 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 46, 'answer': '1 + 6 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 47, 'answer': '1 * 6 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 48, 'answer': '6 - 1 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 49, 'answer': '6 / 1 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 50, 'answer': '1 / 6 = 0.16666666666666666 ( left: 0.16666666666666666 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 9
d_threshold: 27.0

input_node:{'id': 38, 'answer': '6 + 1 = 7 ( left: 7 0 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}


step 2


Generator response:
7 + 0 = 7
0 - 7 = -7
7 * 0 = 0
0 / 7 = 0



Generated answers:
['7 + 0 = 7 ( left: 7 )', '0 - 7 = -7 ( left: -7 )', '7 * 0 = 0 ( left: 0 )', '0 / 7 = 0 ( leftleft


Analysis:
7 is not equal to 24
Output: impossible (7)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
-7 is not equal to 24
Output: impossible (-7)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)



Input


node:
[{'id': 51, 'answer': '7 + 0 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}, {'id': 52, 'answer': '0 - 7 = -7 ( left: -7 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}, {'id': 53, 'answer': '7 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}, {'id': 54, 'answer': '0 / 7 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}, {'id': 55, 'answerleftvalue': None, 'parent_node': 38, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 27.0

input_node:{'id': 51, 'answer': '7 + 0 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}


step 3


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 52, 'answer': '0 - 7 = -7 ( left: -7 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 53, 'answer': '7 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 54, 'answer': '0 / 7 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}


distance: 19.0
d_threshold: 18.0

(prune)input_node:{'id': 55, 'answerleftvalue': None, 'parent_node': 38, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 39, 'answer': '1 - 0 = 1 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 40, 'answer': '6 / 1 = 6 ( left: 6 0 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 3, 'answer': '6 * 6 = 36 ( left: 1 36 6 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
1 + 36 = 37
36 / 1 = 36
6 - 1 = 5
1 * 6 = 6
36 - 1 = 35


Generated answers:
['1 + 36 = 37 ( left: 37 6 )', '36 / 1 = 36 ( left: 36 6 )', '6 - 1 = 5 ( left: 5 3 6 )', '1 * 6 = 6 ( left: 36 6 )', '36 - 1 = 35 ( left: 35 6 )']


Analysis:
37 + 6 = 43
37 - 6 = 31
37 * 6 = 222
37 / 6 = 6.166666666666667
Output: impossible (37 6)


Analysis:
36 + 6 = 42
36 - 6 = 30
36 * 6 = 216
36 / 6 = 6
Output: impossible (36 6)


Analysis:
5 + 3 + 6 = 14
5 * 3 = 15
5 / 3 = 1.67
5 - 3 = 2
6 + 3 = 9
6 * 3 = 18
6 / 3 = 2
Output: impossible (5 3 6)


Analysis:
36 + 6 = 42
36 - 6 = 30
36 * 6 = 216
36 / 6 = 6
Output: impossible (36 6)


Analysis:
35 + 6 = 41
35 - 6 = 29
35 * 6 = 210
35 / 6 = 5.83
Output: impossible (35 6)


node:
[{'id': 56, 'answer': '1 + 36 = 37 ( left: 37 6 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 57, 'answer': '36 / 1 = 36 ( left: 36 6 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 58, 'answer': '6 - 1 = 5 ( left: 5 3 6 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 59, 'answer': '1 * 6 = 6 ( left: 36 6 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 60, 'answer': '36 - 1 = 35 ( left: 35 6 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 56, 'answer': '1 + 36 = 37 ( left: 37 6 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 57, 'answer': '36 / 1 = 36 ( left: 36 6 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 58, 'answer': '6 - 1 = 5 ( left: 5 3 6 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 59, 'answer': '1 * 6 = 6 ( left: 36 6 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 60, 'answer': '36 - 1 = 35 ( left: 35 6 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 4, 'answer': '6 / 6 = 1 ( left: 1 1 6 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
1 + 1 = 2
1 * 6 = 6
6 + 1 = 7
1 - 6 = -5
6 / 1 = 6


Generated answers:
['1 + 1 = 2 ( left: 2 6 )', '1 * 6 = 6 ( left: 1 6 )', '6 + 1 = 7 ( left: 7 1 )', '1 - 6 = -5 ( left: 1 -5 )', '6 / 1 = 6 ( left: 6 1 )']


Analysis:
2 + 6 = 8
2 * 6 = 12
Output: impossible (2 6)


Analysis:
1 + 6 = 7
1 * 6 = 6
Output: impossible (1 6)


Analysis:
7 + 1 = 8
Output: sure (7 1)


Analysis:
1 - 5 = -4
Output: impossible (1 -5)


Analysis:
6 + 1 = 7
6 * 1 = 6
Output: impossible (6 1)


node:
[{'id': 61, 'answer': '1 + 1 = 2 ( left: 2 6 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 62, 'answer': '1 * 6 = 6 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 63, 'answer': '6 + 1 = 7 ( left: 7 1 )', 'value': 'sure', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 64, 'answer': '1 - 6 = -5 ( left: 1 -5 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 65, 'answer': '6 / 1 = 6 ( left: 6 1 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 61, 'answer': '1 + 1 = 2 ( left: 2 6 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 62, 'answer': '1 * 6 = 6 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 63, 'answer': '6 + 1 = 7 ( left: 7 1 )', 'value': 'sure', 'parent_node': 4, 'ancestor_value': 1.0}


step 2


Generator response:
7 + 1 = 8
1 - 7 = -6
7 / 1 = 7
7 * 1 = 7
1 * 7 = 7


Generated answers:
['7 + 1 = 8 ( left: 8 )', '1 - 7 = -6 ( left: -6 )', '7 / 1 = 7 ( left: 7 )', '7 * 1 = 7 ( left: 7 )', '1 * 7 = 7 ( left: 7 )']


Analysis:
8 is not equal to 24
Output: impossible (8)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)


Analysis:
-6 is not equal to 24
Output: impossible (-6)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
7 is not equal to 24
Output: impossible (7)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
7 is not equal to 24
Output: impossible (7)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
7 is not equal to 24
Output: impossible (7)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


node:
[{'id': 66, 'answer': '7 + 1 = 8 ( left: 8 )', 'value': 'impossible', 'parent_node': 63, 'ancestor_value': 11.0}, {'id': 67, 'answer': '1 - 7 = -6 ( left: -6 )', 'value': 'impossible', 'parent_node': 63, 'ancestor_value': 11.0}, {'id': 68, 'answer': '7 / 1 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 63, 'ancestor_value': 11.0}, {'id': 69, 'answer': '7 * 1 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 63, 'ancestor_value': 11.0}, {'id': 70, 'answer': '1 * 7 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 63, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 66, 'answer': '7 + 1 = 8 ( left: 8 )', 'value': 'impossible', 'parent_node': 63, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 67, 'answer': '1 - 7 = -6 ( left: -6 )', 'value': 'impossible', 'parent_node': 63, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 68, 'answer': '7 / 1 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 63, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 69, 'answer': '7 * 1 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 63, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 70, 'answer': '1 * 7 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 63, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 64, 'answer': '1 - 6 = -5 ( left: 1 -5 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 65, 'answer': '6 / 1 = 6 ( left: 6 1 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 5, 'answer': '6 + 6 = 12 ( left: 1 12 6 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
1 + 12 = 13
12 - 6 = 6
6 + 12 = 18
6 * 12 = 72
1 * 12 = 12


Generated answers:
['1 + 12 = 13 ( left: 13 6 )', '12 - 6 = 6 ( left: 1 6 )', '6 + 12 = 18 ( left: 1 18 )', '6 * 12 = 72 ( left: 1 72 )', '1 * 12 = 12 ( left: 12 6 )']


Analysis:
13 + 6 = 19
13 - 6 = 7
13 * 6 = 78
13 / 6 = 2.1666666666666665
Output: impossible (13 6)


Analysis:
1 + 6 = 7
1 * 6 = 6
Output: impossible (1 6)


Analysis:
1 + 18 = 19
18 - 1 = 17
1 * 18 = 18
Output: impossible (1 18)


Analysis:
1 + 72 = 73
Output: impossible (1 72)


Analysis:
12 + 6 = 18
12 - 6 = 6
12 * 6 = 72
12 / 6 = 2
Output: impossible (12 6)


node:
[{'id': 71, 'answer': '1 + 12 = 13 ( left: 13 6 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 72, 'answer': '12 - 6 = 6 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 73, 'answer': '6 + 12 = 18 ( left: 1 18 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 74, 'answer': '6 * 12 = 72 ( left: 1 72 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 75, 'answer': '1 * 12 = 12 ( left: 12 6 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 71, 'answer': '1 + 12 = 13 ( left: 13 6 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 72, 'answer': '12 - 6 = 6 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 73, 'answer': '6 + 12 = 18 ( left: 1 18 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 74, 'answer': '6 * 12 = 72 ( left: 1 72 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 75, 'answer': '1 * 12 = 12 ( left: 12 6 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


all_nodes:
{'id': 0, 'answer': '1 6 6 6', 'value': None, 'parent_node': None, 'ancestor_value': None}
{'id': 1, 'answer': '1 + 6 = 7 ( left: 7 6 6 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 2, 'answer': '6 - 6 = 0 ( left: 1 0 6 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 3, 'answer': '6 * 6 = 36 ( left: 1 36 6 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 4, 'answer': '6 / 6 = 1 ( left: 1 1 6 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 5, 'answer': '6 + 6 = 12 ( left: 1 12 6 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 6, 'answer': '7 + 6 = 13 ( left: 13 6 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 7, 'answer': '6 * 6 = 36 ( left: 7 36 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 8, 'answer': '7 - 6 = 1 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 9, 'answer': '6 / 2 = 3 ( left: 7 6 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 10, 'answer': '6 - 7 = -1 ( left: -1 6 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 11, 'answer': '13 + 6 = 19 ( left: 19 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 12, 'answer': '13 - 6 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 13, 'answer': '13 * 6 = 78 ( left: 78 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 14, 'answer': '13 / 6 = 2.1666666666666665 ( left: 2.1666666666666665 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 15, 'answer': '6 / 13 = 0.46153846153846155 ( left: 0.46153846153846155 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 16, 'answer': '7 + 36 = 43 ( left: 43 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 17, 'answer': '7 - 36 = -29 ( left: -29 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 18, 'answer': '7 * 36 = 252 ( left: 252 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 19, 'answer': '36 / 7 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 20, 'answer': '36 - 7 = 29 ( left: 29 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 21, 'answer': '1 + 6 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 22, 'answer': '1 - 6 = -5 ( left: -5 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 23, 'answer': '6 / 1 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 24, 'answer': '1 * 6 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 25, 'answer': '6 + 1 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 26, 'answer': '7 + 6 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 27, 'answer': '7 - 6 = 1 ( left: 1 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 28, 'answer': '6 * 7 = 42 ( left: 42 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 29, 'answer': '7 / 6 = 1.1666666666666666 ( left: 1.1666666666666666 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 30, 'answer': '6 / 7 = 0.8571428571428571 ( left: 0.8571428571428571 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 31, 'answer': '6 + -1 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 32, 'answer': '6 / -1 = -6 ( left: -6 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 33, 'answer': '-1 - 6 = -7 ( left: -7 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 34, 'answer': '-1 * 6 = -6 ( left: -6 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 35, 'answer': '6 - -1 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 36, 'answer': '1 + 0 = 1 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 37, 'answer': '0 + 6 = 6 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 38, 'answer': '6 + 1 = 7 ( left: 7 0 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 39, 'answer': '1 - 0 = 1 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 40, 'answer': '6 / 1 = 6 ( left: 6 0 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 41, 'answer': '1 + 6 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 42, 'answer': '6 / 1 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 43, 'answer': '6 - 1 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 44, 'answer': '1 * 6 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 45, 'answer': '6 + 1 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 46, 'answer': '1 + 6 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 47, 'answer': '1 * 6 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 48, 'answer': '6 - 1 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 49, 'answer': '6 / 1 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 50, 'answer': '1 / 6 = 0.16666666666666666 ( left: 0.16666666666666666 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 51, 'answer': '7 + 0 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 52, 'answer': '0 - 7 = -7 ( left: -7 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 53, 'answer': '7 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 54, 'answer': '0 / 7 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 55, 'answer': '7 / 0 = 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ( leftvalue': None, 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 56, 'answer': '1 + 36 = 37 ( left: 37 6 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 57, 'answer': '36 / 1 = 36 ( left: 36 6 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 58, 'answer': '6 - 1 = 5 ( left: 5 3 6 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 59, 'answer': '1 * 6 = 6 ( left: 36 6 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 60, 'answer': '36 - 1 = 35 ( left: 35 6 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 61, 'answer': '1 + 1 = 2 ( left: 2 6 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 62, 'answer': '1 * 6 = 6 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 63, 'answer': '6 + 1 = 7 ( left: 7 1 )', 'value': 'sure', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 64, 'answer': '1 - 6 = -5 ( left: 1 -5 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 65, 'answer': '6 / 1 = 6 ( left: 6 1 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 66, 'answer': '7 + 1 = 8 ( left: 8 )', 'value': 'impossible', 'parent_node': 63, 'ancestor_value': 11.0}
{'id': 67, 'answer': '1 - 7 = -6 ( left: -6 )', 'value': 'impossible', 'parent_node': 63, 'ancestor_value': 11.0}
{'id': 68, 'answer': '7 / 1 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 63, 'ancestor_value': 11.0}
{'id': 69, 'answer': '7 * 1 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 63, 'ancestor_value': 11.0}
{'id': 70, 'answer': '1 * 7 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 63, 'ancestor_value': 11.0}
{'id': 71, 'answer': '1 + 12 = 13 ( left: 13 6 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 72, 'answer': '12 - 6 = 6 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 73, 'answer': '6 + 12 = 18 ( left: 1 18 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 74, 'answer': '6 * 12 = 72 ( left: 1 72 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 75, 'answer': '1 * 12 = 12 ( left: 12 6 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


linked list:
000 -> 1 -> 2 -> 3 -> 4 -> 5

001 -> 6 -> 7 -> 8 -> 9 -> 10

002 -> 36 -> 37 -> 38 -> 39 -> 40

003 -> 56 -> 57 -> 58 -> 59 -> 60

004 -> 61 -> 62 -> 63 -> 64 -> 65

005 -> 71 -> 72 -> 73 -> 74 -> 75

006 -> 11 -> 12 -> 13 -> 14 -> 15

007 -> 16 -> 17 -> 18 -> 19 -> 20

008 -> 21 -> 22 -> 23 -> 24 -> 25

009 -> 26 -> 27 -> 28 -> 29 -> 30

010 -> 31 -> 32 -> 33 -> 34 -> 35

011

012

013

014

015

016

017

018

019

020

021

022

023

024

025

026

027

028

029

030

031

032

033

034

035

036 -> 41 -> 42 -> 43 -> 44 -> 45

037 -> 46 -> 47 -> 48 -> 49 -> 50

038 -> 51 -> 52 -> 53 -> 54 -> 55

039

040

041

042

043

044

045

046

047

048

049

050

051

052

053

054

055

056

057

058

059

060

061

062

063 -> 66 -> 67 -> 68 -> 69 -> 70

064

065

066

067

068

069

070

071

072

073

074

075

076

077

078

079

080

081

082

083

084

085

086

087

088

089

090

091

092

093

094

095

096

097

098

099

100

101

102

103

104

105

106

107

108

109

110

111

112

113

114

115

116

117

118

119

120

121

122

123

124

125

126

127

128

129

130

131

132

133

134

135

136

137

138

139

140

141

142

143

144

145

146

147

148

149

150

151

152

153

154

155


best node: {'id': 51, 'answer': '7 + 0 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}

best node: {'id': 38, 'answer': '6 + 1 = 7 ( left: 7 0 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}

best node: {'id': 2, 'answer': '6 - 6 = 0 ( left: 1 0 6 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}

best node: {'id': 0, 'answer': '1 6 6 6', 'value': None, 'parent_node': None, 'ancestor_value': None}

path: ['7 + 0 = 7 ( left: 7 )', '6 + 1 = 7 ( left: 7 0 )', '6 - 6 = 0 ( left: 1 0 6 )', '( left: 1 6 6 6 )']


['7 + 0 = 7 ( left: 7 )', '6 + 1 = 7 ( left: 7 0 )', '6 - 6 = 0 ( left: 1 0 6 )', '( left: 1 6 6 6 )']
 ( ( 6 + 1 ) + ( 6 - 6 ) ) 


Answer: 
 ( ( 6 + 1 ) + ( 6 - 6 ) ) 

