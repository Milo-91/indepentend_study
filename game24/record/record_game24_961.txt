TheBloke/OpenHermes-2.5-Mistral-7B-GPTQ
temperature: 0.5, 0
date: 2024-01-18


step 1


Generator response:
8 + 8 = 16
10 - 12 = -2
10 * 8 = 80
12 + 8 = 20
12 - 8 = 4


Generated answers:
['8 + 8 = 16 ( left: 16 10 12 )', '10 - 12 = -2 ( left: 8 8 -2 )', '10 * 8 = 80 ( left: 80 8 12 )', '12 + 8 = 20 ( left: 20 8 10 )', '12 - 8 = 4 ( left: 4 8 10 )']


Analysis:
16 + 10 + 12 = 38
16 * 10 = 160
16 / 12 = 1.33
Output: impossible (16 10 12)


Analysis:
8 + 8 - 2 = 16 - 2 = 14
8 * 8 - 2 = 64 - 2 = 62
Output: impossible (8 8 -2)


Analysis:
80 + 8 + 12 = 100
80 - 8 = 72
80 * 12 = 960
80 / 12 = 6.67
Output: impossible (80 8 12)


Analysis:
20 + 8 + 10 = 38
20 * 8 = 160
20 / 8 = 2.5
20 - 10 = 10
Output: impossible (20 8 10)


Analysis:
4 + 8 + 10 = 22
4 * 8 = 32
4 * 10 = 40
8 * 10 = 80
Output: impossible (4 8 10)


node:
[{'id': 1, 'answer': '8 + 8 = 16 ( left: 16 10 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 2, 'answer': '10 - 12 = -2 ( left: 8 8 -2 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '10 * 8 = 80 ( left: 80 8 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '12 + 8 = 20 ( left: 20 8 10 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '12 - 8 = 4 ( left: 4 8 10 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}]
5


step 2


Generator response:
16 + 10 = 26
16 - 10 = 6
16 / 10 = 1.6
16 * 10 = 160
12 + 16 = 28


Generated answers:
['16 + 10 = 26 ( left: 26 12 )', '16 - 10 = 6 ( left: 6 12 )', '16 / 10 = 1.6 ( left: 1.6 12 )', '16 * 10 = 160 ( left: 160 12 )', '12 + 16 = 28 ( left: 28 10 )']


Analysis:
26 + 12 = 38
26 - 12 = 14
26 * 12 = 312
26 / 12 = 2.1666666666666665
Output: impossible (26 12)


Analysis:
6 + 12 = 18
6 * 12 = 72
Output: impossible (6 12)


Analysis:
1.6 + 12 = 13.6
12 - 1.6 = 10.4
1.6 * 12 = 19.2
1.6 / 12 = 0.13333333333333333
Output: impossible (1.6 12)


Analysis:
160 + 12 = 172
160 - 12 = 148
160 * 12 = 1920
160 / 12 = 13.33
Output: impossible (160 12)


Analysis:
28 + 10 = 38
28 - 10 = 18
28 * 10 = 280
28 / 10 = 2.8
Output: impossible (28 10)


node:
[{'id': 6, 'answer': '16 + 10 = 26 ( left: 26 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 7, 'answer': '16 - 10 = 6 ( left: 6 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 8, 'answer': '16 / 10 = 1.6 ( left: 1.6 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 9, 'answer': '16 * 10 = 160 ( left: 160 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 10, 'answer': '12 + 16 = 28 ( left: 28 10 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}]
5


step 3


Generator response:
26 + 12 = 38
26 - 12 = 14
12 * 26 = 312
12 / 26 = 0.46153846153846155
12 / 2 = 6


Generated answers:
['26 + 12 = 38 ( left: 38 )', '26 - 12 = 14 ( left: 14 )', '12 * 26 = 312 ( left: 312 )', '12 / 26 = 0.46153846153846155 ( left: 0.46153846153846155 )', '12 / 2 = 6 ( left: 66 )']


Analysis:
38 is not equal to 24
Output: impossible (38)


Analysis:
14 is not equal to 24
Output: impossible (14)


Analysis:
312 is not equal to 24
Output: impossible (312)


Analysis:
0.46153846153846155 is not equal to 24
Output: impossible (0.46153846153846155)


Analysis:
66 is not equal to 24
Output: impossible (66)

Input: 100
Analysis:
100 is not equal to 24
Output: impossible (100)


node:
[{'id': 11, 'answer': '26 + 12 = 38 ( left: 38 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 12, 'answer': '26 - 12 = 14 ( left: 14 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 13, 'answer': '12 * 26 = 312 ( left: 312 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 14, 'answer': '12 / 26 = 0.46153846153846155 ( left: 0.46153846153846155 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 15, 'answer': '12 / 2 = 6 ( left: 66 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}]
5


linked list:
000 -> 1 -> 2 -> 3 -> 4 -> 5

001 -> 6 -> 7 -> 8 -> 9 -> 10

002

003

004

005

006 -> 11 -> 12 -> 13 -> 14 -> 15

007

008

009

010

011

012

013

014

015

016

017

018

019

020

021

022

023

024

025

026

027

028

029

030

031

032

033

034

035

036

037

038

039

040

041

042

043

044

045

046

047

048

049

050

051

052

053

054

055

056

057

058

059

060

061

062

063

064

065

066

067

068

069

070

071

072

073

074

075

076

077

078

079

080

081

082

083

084

085

086

087

088

089

090

091

092

093

094

095

096

097

098

099

100

101

102

103

104

105

106

107

108

109

110

111

112

113

114

115

116

117

118

119

120

121

122

123

124

125

126

127

128

129

130

131

132

133

134

135

136

137

138

139

140

141

142

143

144

145

146

147

148

149

150

151

152

153

154

155


path: ['26 + 12 = 38 ( left: 38 )', '16 + 10 = 26 ( left: 26 12 )', '8 + 8 = 16 ( left: 16 10 12 )', '( left: 8 8 10 12 )']


['26 + 12 = 38 ( left: 38 )', '16 + 10 = 26 ( left: 26 12 )', '8 + 8 = 16 ( left: 16 10 12 )', '( left: 8 8 10 12 )']
 ( ( ( 8 + 8 ) + 10 ) + 12 ) 


Answer: 
 ( ( ( 8 + 8 ) + 10 ) + 12 ) 


d_thres: 27.0

step 0


distance: 9
d_threshold: 27.0

input_node:{'id': 1, 'answer': '8 + 8 = 16 ( left: 16 10 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


distance: 18
d_threshold: 27.0

input_node:{'id': 6, 'answer': '16 + 10 = 26 ( left: 26 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 11, 'answer': '26 + 12 = 38 ( left: 38 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 12, 'answer': '26 - 12 = 14 ( left: 14 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 13, 'answer': '12 * 26 = 312 ( left: 312 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 14, 'answer': '12 / 26 = 0.46153846153846155 ( left: 0.46153846153846155 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 15, 'answer': '12 / 2 = 6 ( left: 66 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 7, 'answer': '16 - 10 = 6 ( left: 6 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
6 + 12 = 18
6 - 12 = -6
12 * 6 = 72
12 / 6 = 2
12 - 6 = 6


Generated answers:
['6 + 12 = 18 ( left: 18 )', '6 - 12 = -6 ( left: -6 )', '12 * 6 = 72 ( left: 72 )', '12 / 6 = 2 ( left: 2 )', '12 - 6 = 6 ( left: 6 )']


Analysis:
18 is not equal to 24
Output: impossible (18)


Analysis:
-6 is not equal to 24
Output: impossible (-6)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
72 is not equal to 24
Output: impossible (72)

Input: 100
Analysis:
100 is not equal to 24
Output: impossible (100)


Analysis:
2 is not equal to 24
Output: impossible (2)


Analysis:
6 is not equal to 24
Output: impossible (6)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)


node:
[{'id': 16, 'answer': '6 + 12 = 18 ( left: 18 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 17, 'answer': '6 - 12 = -6 ( left: -6 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 18, 'answer': '12 * 6 = 72 ( left: 72 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 19, 'answer': '12 / 6 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 20, 'answer': '12 - 6 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 16, 'answer': '6 + 12 = 18 ( left: 18 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 17, 'answer': '6 - 12 = -6 ( left: -6 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 18, 'answer': '12 * 6 = 72 ( left: 72 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 19, 'answer': '12 / 6 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 20, 'answer': '12 - 6 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 8, 'answer': '16 / 10 = 1.6 ( left: 1.6 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
1.6 + 12 = 13.6
12 / 1.6 = 7.5
12 - 1.6 = 10.4
1.6 * 12 = 19.2
12 + 1.6 = 13.6


Generated answers:
['1.6 + 12 = 13.6 ( left: 13.6 )', '12 / 1.6 = 7.5 ( left: 7.5 )', '12 - 1.6 = 10.4 ( left: 10.4 )', '1.6 * 12 = 19.2 ( left: 19.2 )', '12 + 1.6 = 13.6 ( left: 13.6 )']


Analysis:
13.6 is not equal to 24
Output: impossible (13.6)


Analysis:
7.5 is not equal to 24
Output: impossible (7.5)


Analysis:
10.4 is not equal to 24
Output: impossible (10.4)


Analysis:
19.2 is not equal to 24
Output: impossible (19.2)


Analysis:
13.6 is not equal to 24
Output: impossible (13.6)


node:
[{'id': 21, 'answer': '1.6 + 12 = 13.6 ( left: 13.6 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 22, 'answer': '12 / 1.6 = 7.5 ( left: 7.5 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 23, 'answer': '12 - 1.6 = 10.4 ( left: 10.4 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 24, 'answer': '1.6 * 12 = 19.2 ( left: 19.2 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 25, 'answer': '12 + 1.6 = 13.6 ( left: 13.6 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 21, 'answer': '1.6 + 12 = 13.6 ( left: 13.6 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 22, 'answer': '12 / 1.6 = 7.5 ( left: 7.5 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 23, 'answer': '12 - 1.6 = 10.4 ( left: 10.4 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 24, 'answer': '1.6 * 12 = 19.2 ( left: 19.2 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 25, 'answer': '12 + 1.6 = 13.6 ( left: 13.6 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 9, 'answer': '16 * 10 = 160 ( left: 160 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
160 + 12 = 172
160 - 12 = 148
160 / 12 = 13
160 * 12 = 1920
160 - 2 = 158


Generated answers:
['160 + 12 = 172 ( left: 172 )', '160 - 12 = 148 ( left: 148 )', '160 / 12 = 13 ( left: 13 )', '160 * 12 = 1920 ( left: 1920 )', '160 - 2 = 158 ( left: 1158 )']


Analysis:
172 is not equal to 24
Output: impossible (172)


Analysis:
148 is not equal to 24
Output: impossible (148)


Analysis:
13 is not equal to 24
Output: impossible (13)

Input: 10 10
Analysis:
10 + 10 = 20
Output: sure (10 10)


Analysis:
1920 is not equal to 24
Output: impossible (1920)


Analysis:
1158 is not equal to 24
Output: impossible (1158)


node:
[{'id': 26, 'answer': '160 + 12 = 172 ( left: 172 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 27, 'answer': '160 - 12 = 148 ( left: 148 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 28, 'answer': '160 / 12 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 29, 'answer': '160 * 12 = 1920 ( left: 1920 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 30, 'answer': '160 - 2 = 158 ( left: 1158 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 26, 'answer': '160 + 12 = 172 ( left: 172 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 27, 'answer': '160 - 12 = 148 ( left: 148 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 28, 'answer': '160 / 12 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 29, 'answer': '160 * 12 = 1920 ( left: 1920 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 30, 'answer': '160 - 2 = 158 ( left: 1158 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 10, 'answer': '12 + 16 = 28 ( left: 28 10 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
28 - 10 = 18
28 + 10 = 38
10 / 2 = 5
10 * 2 = 20
28 - 10 = 18


Generated answers:
['28 - 10 = 18 ( left: 18 )', '28 + 10 = 38 ( left: 38 )', '10 / 2 = 5 ( left: 58 )', '10 * 2 = 20 ( left: 208 )', '28 - 10 = 18 ( left: 18 )']


Analysis:
18 is not equal to 24
Output: impossible (18)


Analysis:
38 is not equal to 24
Output: impossible (38)


Analysis:
58 is not equal to 24
Output: impossible (58)

Input: 100
Analysis:
100 is not equal to 24
Output: impossible (100)


Analysis:
208 is not equal to 24
Output: impossible (208)


Analysis:
18 is not equal to 24
Output: impossible (18)


node:
[{'id': 31, 'answer': '28 - 10 = 18 ( left: 18 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 32, 'answer': '28 + 10 = 38 ( left: 38 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 33, 'answer': '10 / 2 = 5 ( left: 58 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 34, 'answer': '10 * 2 = 20 ( left: 208 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 35, 'answer': '28 - 10 = 18 ( left: 18 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 31, 'answer': '28 - 10 = 18 ( left: 18 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 32, 'answer': '28 + 10 = 38 ( left: 38 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 33, 'answer': '10 / 2 = 5 ( left: 58 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 34, 'answer': '10 * 2 = 20 ( left: 208 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 35, 'answer': '28 - 10 = 18 ( left: 18 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 9
d_threshold: 27.0

input_node:{'id': 2, 'answer': '10 - 12 = -2 ( left: 8 8 -2 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
8 + 8 = 16
8 - 8 = 0
8 * -2 = -16
-2 + 8 = 6
-2 * 8 = -16


Generated answers:
['8 + 8 = 16 ( left: 16 -2 )', '8 - 8 = 0 ( left: 0 -2 )', '8 * -2 = -16 ( left: 8 -16 )', '-2 + 8 = 6 ( left: 6 8 )', '-2 * 8 = -16 ( left: -16 8 )']


Analysis:
16 - 2 = 14
Output: impossible (16 -2)


Analysis:
0 - 2 = -2
Output: impossible (0 -2)


Analysis:
8 - 16 = -8
Output: impossible (8 -16)


Analysis:
6 + 8 = 14
6 * 8 = 48
Output: impossible (6 8)


Analysis:
-16 + 8 = -8
-16 * 8 = -128
Output: impossible (-16 8)


node:
[{'id': 36, 'answer': '8 + 8 = 16 ( left: 16 -2 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 37, 'answer': '8 - 8 = 0 ( left: 0 -2 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 38, 'answer': '8 * -2 = -16 ( left: 8 -16 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 39, 'answer': '-2 + 8 = 6 ( left: 6 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 40, 'answer': '-2 * 8 = -16 ( left: -16 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 27.0

input_node:{'id': 36, 'answer': '8 + 8 = 16 ( left: 16 -2 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


step 2


Generator response:
16 + 2 = 18
16 / 2 = 8
-2 + 16 = 14
-2 * 16 = -32
16 - 2 = 14


Generated answers:
['16 + 2 = 18 ( left: -18 )', '16 / 2 = 8 ( left: -8 )', '-2 + 16 = 14 ( left: 14 )', '-2 * 16 = -32 ( left: -32 )', '16 - 2 = 14 ( left: -14 )']


Analysis:
-18 is not equal to 24
Output: impossible (-18)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
-8 is not equal to 24
Output: impossible (-8)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
14 is not equal to 24
Output: impossible (14)


Analysis:
-32 is not equal to 24
Output: impossible (-32)


Analysis:
-14 is not equal to 24
Output: impossible (-14)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


node:
[{'id': 41, 'answer': '16 + 2 = 18 ( left: -18 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}, {'id': 42, 'answer': '16 / 2 = 8 ( left: -8 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}, {'id': 43, 'answer': '-2 + 16 = 14 ( left: 14 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}, {'id': 44, 'answer': '-2 * 16 = -32 ( left: -32 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}, {'id': 45, 'answer': '16 - 2 = 14 ( left: -14 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 41, 'answer': '16 + 2 = 18 ( left: -18 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 42, 'answer': '16 / 2 = 8 ( left: -8 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 43, 'answer': '-2 + 16 = 14 ( left: 14 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 44, 'answer': '-2 * 16 = -32 ( left: -32 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 45, 'answer': '16 - 2 = 14 ( left: -14 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 37, 'answer': '8 - 8 = 0 ( left: 0 -2 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


step 2


Generator response:
-2 * 0 = 0
-2 / 0 = -1.0
-2 + 0 = -2
0 - 2 = -2
0 * -2 = 0


Generated answers:
['-2 * 0 = 0 ( left: 0 )', '-2 / 0 = -1.0 ( left: -1.0 )', '-2 + 0 = -2 ( left: -2 )', '0 - 2 = -2 ( left: --2 )', '0 * -2 = 0 ( left: 0 )']


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
-1.0 is not equal to 24
Output: impossible (-1.0)


Analysis:
-2 is not equal to 24
Output: impossible (-2)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
--2 is not equal to 24
Output: impossible (--2)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


node:
[{'id': 46, 'answer': '-2 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}, {'id': 47, 'answer': '-2 / 0 = -1.0 ( left: -1.0 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}, {'id': 48, 'answer': '-2 + 0 = -2 ( left: -2 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}, {'id': 49, 'answer': '0 - 2 = -2 ( left: --2 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}, {'id': 50, 'answer': '0 * -2 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 46, 'answer': '-2 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 47, 'answer': '-2 / 0 = -1.0 ( left: -1.0 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 48, 'answer': '-2 + 0 = -2 ( left: -2 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 49, 'answer': '0 - 2 = -2 ( left: --2 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 50, 'answer': '0 * -2 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 38, 'answer': '8 * -2 = -16 ( left: 8 -16 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


step 2


Generator response:
8 - 16 = -8
8 * -16 = -128
8 + -16 = -8
8 / -16 = -0.5
8 * 16 = 128


Generated answers:
['8 - 16 = -8 ( left: --8 )', '8 * -16 = -128 ( left: -128 )', '8 + -16 = -8 ( left: -8 )', '8 / -16 = -0.5 ( left: -0.5 )', '8 * 16 = 128 ( left: -128 )']


Analysis:
--8 is not equal to 24
Output: impossible (--8)


Analysis:
-128 is not equal to 24
Output: impossible (-128)


Analysis:
-8 is not equal to 24
Output: impossible (-8)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
-0.5 is not equal to 24
Output: impossible (-0.5)


Analysis:
-128 is not equal to 24
Output: impossible (-128)


node:
[{'id': 51, 'answer': '8 - 16 = -8 ( left: --8 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}, {'id': 52, 'answer': '8 * -16 = -128 ( left: -128 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}, {'id': 53, 'answer': '8 + -16 = -8 ( left: -8 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}, {'id': 54, 'answer': '8 / -16 = -0.5 ( left: -0.5 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}, {'id': 55, 'answer': '8 * 16 = 128 ( left: -128 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 51, 'answer': '8 - 16 = -8 ( left: --8 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 52, 'answer': '8 * -16 = -128 ( left: -128 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 53, 'answer': '8 + -16 = -8 ( left: -8 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 54, 'answer': '8 / -16 = -0.5 ( left: -0.5 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 55, 'answer': '8 * 16 = 128 ( left: -128 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 39, 'answer': '-2 + 8 = 6 ( left: 6 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


step 2


Generator response:
6 + 8 = 14
8 / 2 = 4
6 - 8 = -2
8 * 6 = 48
6 * 8 = 48


Generated answers:
['6 + 8 = 14 ( left: 14 )', '8 / 2 = 4 ( left: 6 )', '6 - 8 = -2 ( left: -2 )', '8 * 6 = 48 ( left: 48 )', '6 * 8 = 48 ( left: 48 )']


Analysis:
14 is not equal to 24
Output: impossible (14)


Analysis:
6 is not equal to 24
Output: impossible (6)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)


Analysis:
-2 is not equal to 24
Output: impossible (-2)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
48 is not equal to 24
Output: impossible (48)


Analysis:
48 is not equal to 24
Output: impossible (48)


node:
[{'id': 56, 'answer': '6 + 8 = 14 ( left: 14 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 2.0}, {'id': 57, 'answer': '8 / 2 = 4 ( left: 6 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 2.0}, {'id': 58, 'answer': '6 - 8 = -2 ( left: -2 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 2.0}, {'id': 59, 'answer': '8 * 6 = 48 ( left: 48 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 2.0}, {'id': 60, 'answer': '6 * 8 = 48 ( left: 48 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 56, 'answer': '6 + 8 = 14 ( left: 14 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 57, 'answer': '8 / 2 = 4 ( left: 6 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 58, 'answer': '6 - 8 = -2 ( left: -2 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 59, 'answer': '8 * 6 = 48 ( left: 48 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 60, 'answer': '6 * 8 = 48 ( left: 48 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 40, 'answer': '-2 * 8 = -16 ( left: -16 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


step 2


Generator response:
-16 + 8 = -8
-16 / 8 = -2
-16 * 8 = 128
-16 - 8 = -24
-16 - 8 = -24


Generated answers:
['-16 + 8 = -8 ( left: -8 )', '-16 / 8 = -2 ( left: -2 )', '-16 * 8 = 128 ( left: 128 )', '-16 - 8 = -24 ( left: -24 )', '-16 - 8 = -24 ( left: -24 )']


Analysis:
-8 is not equal to 24
Output: impossible (-8)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
-2 is not equal to 24
Output: impossible (-2)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
128 is not equal to 24
Output: impossible (128)


Analysis:
-24 is not equal to 24
Output: impossible (-24)


Analysis:
-24 is not equal to 24
Output: impossible (-24)


node:
[{'id': 61, 'answer': '-16 + 8 = -8 ( left: -8 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 2.0}, {'id': 62, 'answer': '-16 / 8 = -2 ( left: -2 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 2.0}, {'id': 63, 'answer': '-16 * 8 = 128 ( left: 128 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 2.0}, {'id': 64, 'answer': '-16 - 8 = -24 ( left: -24 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 2.0}, {'id': 65, 'answer': '-16 - 8 = -24 ( left: -24 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 61, 'answer': '-16 + 8 = -8 ( left: -8 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 62, 'answer': '-16 / 8 = -2 ( left: -2 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 63, 'answer': '-16 * 8 = 128 ( left: 128 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 64, 'answer': '-16 - 8 = -24 ( left: -24 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 65, 'answer': '-16 - 8 = -24 ( left: -24 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 2.0}


distance: 9
d_threshold: 27.0

input_node:{'id': 3, 'answer': '10 * 8 = 80 ( left: 80 8 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
80 + 8 = 88
12 - 8 = 4
80 / 8 = 10
8 - 12 = -4
80 - 8 = 72


Generated answers:
['80 + 8 = 88 ( left: 88 12 )', '12 - 8 = 4 ( left: 40 8 )', '80 / 8 = 10 ( left: 10 12 )', '8 - 12 = -4 ( left: 0 8 -4 )', '80 - 8 = 72 ( left: 72 12 )']


Analysis:
88 + 12 = 100
88 - 12 = 76
88 * 12 = 1056
88 / 12 = 7.333333333333333
Output: impossible (88 12)


Analysis:
40 + 8 = 48
40 - 8 = 32
40 * 8 = 320
40 / 8 = 5
Output: impossible (40 8)


Analysis:
10 + 12 = 22
12 - 10 = 2
10 * 12 = 120
10 / 12 = 0.83
Output: impossible (10 12)


Analysis:
0 + 8 - 4 = 4
0 * 8 - 4 = -4
Output: impossible (0 8 -4)


Analysis:
72 + 12 = 84
Output: impossible (72 12)


node:
[{'id': 66, 'answer': '80 + 8 = 88 ( left: 88 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 67, 'answer': '12 - 8 = 4 ( left: 40 8 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 68, 'answer': '80 / 8 = 10 ( left: 10 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 69, 'answer': '8 - 12 = -4 ( left: 0 8 -4 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 70, 'answer': '80 - 8 = 72 ( left: 72 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 27.0

input_node:{'id': 66, 'answer': '80 + 8 = 88 ( left: 88 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


step 2


Generator response:
88 + 12 = 100
88 - 12 = 76
88 * 12 = 1056
88 / 12 = 7.333333333333333
88 - 12 = 76


Generated answers:
['88 + 12 = 100 ( left: 100 )', '88 - 12 = 76 ( left: 76 )', '88 * 12 = 1056 ( left: 1056 )', '88 / 12 = 7.333333333333333 ( left: 7.333333333333333 )', '88 - 12 = 76 ( left: 76 )']


Analysis:
100 is not equal to 24
Output: impossible (100)


Analysis:
76 is not equal to 24
Output: impossible (76)

Input: 100
Analysis:
100 is not equal to 24
Output: impossible (100)


Analysis:
1056 is not equal to 24
Output: impossible (1056)


Analysis:
7.333333333333333 is not equal to 24
Output: impossible (7.333333333333333)


Analysis:
76 is not equal to 24
Output: impossible (76)

Input: 100
Analysis:
100 is not equal to 24
Output: impossible (100)


node:
[{'id': 71, 'answer': '88 + 12 = 100 ( left: 100 )', 'value': 'impossible', 'parent_node': 66, 'ancestor_value': 2.0}, {'id': 72, 'answer': '88 - 12 = 76 ( left: 76 )', 'value': 'impossible', 'parent_node': 66, 'ancestor_value': 2.0}, {'id': 73, 'answer': '88 * 12 = 1056 ( left: 1056 )', 'value': 'impossible', 'parent_node': 66, 'ancestor_value': 2.0}, {'id': 74, 'answer': '88 / 12 = 7.333333333333333 ( left: 7.333333333333333 )', 'value': 'impossible', 'parent_node': 66, 'ancestor_value': 2.0}, {'id': 75, 'answer': '88 - 12 = 76 ( left: 76 )', 'value': 'impossible', 'parent_node': 66, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 71, 'answer': '88 + 12 = 100 ( left: 100 )', 'value': 'impossible', 'parent_node': 66, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 72, 'answer': '88 - 12 = 76 ( left: 76 )', 'value': 'impossible', 'parent_node': 66, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 73, 'answer': '88 * 12 = 1056 ( left: 1056 )', 'value': 'impossible', 'parent_node': 66, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 74, 'answer': '88 / 12 = 7.333333333333333 ( left: 7.333333333333333 )', 'value': 'impossible', 'parent_node': 66, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 75, 'answer': '88 - 12 = 76 ( left: 76 )', 'value': 'impossible', 'parent_node': 66, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 67, 'answer': '12 - 8 = 4 ( left: 40 8 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


step 2


Generator response:
40 + 8 = 48
8 / 4 = 2
40 - 8 = 32
8 * 4 = 32
40 / 8 = 5.0000000000000010195330563088676083384960937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000


Generated answers:
['40 + 8 = 48 ( left: 48 )', '8 / 4 = 2 ( left: 20 )', '40 - 8 = 32 ( left: 32 )', '8 * 4 = 32 ( left: 320 )', '40 / 8 = 5.0000000000000010195330563088676083384960937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ( left: 5.0000000000000010195330563088676083384960937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 )']


Analysis:
48 is not equal to 24
Output: impossible (48)


Analysis:
20 is not equal to 24
Output: impossible (20)


Analysis:
32 is not equal to 24
Output: impossible (32)


Analysis:
320 is not equal to 24
Output: impossible (320)



Input


node:
[{'id': 76, 'answer': '40 + 8 = 48 ( left: 48 )', 'value': 'impossible', 'parent_node': 67, 'ancestor_value': 2.0}, {'id': 77, 'answer': '8 / 4 = 2 ( left: 20 )', 'value': 'impossible', 'parent_node': 67, 'ancestor_value': 2.0}, {'id': 78, 'answer': '40 - 8 = 32 ( left: 32 )', 'value': 'impossible', 'parent_node': 67, 'ancestor_value': 2.0}, {'id': 79, 'answer': '8 * 4 = 32 ( left: 320 )', 'value': 'impossible', 'parent_node': 67, 'ancestor_value': 2.0}, {'id': 80, 'answer': '40 / 8 = 5.0000000000000010195330563088676083384960937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ( left: 5.0000000000000010195330563088676083384960937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 )', 'value': None, 'parent_node': 67, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 76, 'answer': '40 + 8 = 48 ( left: 48 )', 'value': 'impossible', 'parent_node': 67, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 77, 'answer': '8 / 4 = 2 ( left: 20 )', 'value': 'impossible', 'parent_node': 67, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 78, 'answer': '40 - 8 = 32 ( left: 32 )', 'value': 'impossible', 'parent_node': 67, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 79, 'answer': '8 * 4 = 32 ( left: 320 )', 'value': 'impossible', 'parent_node': 67, 'ancestor_value': 2.0}


distance: 28.0
d_threshold: 27.0

(prune)input_node:{'id': 80, 'answer': '40 / 8 = 5.0000000000000010195330563088676083384960937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ( left: 5.0000000000000010195330563088676083384960937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 )', 'value': None, 'parent_node': 67, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 68, 'answer': '80 / 8 = 10 ( left: 10 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


step 2


Generator response:
10 + 12 = 22
12 - 10 = 2
12 * 10 = 120
12 / 10 = 1.2
12 + 2 = 14


Generated answers:
['10 + 12 = 22 ( left: 22 )', '12 - 10 = 2 ( left: 2 )', '12 * 10 = 120 ( left: 120 )', '12 / 10 = 1.2 ( left: 1.2 )', '12 + 2 = 14 ( left: 10 )']


Analysis:
22 is not equal to 24
Output: impossible (22)


Analysis:
2 is not equal to 24
Output: impossible (2)


Analysis:
120 is not equal to 24
Output: impossible (120)


Analysis:
1.2 is not equal to 24
Output: impossible (1.2)


Analysis:
10 is not equal to 24
Output: impossible (10)


node:
[{'id': 81, 'answer': '10 + 12 = 22 ( left: 22 )', 'value': 'impossible', 'parent_node': 68, 'ancestor_value': 2.0}, {'id': 82, 'answer': '12 - 10 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 68, 'ancestor_value': 2.0}, {'id': 83, 'answer': '12 * 10 = 120 ( left: 120 )', 'value': 'impossible', 'parent_node': 68, 'ancestor_value': 2.0}, {'id': 84, 'answer': '12 / 10 = 1.2 ( left: 1.2 )', 'value': 'impossible', 'parent_node': 68, 'ancestor_value': 2.0}, {'id': 85, 'answer': '12 + 2 = 14 ( left: 10 )', 'value': 'impossible', 'parent_node': 68, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 81, 'answer': '10 + 12 = 22 ( left: 22 )', 'value': 'impossible', 'parent_node': 68, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 82, 'answer': '12 - 10 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 68, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 83, 'answer': '12 * 10 = 120 ( left: 120 )', 'value': 'impossible', 'parent_node': 68, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 84, 'answer': '12 / 10 = 1.2 ( left: 1.2 )', 'value': 'impossible', 'parent_node': 68, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 85, 'answer': '12 + 2 = 14 ( left: 10 )', 'value': 'impossible', 'parent_node': 68, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 69, 'answer': '8 - 12 = -4 ( left: 0 8 -4 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


step 2


Generator response:
8 + 0 = 8
-4 - 8 = -12
8 / 0 = 8
-4 + 8 = 4
0 * -4 = 0


Generated answers:
['8 + 0 = 8 ( left: 8 -4 )', '-4 - 8 = -12 ( left: 0 -12 )', '8 / 0 = 8 ( left: 8 -4 )', '-4 + 8 = 4 ( left: 0 4 )', '0 * -4 = 0 ( left: 8 0 )']


Analysis:
8 - 4 = 4
-4 is not equal to 24
Output: impossible (8 -4)


Analysis:
0 - 12 = -12
Output: impossible (0 -12)


Analysis:
8 - 4 = 4
-4 is not equal to 24
Output: impossible (8 -4)


Analysis:
0 + 4 = 4
Output: sure (0 4)


Analysis:
8 + 0 = 8
8 - 0 = 8
8 * 0 = 0
8 / 0 is undefined
Output: impossible (8 0)


node:
[{'id': 86, 'answer': '8 + 0 = 8 ( left: 8 -4 )', 'value': 'impossible', 'parent_node': 69, 'ancestor_value': 2.0}, {'id': 87, 'answer': '-4 - 8 = -12 ( left: 0 -12 )', 'value': 'impossible', 'parent_node': 69, 'ancestor_value': 2.0}, {'id': 88, 'answer': '8 / 0 = 8 ( left: 8 -4 )', 'value': 'impossible', 'parent_node': 69, 'ancestor_value': 2.0}, {'id': 89, 'answer': '-4 + 8 = 4 ( left: 0 4 )', 'value': 'sure', 'parent_node': 69, 'ancestor_value': 2.0}, {'id': 90, 'answer': '0 * -4 = 0 ( left: 8 0 )', 'value': 'impossible', 'parent_node': 69, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 86, 'answer': '8 + 0 = 8 ( left: 8 -4 )', 'value': 'impossible', 'parent_node': 69, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 87, 'answer': '-4 - 8 = -12 ( left: 0 -12 )', 'value': 'impossible', 'parent_node': 69, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 88, 'answer': '8 / 0 = 8 ( left: 8 -4 )', 'value': 'impossible', 'parent_node': 69, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 89, 'answer': '-4 + 8 = 4 ( left: 0 4 )', 'value': 'sure', 'parent_node': 69, 'ancestor_value': 2.0}


step 3


distance: 27
d_threshold: 18.0

(prune)input_node:{'id': 90, 'answer': '0 * -4 = 0 ( left: 8 0 )', 'value': 'impossible', 'parent_node': 69, 'ancestor_value': 2.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 70, 'answer': '80 - 8 = 72 ( left: 72 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 4, 'answer': '12 + 8 = 20 ( left: 20 8 10 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
20 - 8 = 12
8 + 10 = 18
20 * 8 = 160
20 - 10 = 10
8 / 2 = 4


Generated answers:
['20 - 8 = 12 ( left: 12 10 )', '8 + 10 = 18 ( left: 20 18 )', '20 * 8 = 160 ( left: 160 10 )', '20 - 10 = 10 ( left: 8 10 )', '8 / 2 = 4 ( left: 40 10 )']


Analysis:
12 + 10 = 22
12 - 10 = 2
12 * 10 = 120
12 / 10 = 1.2
Output: impossible (12 10)


Analysis:
20 + 18 = 38
20 - 18 = 2
20 * 18 = 360
20 / 18 = 1.11
Output: impossible (20 18)


Analysis:
160 + 10 = 170
Output: impossible (160 10)


Analysis:
8 + 10 = 18
8 * 10 = 80
Output: impossible (8 10)


Analysis:
40 + 10 = 50
40 - 10 = 30
40 * 10 = 400
40 / 10 = 4
Output: impossible (40 10)


node:
[{'id': 91, 'answer': '20 - 8 = 12 ( left: 12 10 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 92, 'answer': '8 + 10 = 18 ( left: 20 18 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 93, 'answer': '20 * 8 = 160 ( left: 160 10 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 94, 'answer': '20 - 10 = 10 ( left: 8 10 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 95, 'answer': '8 / 2 = 4 ( left: 40 10 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 91, 'answer': '20 - 8 = 12 ( left: 12 10 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 92, 'answer': '8 + 10 = 18 ( left: 20 18 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 93, 'answer': '20 * 8 = 160 ( left: 160 10 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 94, 'answer': '20 - 10 = 10 ( left: 8 10 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 95, 'answer': '8 / 2 = 4 ( left: 40 10 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 5, 'answer': '12 - 8 = 4 ( left: 4 8 10 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
4 + 8 = 12
4 * 8 = 32
8 - 4 = 4
10 + 4 = 14
10 / 4 = 2.50000000000000106327946360980698969390528799663759354990753532168258463967430414527236538000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000


Generated answers:
['4 + 8 = 12 ( left: 12 10 )', '4 * 8 = 32 ( left: 32 10 )', '8 - 4 = 4 ( left: 4 10 )', '10 + 4 = 14 ( left: 14 8 )', '10 / 4 = 2.50000000000000106327946360980698969390528799663759354990753532168258463967430414527236538000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ( left: 2.50000000000000106327946360980698969390528799663759354990753532168258463967430414527236538000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 8 )']


Analysis:
12 + 10 = 22
12 - 10 = 2
12 * 10 = 120
12 / 10 = 1.2
Output: impossible (12 10)


Analysis:
32 + 10 = 42
32 - 10 = 22
32 * 10 = 320
32 / 10 = 3.2
Output: impossible (32 10)


Analysis:
4 + 10 = 14
4 * 10 = 40
Output: impossible (4 10)


Analysis:
14 + 8 = 22
14 - 8 = 6
14 * 8 = 112
14 / 8 = 1.75
Output: impossible (14 8)



Input


node:
[{'id': 96, 'answer': '4 + 8 = 12 ( left: 12 10 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 97, 'answer': '4 * 8 = 32 ( left: 32 10 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 98, 'answer': '8 - 4 = 4 ( left: 4 10 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 99, 'answer': '10 + 4 = 14 ( left: 14 8 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 100, 'answer': '10 / 4 = 2.50000000000000106327946360980698969390528799663759354990753532168258463967430414527236538000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ( left: 2.50000000000000106327946360980698969390528799663759354990753532168258463967430414527236538000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 8 )', 'value': None, 'parent_node': 5, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 96, 'answer': '4 + 8 = 12 ( left: 12 10 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 97, 'answer': '4 * 8 = 32 ( left: 32 10 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 98, 'answer': '8 - 4 = 4 ( left: 4 10 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 99, 'answer': '10 + 4 = 14 ( left: 14 8 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 19.0
d_threshold: 18.0

(prune)input_node:{'id': 100, 'answer': '10 / 4 = 2.50000000000000106327946360980698969390528799663759354990753532168258463967430414527236538000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ( left: 2.50000000000000106327946360980698969390528799663759354990753532168258463967430414527236538000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 8 )', 'value': None, 'parent_node': 5, 'ancestor_value': 1.0}


all_nodes:
{'id': 0, 'answer': '8 8 10 12', 'value': None, 'parent_node': None, 'ancestor_value': None}
{'id': 1, 'answer': '8 + 8 = 16 ( left: 16 10 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 2, 'answer': '10 - 12 = -2 ( left: 8 8 -2 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 3, 'answer': '10 * 8 = 80 ( left: 80 8 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 4, 'answer': '12 + 8 = 20 ( left: 20 8 10 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 5, 'answer': '12 - 8 = 4 ( left: 4 8 10 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 6, 'answer': '16 + 10 = 26 ( left: 26 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 7, 'answer': '16 - 10 = 6 ( left: 6 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 8, 'answer': '16 / 10 = 1.6 ( left: 1.6 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 9, 'answer': '16 * 10 = 160 ( left: 160 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 10, 'answer': '12 + 16 = 28 ( left: 28 10 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 11, 'answer': '26 + 12 = 38 ( left: 38 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 12, 'answer': '26 - 12 = 14 ( left: 14 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 13, 'answer': '12 * 26 = 312 ( left: 312 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 14, 'answer': '12 / 26 = 0.46153846153846155 ( left: 0.46153846153846155 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 15, 'answer': '12 / 2 = 6 ( left: 66 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 16, 'answer': '6 + 12 = 18 ( left: 18 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 17, 'answer': '6 - 12 = -6 ( left: -6 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 18, 'answer': '12 * 6 = 72 ( left: 72 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 19, 'answer': '12 / 6 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 20, 'answer': '12 - 6 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 21, 'answer': '1.6 + 12 = 13.6 ( left: 13.6 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 22, 'answer': '12 / 1.6 = 7.5 ( left: 7.5 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 23, 'answer': '12 - 1.6 = 10.4 ( left: 10.4 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 24, 'answer': '1.6 * 12 = 19.2 ( left: 19.2 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 25, 'answer': '12 + 1.6 = 13.6 ( left: 13.6 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 26, 'answer': '160 + 12 = 172 ( left: 172 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 27, 'answer': '160 - 12 = 148 ( left: 148 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 28, 'answer': '160 / 12 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 29, 'answer': '160 * 12 = 1920 ( left: 1920 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 30, 'answer': '160 - 2 = 158 ( left: 1158 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 31, 'answer': '28 - 10 = 18 ( left: 18 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 32, 'answer': '28 + 10 = 38 ( left: 38 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 33, 'answer': '10 / 2 = 5 ( left: 58 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 34, 'answer': '10 * 2 = 20 ( left: 208 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 35, 'answer': '28 - 10 = 18 ( left: 18 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 36, 'answer': '8 + 8 = 16 ( left: 16 -2 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 37, 'answer': '8 - 8 = 0 ( left: 0 -2 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 38, 'answer': '8 * -2 = -16 ( left: 8 -16 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 39, 'answer': '-2 + 8 = 6 ( left: 6 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 40, 'answer': '-2 * 8 = -16 ( left: -16 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 41, 'answer': '16 + 2 = 18 ( left: -18 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 42, 'answer': '16 / 2 = 8 ( left: -8 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 43, 'answer': '-2 + 16 = 14 ( left: 14 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 44, 'answer': '-2 * 16 = -32 ( left: -32 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 45, 'answer': '16 - 2 = 14 ( left: -14 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 46, 'answer': '-2 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 47, 'answer': '-2 / 0 = -1.0 ( left: -1.0 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 48, 'answer': '-2 + 0 = -2 ( left: -2 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 49, 'answer': '0 - 2 = -2 ( left: --2 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 50, 'answer': '0 * -2 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 51, 'answer': '8 - 16 = -8 ( left: --8 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}
{'id': 52, 'answer': '8 * -16 = -128 ( left: -128 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}
{'id': 53, 'answer': '8 + -16 = -8 ( left: -8 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}
{'id': 54, 'answer': '8 / -16 = -0.5 ( left: -0.5 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}
{'id': 55, 'answer': '8 * 16 = 128 ( left: -128 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}
{'id': 56, 'answer': '6 + 8 = 14 ( left: 14 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 2.0}
{'id': 57, 'answer': '8 / 2 = 4 ( left: 6 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 2.0}
{'id': 58, 'answer': '6 - 8 = -2 ( left: -2 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 2.0}
{'id': 59, 'answer': '8 * 6 = 48 ( left: 48 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 2.0}
{'id': 60, 'answer': '6 * 8 = 48 ( left: 48 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 2.0}
{'id': 61, 'answer': '-16 + 8 = -8 ( left: -8 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 2.0}
{'id': 62, 'answer': '-16 / 8 = -2 ( left: -2 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 2.0}
{'id': 63, 'answer': '-16 * 8 = 128 ( left: 128 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 2.0}
{'id': 64, 'answer': '-16 - 8 = -24 ( left: -24 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 2.0}
{'id': 65, 'answer': '-16 - 8 = -24 ( left: -24 )', 'value': 'impossible', 'parent_node': 40, 'ancestor_value': 2.0}
{'id': 66, 'answer': '80 + 8 = 88 ( left: 88 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 67, 'answer': '12 - 8 = 4 ( left: 40 8 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 68, 'answer': '80 / 8 = 10 ( left: 10 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 69, 'answer': '8 - 12 = -4 ( left: 0 8 -4 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 70, 'answer': '80 - 8 = 72 ( left: 72 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 71, 'answer': '88 + 12 = 100 ( left: 100 )', 'value': 'impossible', 'parent_node': 66, 'ancestor_value': 2.0}
{'id': 72, 'answer': '88 - 12 = 76 ( left: 76 )', 'value': 'impossible', 'parent_node': 66, 'ancestor_value': 2.0}
{'id': 73, 'answer': '88 * 12 = 1056 ( left: 1056 )', 'value': 'impossible', 'parent_node': 66, 'ancestor_value': 2.0}
{'id': 74, 'answer': '88 / 12 = 7.333333333333333 ( left: 7.333333333333333 )', 'value': 'impossible', 'parent_node': 66, 'ancestor_value': 2.0}
{'id': 75, 'answer': '88 - 12 = 76 ( left: 76 )', 'value': 'impossible', 'parent_node': 66, 'ancestor_value': 2.0}
{'id': 76, 'answer': '40 + 8 = 48 ( left: 48 )', 'value': 'impossible', 'parent_node': 67, 'ancestor_value': 2.0}
{'id': 77, 'answer': '8 / 4 = 2 ( left: 20 )', 'value': 'impossible', 'parent_node': 67, 'ancestor_value': 2.0}
{'id': 78, 'answer': '40 - 8 = 32 ( left: 32 )', 'value': 'impossible', 'parent_node': 67, 'ancestor_value': 2.0}
{'id': 79, 'answer': '8 * 4 = 32 ( left: 320 )', 'value': 'impossible', 'parent_node': 67, 'ancestor_value': 2.0}
{'id': 80, 'answer': '40 / 8 = 5.0000000000000010195330563088676083384960937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ( left: 5.0000000000000010195330563088676083384960937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 )', 'value': None, 'parent_node': 67, 'ancestor_value': 2.0}
{'id': 81, 'answer': '10 + 12 = 22 ( left: 22 )', 'value': 'impossible', 'parent_node': 68, 'ancestor_value': 2.0}
{'id': 82, 'answer': '12 - 10 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 68, 'ancestor_value': 2.0}
{'id': 83, 'answer': '12 * 10 = 120 ( left: 120 )', 'value': 'impossible', 'parent_node': 68, 'ancestor_value': 2.0}
{'id': 84, 'answer': '12 / 10 = 1.2 ( left: 1.2 )', 'value': 'impossible', 'parent_node': 68, 'ancestor_value': 2.0}
{'id': 85, 'answer': '12 + 2 = 14 ( left: 10 )', 'value': 'impossible', 'parent_node': 68, 'ancestor_value': 2.0}
{'id': 86, 'answer': '8 + 0 = 8 ( left: 8 -4 )', 'value': 'impossible', 'parent_node': 69, 'ancestor_value': 2.0}
{'id': 87, 'answer': '-4 - 8 = -12 ( left: 0 -12 )', 'value': 'impossible', 'parent_node': 69, 'ancestor_value': 2.0}
{'id': 88, 'answer': '8 / 0 = 8 ( left: 8 -4 )', 'value': 'impossible', 'parent_node': 69, 'ancestor_value': 2.0}
{'id': 89, 'answer': '-4 + 8 = 4 ( left: 0 4 )', 'value': 'sure', 'parent_node': 69, 'ancestor_value': 2.0}
{'id': 90, 'answer': '0 * -4 = 0 ( left: 8 0 )', 'value': 'impossible', 'parent_node': 69, 'ancestor_value': 2.0}
{'id': 91, 'answer': '20 - 8 = 12 ( left: 12 10 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 92, 'answer': '8 + 10 = 18 ( left: 20 18 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 93, 'answer': '20 * 8 = 160 ( left: 160 10 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 94, 'answer': '20 - 10 = 10 ( left: 8 10 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 95, 'answer': '8 / 2 = 4 ( left: 40 10 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 96, 'answer': '4 + 8 = 12 ( left: 12 10 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 97, 'answer': '4 * 8 = 32 ( left: 32 10 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 98, 'answer': '8 - 4 = 4 ( left: 4 10 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 99, 'answer': '10 + 4 = 14 ( left: 14 8 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 100, 'answer': '10 / 4 = 2.50000000000000106327946360980698969390528799663759354990753532168258463967430414527236538000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ( left: 2.50000000000000106327946360980698969390528799663759354990753532168258463967430414527236538000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 8 )', 'value': None, 'parent_node': 5, 'ancestor_value': 1.0}


linked list:
000 -> 1 -> 2 -> 3 -> 4 -> 5

001 -> 6 -> 7 -> 8 -> 9 -> 10

002 -> 36 -> 37 -> 38 -> 39 -> 40

003 -> 66 -> 67 -> 68 -> 69 -> 70

004 -> 91 -> 92 -> 93 -> 94 -> 95

005 -> 96 -> 97 -> 98 -> 99 -> 100

006 -> 11 -> 12 -> 13 -> 14 -> 15

007 -> 16 -> 17 -> 18 -> 19 -> 20

008 -> 21 -> 22 -> 23 -> 24 -> 25

009 -> 26 -> 27 -> 28 -> 29 -> 30

010 -> 31 -> 32 -> 33 -> 34 -> 35

011

012

013

014

015

016

017

018

019

020

021

022

023

024

025

026

027

028

029

030

031

032

033

034

035

036 -> 41 -> 42 -> 43 -> 44 -> 45

037 -> 46 -> 47 -> 48 -> 49 -> 50

038 -> 51 -> 52 -> 53 -> 54 -> 55

039 -> 56 -> 57 -> 58 -> 59 -> 60

040 -> 61 -> 62 -> 63 -> 64 -> 65

041

042

043

044

045

046

047

048

049

050

051

052

053

054

055

056

057

058

059

060

061

062

063

064

065

066 -> 71 -> 72 -> 73 -> 74 -> 75

067 -> 76 -> 77 -> 78 -> 79 -> 80

068 -> 81 -> 82 -> 83 -> 84 -> 85

069 -> 86 -> 87 -> 88 -> 89 -> 90

070

071

072

073

074

075

076

077

078

079

080

081

082

083

084

085

086

087

088

089

090

091

092

093

094

095

096

097

098

099

100

101

102

103

104

105

106

107

108

109

110

111

112

113

114

115

116

117

118

119

120

121

122

123

124

125

126

127

128

129

130

131

132

133

134

135

136

137

138

139

140

141

142

143

144

145

146

147

148

149

150

151

152

153

154

155


best node: {'id': 89, 'answer': '-4 + 8 = 4 ( left: 0 4 )', 'value': 'sure', 'parent_node': 69, 'ancestor_value': 2.0}

best node: {'id': 69, 'answer': '8 - 12 = -4 ( left: 0 8 -4 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}

best node: {'id': 3, 'answer': '10 * 8 = 80 ( left: 80 8 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}

best node: {'id': 0, 'answer': '8 8 10 12', 'value': None, 'parent_node': None, 'ancestor_value': None}

path: ['-4 + 8 = 4 ( left: 0 4 )', '8 - 12 = -4 ( left: 0 8 -4 )', '10 * 8 = 80 ( left: 80 8 12 )', '( left: 8 8 10 12 )']


wrong format
 0 ( ( 8 - 12 ) + 8 ) 
 80 8 12 


['-4 + 8 = 4 ( left: 0 4 )', '8 - 12 = -4 ( left: 0 8 -4 )', '10 * 8 = 80 ( left: 80 8 12 )', '( left: 8 8 10 12 )']
 0 ( ( 8 - 12 ) + 8 ) 


Answer: 
 0 ( ( 8 - 12 ) + 8 ) 

