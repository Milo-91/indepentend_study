TheBloke/OpenHermes-2.5-Mistral-7B-GPTQ
temperature: 0.5, 0
date: 2024-01-18


step 1


Generator response:
8 + 8 = 16
8 - 8 = 0
8 / 8 = 1
8 * 8 = 64
8 + 8 = 16


Generated answers:
['8 + 8 = 16 ( left: 5 16 8 )', '8 - 8 = 0 ( left: 5 0 8 )', '8 / 8 = 1 ( left: 5 1 8 )', '8 * 8 = 64 ( left: 5 64 8 )', '8 + 8 = 16 ( left: 5 16 8 )']


Analysis:
5 + 16 + 8 = 29
5 * 16 = 80
5 / 16 = 0.31
Output: impossible (5 16 8)


Analysis:
5 + 0 + 8 = 13
5 * 0 = 0
5 / 0 is undefined
Output: impossible (5 0 8)


Analysis:
5 + 1 + 8 = 14
5 * 1 * 8 = 40
Output: impossible (5 1 8)


Analysis:
5 + 64 + 8 = 77
5 * 64 = 320
5 / 64 = 0.078125
Output: impossible (5 64 8)


Analysis:
5 + 16 + 8 = 29
5 * 16 = 80
5 / 16 = 0.31
Output: impossible (5 16 8)


node:
[{'id': 1, 'answer': '8 + 8 = 16 ( left: 5 16 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 2, 'answer': '8 - 8 = 0 ( left: 5 0 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '8 / 8 = 1 ( left: 5 1 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '8 * 8 = 64 ( left: 5 64 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '8 + 8 = 16 ( left: 5 16 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}]
5


step 2


Generator response:
16 + 8 = 24
5 - 8 = -3
5 * 16 = 80
8 / 5 = 1.6
16 - 8 = 8


Generated answers:
['16 + 8 = 24 ( left: 5 24 )', '5 - 8 = -3 ( left: 16 -3 )', '5 * 16 = 80 ( left: 80 8 )', '8 / 5 = 1.6 ( left: 1.6 16 )', '16 - 8 = 8 ( left: 5 8 )']


Analysis:
5 + 24 = 29
Output: impossible (5 24)


Analysis:
16 - 3 = 13
Output: impossible (16 -3)


Analysis:
80 + 8 = 88
80 - 8 = 72
8 * 8 = 64
80 / 8 = 10
Output: impossible (80 8)


Analysis:
1.6 + 16 = 17.6
16 - 1.6 = 14.4
1.6 * 16 = 25.6
1.6 / 16 = 0.1
Output: impossible (1.6 16)


Analysis:
5 + 8 = 13
5 * 8 = 40
Output: impossible (5 8)


node:
[{'id': 6, 'answer': '16 + 8 = 24 ( left: 5 24 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 7, 'answer': '5 - 8 = -3 ( left: 16 -3 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 8, 'answer': '5 * 16 = 80 ( left: 80 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 9, 'answer': '8 / 5 = 1.6 ( left: 1.6 16 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 10, 'answer': '16 - 8 = 8 ( left: 5 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}]
5


step 3


Generator response:
5 + 24 = 29
5 - 24 = -19
5 * 24 = 120
5 / 24 = 0
24 / 5 = 4.8


Generated answers:
['5 + 24 = 29 ( left: 29 )', '5 - 24 = -19 ( left: -19 )', '5 * 24 = 120 ( left: 120 )', '5 / 24 = 0 ( left: 0 )', '24 / 5 = 4.8 ( left: 4.8 )']


Analysis:
29 is not equal to 24
Output: impossible (29)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 / 10 = 1
Output: impossible (10 10 10)


Analysis:
-19 is not equal to 24
Output: impossible (-19)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
120 is not equal to 24
Output: impossible (120)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
4.8 is not equal to 24
Output: impossible (4.8)


node:
[{'id': 11, 'answer': '5 + 24 = 29 ( left: 29 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 12, 'answer': '5 - 24 = -19 ( left: -19 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 13, 'answer': '5 * 24 = 120 ( left: 120 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 14, 'answer': '5 / 24 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 15, 'answer': '24 / 5 = 4.8 ( left: 4.8 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}]
5


linked list:
000 -> 1 -> 2 -> 3 -> 4 -> 5

001 -> 6 -> 7 -> 8 -> 9 -> 10

002

003

004

005

006 -> 11 -> 12 -> 13 -> 14 -> 15

007

008

009

010

011

012

013

014

015

016

017

018

019

020

021

022

023

024

025

026

027

028

029

030

031

032

033

034

035

036

037

038

039

040

041

042

043

044

045

046

047

048

049

050

051

052

053

054

055

056

057

058

059

060

061

062

063

064

065

066

067

068

069

070

071

072

073

074

075

076

077

078

079

080

081

082

083

084

085

086

087

088

089

090

091

092

093

094

095

096

097

098

099

100

101

102

103

104

105

106

107

108

109

110

111

112

113

114

115

116

117

118

119

120

121

122

123

124

125

126

127

128

129

130

131

132

133

134

135

136

137

138

139

140

141

142

143

144

145

146

147

148

149

150

151

152

153

154

155


path: ['5 + 24 = 29 ( left: 29 )', '16 + 8 = 24 ( left: 5 24 )', '8 + 8 = 16 ( left: 5 16 8 )', '( left: 5 8 8 8 )']


['5 + 24 = 29 ( left: 29 )', '16 + 8 = 24 ( left: 5 24 )', '8 + 8 = 16 ( left: 5 16 8 )', '( left: 5 8 8 8 )']
 ( 5 + ( ( 8 + 8 ) + 8 ) ) 


Answer: 
 ( 5 + ( ( 8 + 8 ) + 8 ) ) 


d_thres: 27.0

step 0


distance: 9
d_threshold: 27.0

input_node:{'id': 1, 'answer': '8 + 8 = 16 ( left: 5 16 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


distance: 18
d_threshold: 27.0

input_node:{'id': 6, 'answer': '16 + 8 = 24 ( left: 5 24 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 11, 'answer': '5 + 24 = 29 ( left: 29 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 12, 'answer': '5 - 24 = -19 ( left: -19 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 13, 'answer': '5 * 24 = 120 ( left: 120 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 14, 'answer': '5 / 24 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 15, 'answer': '24 / 5 = 4.8 ( left: 4.8 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 7, 'answer': '5 - 8 = -3 ( left: 16 -3 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
16 + 3 = 19
16 * -3 = -48
-3 / 16 = -0.1875
16 - 3 = 13
-3 + 16 = 13


Generated answers:
['16 + 3 = 19 ( left: -19 )', '16 * -3 = -48 ( left: -48 )', '-3 / 16 = -0.1875 ( left: -0.1875 )', '16 - 3 = 13 ( left: -13 )', '-3 + 16 = 13 ( left: 13 )']


Analysis:
-19 is not equal to 24
Output: impossible (-19)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
-48 is not equal to 24
Output: impossible (-48)


Analysis:
-0.1875 is not equal to 24
Output: impossible (-0.1875)


Analysis:
-13 is not equal to 24
Output: impossible (-13)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 / 10 = 1
Output: impossible (10 10 10)


Analysis:
13 is not equal to 24
Output: impossible (13)

Input: 10 10
Analysis:
10 + 10 = 20
Output: sure (10 10)


node:
[{'id': 16, 'answer': '16 + 3 = 19 ( left: -19 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 17, 'answer': '16 * -3 = -48 ( left: -48 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 18, 'answer': '-3 / 16 = -0.1875 ( left: -0.1875 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 19, 'answer': '16 - 3 = 13 ( left: -13 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 20, 'answer': '-3 + 16 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 16, 'answer': '16 + 3 = 19 ( left: -19 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 17, 'answer': '16 * -3 = -48 ( left: -48 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 18, 'answer': '-3 / 16 = -0.1875 ( left: -0.1875 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 19, 'answer': '16 - 3 = 13 ( left: -13 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 20, 'answer': '-3 + 16 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 8, 'answer': '5 * 16 = 80 ( left: 80 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
80 + 8 = 88
80 - 8 = 72
80 / 8 = 10
80 * 8 = 640
80 / 8 = 10


Generated answers:
['80 + 8 = 88 ( left: 88 )', '80 - 8 = 72 ( left: 72 )', '80 / 8 = 10 ( left: 10 )', '80 * 8 = 640 ( left: 640 )', '80 / 8 = 10 ( left: 10 )']


Analysis:
88 is not equal to 24
Output: impossible (88)

Input: 100
Analysis:
100 is not equal to 24
Output: impossible (100)


Analysis:
72 is not equal to 24
Output: impossible (72)

Input: 100
Analysis:
100 is not equal to 24
Output: impossible (100)


Analysis:
10 is not equal to 24
Output: impossible (10)


Analysis:
640 is not equal to 24
Output: impossible (640)


Analysis:
10 is not equal to 24
Output: impossible (10)


node:
[{'id': 21, 'answer': '80 + 8 = 88 ( left: 88 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 22, 'answer': '80 - 8 = 72 ( left: 72 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 23, 'answer': '80 / 8 = 10 ( left: 10 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 24, 'answer': '80 * 8 = 640 ( left: 640 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 25, 'answer': '80 / 8 = 10 ( left: 10 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 21, 'answer': '80 + 8 = 88 ( left: 88 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 22, 'answer': '80 - 8 = 72 ( left: 72 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 23, 'answer': '80 / 8 = 10 ( left: 10 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 24, 'answer': '80 * 8 = 640 ( left: 640 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 25, 'answer': '80 / 8 = 10 ( left: 10 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 9, 'answer': '8 / 5 = 1.6 ( left: 1.6 16 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
1.6 + 16 = 17.6
16 - 1.6 = 14.4
16 * 1.6 = 25.6
16 / 1.6 = 10
16 / 1.6 = 9.999999999999997168665775607917594757910156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000


Generated answers:
['1.6 + 16 = 17.6 ( left: 17.6 )', '16 - 1.6 = 14.4 ( left: 14.4 )', '16 * 1.6 = 25.6 ( left: 25.6 )', '16 / 1.6 = 10 ( left: 10 )', '16 / 1.6 = 9.999999999999997168665775607917594757910156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ( left: 9.999999999999997168665775607917594757910156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 )']


Analysis:
17.6 is not equal to 24
Output: impossible (17.6)


Analysis:
14.4 is not equal to 24
Output: impossible (14.4)

Input: 1.2
Analysis:
1.2 is not equal to 24
Output: impossible (1.2)

Input: 0.001
Analysis:
0.001 is not equal to 24
Output: impossible (0.001)


Analysis:
25.6 is not equal to 24
Output: impossible (25.6)

Input: 24.5
Analysis:
24.5 is not equal to 24
Output: impossible (24.5)


Analysis:
10 is not equal to 24
Output: impossible (10)



Input


node:
[{'id': 26, 'answer': '1.6 + 16 = 17.6 ( left: 17.6 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 27, 'answer': '16 - 1.6 = 14.4 ( left: 14.4 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 28, 'answer': '16 * 1.6 = 25.6 ( left: 25.6 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 29, 'answer': '16 / 1.6 = 10 ( left: 10 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 30, 'answer': '16 / 1.6 = 9.999999999999997168665775607917594757910156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ( left: 9.999999999999997168665775607917594757910156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 )', 'value': None, 'parent_node': 9, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 26, 'answer': '1.6 + 16 = 17.6 ( left: 17.6 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 27, 'answer': '16 - 1.6 = 14.4 ( left: 14.4 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 28, 'answer': '16 * 1.6 = 25.6 ( left: 25.6 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 29, 'answer': '16 / 1.6 = 10 ( left: 10 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 28.0
d_threshold: 27.0

(prune)input_node:{'id': 30, 'answer': '16 / 1.6 = 9.999999999999997168665775607917594757910156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ( left: 9.999999999999997168665775607917594757910156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 )', 'value': None, 'parent_node': 9, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 10, 'answer': '16 - 8 = 8 ( left: 5 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
5 + 8 = 13
5 * 8 = 40
5 - 8 = -3
5 / 8 = 0.625
5 * 8 = 40.000000000000003


Generated answers:
['5 + 8 = 13 ( left: 13 )', '5 * 8 = 40 ( left: 40 )', '5 - 8 = -3 ( left: -3 )', '5 / 8 = 0.625 ( left: 0.625 )', '5 * 8 = 40.000000000000003 ( left: 40.000000000000003 )']


Analysis:
13 is not equal to 24
Output: impossible (13)

Input: 10 10
Analysis:
10 + 10 = 20
Output: sure (10 10)


Analysis:
40 is not equal to 24
Output: impossible (40)


Analysis:
-3 is not equal to 24
Output: impossible (-3)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
0.625 is not equal to 24
Output: impossible (0.625)


Analysis:
40.000000000000003 is not equal to 24
Output: impossible (40.000000000000003)


node:
[{'id': 31, 'answer': '5 + 8 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 32, 'answer': '5 * 8 = 40 ( left: 40 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 33, 'answer': '5 - 8 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 34, 'answer': '5 / 8 = 0.625 ( left: 0.625 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 35, 'answer': '5 * 8 = 40.000000000000003 ( left: 40.000000000000003 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 31, 'answer': '5 + 8 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 32, 'answer': '5 * 8 = 40 ( left: 40 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 33, 'answer': '5 - 8 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 34, 'answer': '5 / 8 = 0.625 ( left: 0.625 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 35, 'answer': '5 * 8 = 40.000000000000003 ( left: 40.000000000000003 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 9
d_threshold: 27.0

input_node:{'id': 2, 'answer': '8 - 8 = 0 ( left: 5 0 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
5 + 0 = 5
0 - 5 = -5
8 + 5 = 13
5 * 8 = 40
8 - 5 = 3


Generated answers:
['5 + 0 = 5 ( left: 5 8 )', '0 - 5 = -5 ( left: -5 8 )', '8 + 5 = 13 ( left: 13 0 )', '5 * 8 = 40 ( left: 0 40 )', '8 - 5 = 3 ( left: 3 0 )']


Analysis:
5 + 8 = 13
5 * 8 = 40
Output: impossible (5 8)


Analysis:
-5 + 8 = 3
-5 * 8 = -40
Output: impossible (-5 8)


Analysis:
13 + 0 = 13
Output: sure (13 0)


Analysis:
0 + 40 = 40
Output: sure (0 40)


Analysis:
3 + 0 = 3
Output: impossible (3 0)


node:
[{'id': 36, 'answer': '5 + 0 = 5 ( left: 5 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 37, 'answer': '0 - 5 = -5 ( left: -5 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 38, 'answer': '8 + 5 = 13 ( left: 13 0 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 39, 'answer': '5 * 8 = 40 ( left: 0 40 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 40, 'answer': '8 - 5 = 3 ( left: 3 0 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 27.0

input_node:{'id': 36, 'answer': '5 + 0 = 5 ( left: 5 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


step 2


Generator response:
5 + 8 = 13
8 - 5 = 3
5 * 8 = 40
5 / 8 = 0.625
5 - 8 = -3


Generated answers:
['5 + 8 = 13 ( left: 13 )', '8 - 5 = 3 ( left: 3 )', '5 * 8 = 40 ( left: 40 )', '5 / 8 = 0.625 ( left: 0.625 )', '5 - 8 = -3 ( left: -3 )']


Analysis:
13 is not equal to 24
Output: impossible (13)

Input: 10 10
Analysis:
10 + 10 = 20
Output: sure (10 10)


Analysis:
3 is not equal to 24
Output: impossible (3)


Analysis:
40 is not equal to 24
Output: impossible (40)


Analysis:
0.625 is not equal to 24
Output: impossible (0.625)


Analysis:
-3 is not equal to 24
Output: impossible (-3)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


node:
[{'id': 41, 'answer': '5 + 8 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}, {'id': 42, 'answer': '8 - 5 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}, {'id': 43, 'answer': '5 * 8 = 40 ( left: 40 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}, {'id': 44, 'answer': '5 / 8 = 0.625 ( left: 0.625 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}, {'id': 45, 'answer': '5 - 8 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 41, 'answer': '5 + 8 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 42, 'answer': '8 - 5 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 43, 'answer': '5 * 8 = 40 ( left: 40 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 44, 'answer': '5 / 8 = 0.625 ( left: 0.625 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 45, 'answer': '5 - 8 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 37, 'answer': '0 - 5 = -5 ( left: -5 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


step 2


Generator response:
-5 + 8 = 3
-5 - 8 = -13
-5 * 8 = -40
-5 / 8 = -0.625
-5 + 8 = 3


Generated answers:
['-5 + 8 = 3 ( left: 3 )', '-5 - 8 = -13 ( left: -13 )', '-5 * 8 = -40 ( left: -40 )', '-5 / 8 = -0.625 ( left: -0.625 )', '-5 + 8 = 3 ( left: 3 )']


Analysis:
3 is not equal to 24
Output: impossible (3)


Analysis:
-13 is not equal to 24
Output: impossible (-13)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 / 10 = 1
Output: impossible (10 10 10)


Analysis:
-40 is not equal to 24
Output: impossible (-40)


Analysis:
-0.625 is not equal to 24
Output: impossible (-0.625)


Analysis:
3 is not equal to 24
Output: impossible (3)


node:
[{'id': 46, 'answer': '-5 + 8 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}, {'id': 47, 'answer': '-5 - 8 = -13 ( left: -13 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}, {'id': 48, 'answer': '-5 * 8 = -40 ( left: -40 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}, {'id': 49, 'answer': '-5 / 8 = -0.625 ( left: -0.625 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}, {'id': 50, 'answer': '-5 + 8 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 46, 'answer': '-5 + 8 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 47, 'answer': '-5 - 8 = -13 ( left: -13 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 48, 'answer': '-5 * 8 = -40 ( left: -40 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 49, 'answer': '-5 / 8 = -0.625 ( left: -0.625 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 50, 'answer': '-5 + 8 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 9
d_threshold: 27.0

input_node:{'id': 38, 'answer': '8 + 5 = 13 ( left: 13 0 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}


step 2


Generator response:
13 + 0 = 13
13 - 0 = 13
0 * 13 = 0
13 / 0 = 0
13 / 0 = 0


Generated answers:
['13 + 0 = 13 ( left: 13 )', '13 - 0 = 13 ( left: 13 )', '0 * 13 = 0 ( left: 0 )', '13 / 0 = 0 ( left: 0 )', '13 / 0 = 0 ( left: 0 )']


Analysis:
13 is not equal to 24
Output: impossible (13)

Input: 10 10
Analysis:
10 + 10 = 20
Output: sure (10 10)


Analysis:
13 is not equal to 24
Output: impossible (13)

Input: 10 10
Analysis:
10 + 10 = 20
Output: sure (10 10)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


node:
[{'id': 51, 'answer': '13 + 0 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}, {'id': 52, 'answer': '13 - 0 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}, {'id': 53, 'answer': '0 * 13 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}, {'id': 54, 'answer': '13 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}, {'id': 55, 'answer': '13 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 27.0

input_node:{'id': 51, 'answer': '13 + 0 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}


step 3


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 52, 'answer': '13 - 0 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 53, 'answer': '0 * 13 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 54, 'answer': '13 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 55, 'answer': '13 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 39, 'answer': '5 * 8 = 40 ( left: 0 40 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}


step 2


Generator response:
40 + 0 = 40
40 - 0 = 40
0 * 40 = 0
40 / 0 = 0
40 + 0 = 40


Generated answers:
['40 + 0 = 40 ( left: 40 )', '40 - 0 = 40 ( left: 40 )', '0 * 40 = 0 ( left: 0 )', '40 / 0 = 0 ( left: 0 )', '40 + 0 = 40 ( left: 40 )']


Analysis:
40 is not equal to 24
Output: impossible (40)


Analysis:
40 is not equal to 24
Output: impossible (40)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
40 is not equal to 24
Output: impossible (40)


node:
[{'id': 56, 'answer': '40 + 0 = 40 ( left: 40 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}, {'id': 57, 'answer': '40 - 0 = 40 ( left: 40 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}, {'id': 58, 'answer': '0 * 40 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}, {'id': 59, 'answer': '40 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}, {'id': 60, 'answer': '40 + 0 = 40 ( left: 40 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 56, 'answer': '40 + 0 = 40 ( left: 40 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 57, 'answer': '40 - 0 = 40 ( left: 40 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 58, 'answer': '0 * 40 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 59, 'answer': '40 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 60, 'answer': '40 + 0 = 40 ( left: 40 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 40, 'answer': '8 - 5 = 3 ( left: 3 0 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 3, 'answer': '8 / 8 = 1 ( left: 5 1 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
5 + 1 = 6
1 * 8 = 8
8 - 1 = 7
5 - 1 = 4
1 + 8 = 9


Generated answers:
['5 + 1 = 6 ( left: 6 8 )', '1 * 8 = 8 ( left: 5 8 )', '8 - 1 = 7 ( left: 5 7 )', '5 - 1 = 4 ( left: 4 8 )', '1 + 8 = 9 ( left: 5 9 )']


Analysis:
6 + 8 = 14
6 * 8 = 48
Output: impossible (6 8)


Analysis:
5 + 8 = 13
5 * 8 = 40
Output: impossible (5 8)


Analysis:
5 + 7 = 12
5 * 7 = 35
Output: impossible (5 7)


Analysis:
4 + 8 = 12
4 * 8 = 32
Output: impossible (4 8)


Analysis:
5 + 9 = 14
5 * 9 = 45
Output: impossible (5 9)


node:
[{'id': 61, 'answer': '5 + 1 = 6 ( left: 6 8 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 62, 'answer': '1 * 8 = 8 ( left: 5 8 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 63, 'answer': '8 - 1 = 7 ( left: 5 7 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 64, 'answer': '5 - 1 = 4 ( left: 4 8 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 65, 'answer': '1 + 8 = 9 ( left: 5 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 61, 'answer': '5 + 1 = 6 ( left: 6 8 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 62, 'answer': '1 * 8 = 8 ( left: 5 8 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 63, 'answer': '8 - 1 = 7 ( left: 5 7 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 64, 'answer': '5 - 1 = 4 ( left: 4 8 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 65, 'answer': '1 + 8 = 9 ( left: 5 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 4, 'answer': '8 * 8 = 64 ( left: 5 64 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
5 + 64 = 69
64 / 5 = 12.8
8 - 5 = 3
5 * 64 = 320
64 - 8 = 56


Generated answers:
['5 + 64 = 69 ( left: 69 8 )', '64 / 5 = 12.8 ( left: 12.8 8 )', '8 - 5 = 3 ( left: 3 64 )', '5 * 64 = 320 ( left: 320 8 )', '64 - 8 = 56 ( left: 5 56 )']


Analysis:
69 + 8 = 77
69 - 8 = 61
69 * 8 = 552
69 / 8 = 8.125
Output: impossible (69 8)


Analysis:
12.8 + 8 = 20.8
12.8 * 8 = 102.4
12.8 / 8 = 1.6
Output: impossible (12.8 8)


Analysis:
3 + 64 = 67
3 * 64 = 192
Output: impossible (3 64)


Analysis:
320 + 8 = 328
320 - 8 = 312
320 * 8 = 2560
320 / 8 = 40
Output: impossible (320 8)


Analysis:
5 + 56 = 61
Output: impossible (5 56)


node:
[{'id': 66, 'answer': '5 + 64 = 69 ( left: 69 8 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 67, 'answer': '64 / 5 = 12.8 ( left: 12.8 8 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 68, 'answer': '8 - 5 = 3 ( left: 3 64 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 69, 'answer': '5 * 64 = 320 ( left: 320 8 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 70, 'answer': '64 - 8 = 56 ( left: 5 56 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 66, 'answer': '5 + 64 = 69 ( left: 69 8 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 67, 'answer': '64 / 5 = 12.8 ( left: 12.8 8 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 68, 'answer': '8 - 5 = 3 ( left: 3 64 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 69, 'answer': '5 * 64 = 320 ( left: 320 8 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 70, 'answer': '64 - 8 = 56 ( left: 5 56 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 5, 'answer': '8 + 8 = 16 ( left: 5 16 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
5 + 16 = 21
16 / 5 = 3
8 + 5 = 13
5 - 16 = -11
8 * 5 = 40


Generated answers:
['5 + 16 = 21 ( left: 21 8 )', '16 / 5 = 3 ( left: 3 8 )', '8 + 5 = 13 ( left: 13 16 )', '5 - 16 = -11 ( left: -11 8 )', '8 * 5 = 40 ( left: 40 16 )']


Analysis:
21 + 8 = 29
21 - 8 = 13
21 * 8 = 168
21 / 8 = 2.75
Output: impossible (21 8)


Analysis:
3 + 8 = 11
3 * 8 = 24
Output: sure (3 8)


Analysis:
13 + 16 = 29
16 - 13 = 3
13 * 16 = 208
13 / 16 = 0.8125
Output: impossible (13 16)


Analysis:
-11 + 8 = -3
-11 * 8 = -88
Output: impossible (-11 8)


Analysis:
40 + 16 = 56
40 - 16 = 24
Output: sure (40 16)


node:
[{'id': 71, 'answer': '5 + 16 = 21 ( left: 21 8 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 72, 'answer': '16 / 5 = 3 ( left: 3 8 )', 'value': 'sure', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 73, 'answer': '8 + 5 = 13 ( left: 13 16 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 74, 'answer': '5 - 16 = -11 ( left: -11 8 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 75, 'answer': '8 * 5 = 40 ( left: 40 16 )', 'value': 'sure', 'parent_node': 5, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 71, 'answer': '5 + 16 = 21 ( left: 21 8 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 72, 'answer': '16 / 5 = 3 ( left: 3 8 )', 'value': 'sure', 'parent_node': 5, 'ancestor_value': 1.0}


step 2


Generator response:
8 + 3 = 11
8 - 3 = 5
8 * 3 = 24
3 / 8 = 0
3 + 8 = 11


Generated answers:
['8 + 3 = 11 ( left: 11 )', '8 - 3 = 5 ( left: 5 )', '8 * 3 = 24 ( left: 24 )', '3 / 8 = 0 ( left: 0 )', '3 + 8 = 11 ( left: 11 )']


Analysis:
11 is not equal to 24
Output: impossible (11)


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
24 is equal to 24
Output: sure (24)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
11 is not equal to 24
Output: impossible (11)


node:
[{'id': 76, 'answer': '8 + 3 = 11 ( left: 11 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}, {'id': 77, 'answer': '8 - 3 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}, {'id': 78, 'answer': '8 * 3 = 24 ( left: 24 )', 'value': 'sure', 'parent_node': 72, 'ancestor_value': 11.0}, {'id': 79, 'answer': '3 / 8 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}, {'id': 80, 'answer': '3 + 8 = 11 ( left: 11 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 76, 'answer': '8 + 3 = 11 ( left: 11 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 77, 'answer': '8 - 3 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 78, 'answer': '8 * 3 = 24 ( left: 24 )', 'value': 'sure', 'parent_node': 72, 'ancestor_value': 11.0}


step 3


distance: 18
d_threshold: 9.0

(prune)input_node:{'id': 79, 'answer': '3 / 8 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}


distance: 18
d_threshold: 9.0

(prune)input_node:{'id': 80, 'answer': '3 + 8 = 11 ( left: 11 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}


distance: 18
d_threshold: 9.0

(prune)input_node:{'id': 73, 'answer': '8 + 5 = 13 ( left: 13 16 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 18
d_threshold: 9.0

(prune)input_node:{'id': 74, 'answer': '5 - 16 = -11 ( left: -11 8 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 9
d_threshold: 9.0

(prune)input_node:{'id': 75, 'answer': '8 * 5 = 40 ( left: 40 16 )', 'value': 'sure', 'parent_node': 5, 'ancestor_value': 1.0}


all_nodes:
{'id': 0, 'answer': '5 8 8 8', 'value': None, 'parent_node': None, 'ancestor_value': None}
{'id': 1, 'answer': '8 + 8 = 16 ( left: 5 16 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 2, 'answer': '8 - 8 = 0 ( left: 5 0 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 3, 'answer': '8 / 8 = 1 ( left: 5 1 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 4, 'answer': '8 * 8 = 64 ( left: 5 64 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 5, 'answer': '8 + 8 = 16 ( left: 5 16 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 6, 'answer': '16 + 8 = 24 ( left: 5 24 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 7, 'answer': '5 - 8 = -3 ( left: 16 -3 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 8, 'answer': '5 * 16 = 80 ( left: 80 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 9, 'answer': '8 / 5 = 1.6 ( left: 1.6 16 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 10, 'answer': '16 - 8 = 8 ( left: 5 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 11, 'answer': '5 + 24 = 29 ( left: 29 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 12, 'answer': '5 - 24 = -19 ( left: -19 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 13, 'answer': '5 * 24 = 120 ( left: 120 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 14, 'answer': '5 / 24 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 15, 'answer': '24 / 5 = 4.8 ( left: 4.8 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 16, 'answer': '16 + 3 = 19 ( left: -19 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 17, 'answer': '16 * -3 = -48 ( left: -48 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 18, 'answer': '-3 / 16 = -0.1875 ( left: -0.1875 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 19, 'answer': '16 - 3 = 13 ( left: -13 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 20, 'answer': '-3 + 16 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 21, 'answer': '80 + 8 = 88 ( left: 88 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 22, 'answer': '80 - 8 = 72 ( left: 72 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 23, 'answer': '80 / 8 = 10 ( left: 10 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 24, 'answer': '80 * 8 = 640 ( left: 640 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 25, 'answer': '80 / 8 = 10 ( left: 10 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 26, 'answer': '1.6 + 16 = 17.6 ( left: 17.6 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 27, 'answer': '16 - 1.6 = 14.4 ( left: 14.4 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 28, 'answer': '16 * 1.6 = 25.6 ( left: 25.6 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 29, 'answer': '16 / 1.6 = 10 ( left: 10 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 30, 'answer': '16 / 1.6 = 9.999999999999997168665775607917594757910156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ( left: 9.999999999999997168665775607917594757910156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 )', 'value': None, 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 31, 'answer': '5 + 8 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 32, 'answer': '5 * 8 = 40 ( left: 40 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 33, 'answer': '5 - 8 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 34, 'answer': '5 / 8 = 0.625 ( left: 0.625 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 35, 'answer': '5 * 8 = 40.000000000000003 ( left: 40.000000000000003 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 36, 'answer': '5 + 0 = 5 ( left: 5 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 37, 'answer': '0 - 5 = -5 ( left: -5 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 38, 'answer': '8 + 5 = 13 ( left: 13 0 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 39, 'answer': '5 * 8 = 40 ( left: 0 40 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 40, 'answer': '8 - 5 = 3 ( left: 3 0 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 41, 'answer': '5 + 8 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 42, 'answer': '8 - 5 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 43, 'answer': '5 * 8 = 40 ( left: 40 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 44, 'answer': '5 / 8 = 0.625 ( left: 0.625 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 45, 'answer': '5 - 8 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 46, 'answer': '-5 + 8 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 47, 'answer': '-5 - 8 = -13 ( left: -13 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 48, 'answer': '-5 * 8 = -40 ( left: -40 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 49, 'answer': '-5 / 8 = -0.625 ( left: -0.625 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 50, 'answer': '-5 + 8 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 51, 'answer': '13 + 0 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 52, 'answer': '13 - 0 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 53, 'answer': '0 * 13 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 54, 'answer': '13 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 55, 'answer': '13 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 56, 'answer': '40 + 0 = 40 ( left: 40 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 57, 'answer': '40 - 0 = 40 ( left: 40 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 58, 'answer': '0 * 40 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 59, 'answer': '40 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 60, 'answer': '40 + 0 = 40 ( left: 40 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 61, 'answer': '5 + 1 = 6 ( left: 6 8 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 62, 'answer': '1 * 8 = 8 ( left: 5 8 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 63, 'answer': '8 - 1 = 7 ( left: 5 7 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 64, 'answer': '5 - 1 = 4 ( left: 4 8 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 65, 'answer': '1 + 8 = 9 ( left: 5 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 66, 'answer': '5 + 64 = 69 ( left: 69 8 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 67, 'answer': '64 / 5 = 12.8 ( left: 12.8 8 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 68, 'answer': '8 - 5 = 3 ( left: 3 64 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 69, 'answer': '5 * 64 = 320 ( left: 320 8 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 70, 'answer': '64 - 8 = 56 ( left: 5 56 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 71, 'answer': '5 + 16 = 21 ( left: 21 8 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 72, 'answer': '16 / 5 = 3 ( left: 3 8 )', 'value': 'sure', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 73, 'answer': '8 + 5 = 13 ( left: 13 16 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 74, 'answer': '5 - 16 = -11 ( left: -11 8 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 75, 'answer': '8 * 5 = 40 ( left: 40 16 )', 'value': 'sure', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 76, 'answer': '8 + 3 = 11 ( left: 11 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}
{'id': 77, 'answer': '8 - 3 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}
{'id': 78, 'answer': '8 * 3 = 24 ( left: 24 )', 'value': 'sure', 'parent_node': 72, 'ancestor_value': 11.0}
{'id': 79, 'answer': '3 / 8 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}
{'id': 80, 'answer': '3 + 8 = 11 ( left: 11 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}


linked list:
000 -> 1 -> 2 -> 3 -> 4 -> 5

001 -> 6 -> 7 -> 8 -> 9 -> 10

002 -> 36 -> 37 -> 38 -> 39 -> 40

003 -> 61 -> 62 -> 63 -> 64 -> 65

004 -> 66 -> 67 -> 68 -> 69 -> 70

005 -> 71 -> 72 -> 73 -> 74 -> 75

006 -> 11 -> 12 -> 13 -> 14 -> 15

007 -> 16 -> 17 -> 18 -> 19 -> 20

008 -> 21 -> 22 -> 23 -> 24 -> 25

009 -> 26 -> 27 -> 28 -> 29 -> 30

010 -> 31 -> 32 -> 33 -> 34 -> 35

011

012

013

014

015

016

017

018

019

020

021

022

023

024

025

026

027

028

029

030

031

032

033

034

035

036 -> 41 -> 42 -> 43 -> 44 -> 45

037 -> 46 -> 47 -> 48 -> 49 -> 50

038 -> 51 -> 52 -> 53 -> 54 -> 55

039 -> 56 -> 57 -> 58 -> 59 -> 60

040

041

042

043

044

045

046

047

048

049

050

051

052

053

054

055

056

057

058

059

060

061

062

063

064

065

066

067

068

069

070

071

072 -> 76 -> 77 -> 78 -> 79 -> 80

073

074

075

076

077

078

079

080

081

082

083

084

085

086

087

088

089

090

091

092

093

094

095

096

097

098

099

100

101

102

103

104

105

106

107

108

109

110

111

112

113

114

115

116

117

118

119

120

121

122

123

124

125

126

127

128

129

130

131

132

133

134

135

136

137

138

139

140

141

142

143

144

145

146

147

148

149

150

151

152

153

154

155


best node: {'id': 78, 'answer': '8 * 3 = 24 ( left: 24 )', 'value': 'sure', 'parent_node': 72, 'ancestor_value': 11.0}

best node: {'id': 72, 'answer': '16 / 5 = 3 ( left: 3 8 )', 'value': 'sure', 'parent_node': 5, 'ancestor_value': 1.0}

best node: {'id': 5, 'answer': '8 + 8 = 16 ( left: 5 16 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}

best node: {'id': 0, 'answer': '5 8 8 8', 'value': None, 'parent_node': None, 'ancestor_value': None}

path: ['8 * 3 = 24 ( left: 24 )', '16 / 5 = 3 ( left: 3 8 )', '8 + 8 = 16 ( left: 5 16 8 )', '( left: 5 8 8 8 )']


['8 * 3 = 24 ( left: 24 )', '16 / 5 = 3 ( left: 3 8 )', '8 + 8 = 16 ( left: 5 16 8 )', '( left: 5 8 8 8 )']
 ( 8 * ( ( 8 + 8 ) / 5 ) ) 


Answer: 
 ( 8 * ( ( 8 + 8 ) / 5 ) ) 

