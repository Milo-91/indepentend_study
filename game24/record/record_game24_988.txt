TheBloke/OpenHermes-2.5-Mistral-7B-GPTQ
temperature: 0.5, 0
date: 2024-01-18


step 1


Generator response:
5 + 8 = 13
5 * 8 = 40
5 - 8 = -3
8 + 13 = 21
13 - 8 = 5


Generated answers:
['5 + 8 = 13 ( left: 5 13 13 )', '5 * 8 = 40 ( left: 5 40 13 )', '5 - 8 = -3 ( left: 5 -3 13 )', '8 + 13 = 21 ( left: 5 5 21 )', '13 - 8 = 5 ( left: 5 5 5 )']


Analysis:
5 + 13 + 13 = 31
(13 - 5) * 13 = 8 * 13 = 104
Output: impossible (5 13 13)


Analysis:
5 + 40 + 13 = 58
5 * 40 = 200
5 / 40 = 0.125
5 - 40 = -35
Output: impossible (5 40 13)


Analysis:
5 + (-3) + 13 = 16
5 * (-3) + 13 = -15 + 13 = -2
5 / (-3) + 13 = -1.67 + 13 = 11.33
Output: impossible (5 -3 13)


Analysis:
5 + 5 + 21 = 31
5 * 5 = 25
5 - 21 = -16
Output: impossible (5 5 21)


Analysis:
5 + 5 + 5 = 15
5 * 5 = 25
5 - 5 = 0
Output: impossible (5 5 5)


node:
[{'id': 1, 'answer': '5 + 8 = 13 ( left: 5 13 13 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 2, 'answer': '5 * 8 = 40 ( left: 5 40 13 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '5 - 8 = -3 ( left: 5 -3 13 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '8 + 13 = 21 ( left: 5 5 21 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '13 - 8 = 5 ( left: 5 5 5 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}]
5


step 2


Generator response:
5 + 13 = 18
13 - 5 = 8
13 * 5 = 65
13 / 5 = 2.6
5 * 13 = 65


Generated answers:
['5 + 13 = 18 ( left: 18 13 )', '13 - 5 = 8 ( left: 8 13 )', '13 * 5 = 65 ( left: 65 13 )', '13 / 5 = 2.6 ( left: 2.6 13 )', '5 * 13 = 65 ( left: 65 13 )']


Analysis:
18 + 13 = 31
18 - 13 = 5
18 * 13 = 234
18 / 13 = 1.38
Output: impossible (18 13)


Analysis:
8 + 13 = 21
8 * 13 = 104
Output: impossible (8 13)


Analysis:
65 + 13 = 78
65 - 13 = 52
65 * 13 = 845
65 / 13 = 5
Output: impossible (65 13)


Analysis:
2.6 + 13 = 15.6
2.6 * 13 = 33.8
Output: impossible (2.6 13)


Analysis:
65 + 13 = 78
65 - 13 = 52
65 * 13 = 845
65 / 13 = 5
Output: impossible (65 13)


node:
[{'id': 6, 'answer': '5 + 13 = 18 ( left: 18 13 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 7, 'answer': '13 - 5 = 8 ( left: 8 13 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 8, 'answer': '13 * 5 = 65 ( left: 65 13 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 9, 'answer': '13 / 5 = 2.6 ( left: 2.6 13 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 10, 'answer': '5 * 13 = 65 ( left: 65 13 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}]
5


step 3


Generator response:
18 - 13 = 5
18 + 13 = 31
18 / 13 = 1.3846153846153847
18 * 13 = 234
13 - 18 = -5


Generated answers:
['18 - 13 = 5 ( left: 5 )', '18 + 13 = 31 ( left: 31 )', '18 / 13 = 1.3846153846153847 ( left: 1.3846153846153847 )', '18 * 13 = 234 ( left: 234 )', '13 - 18 = -5 ( left: -5 )']


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
31 is not equal to 24
Output: impossible (31)


Analysis:
1.3846153846153847 is not equal to 24
Output: impossible (1.3846153846153847)


Analysis:
234 is not equal to 24
Output: impossible (234)


Analysis:
-5 is not equal to 24
Output: impossible (-5)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


node:
[{'id': 11, 'answer': '18 - 13 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 12, 'answer': '18 + 13 = 31 ( left: 31 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 13, 'answer': '18 / 13 = 1.3846153846153847 ( left: 1.3846153846153847 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 14, 'answer': '18 * 13 = 234 ( left: 234 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 15, 'answer': '13 - 18 = -5 ( left: -5 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}]
5


linked list:
000 -> 1 -> 2 -> 3 -> 4 -> 5

001 -> 6 -> 7 -> 8 -> 9 -> 10

002

003

004

005

006 -> 11 -> 12 -> 13 -> 14 -> 15

007

008

009

010

011

012

013

014

015

016

017

018

019

020

021

022

023

024

025

026

027

028

029

030

031

032

033

034

035

036

037

038

039

040

041

042

043

044

045

046

047

048

049

050

051

052

053

054

055

056

057

058

059

060

061

062

063

064

065

066

067

068

069

070

071

072

073

074

075

076

077

078

079

080

081

082

083

084

085

086

087

088

089

090

091

092

093

094

095

096

097

098

099

100

101

102

103

104

105

106

107

108

109

110

111

112

113

114

115

116

117

118

119

120

121

122

123

124

125

126

127

128

129

130

131

132

133

134

135

136

137

138

139

140

141

142

143

144

145

146

147

148

149

150

151

152

153

154

155


path: ['18 - 13 = 5 ( left: 5 )', '5 + 13 = 18 ( left: 18 13 )', '5 + 8 = 13 ( left: 5 13 13 )', '( left: 5 5 8 13 )']


['18 - 13 = 5 ( left: 5 )', '5 + 13 = 18 ( left: 18 13 )', '5 + 8 = 13 ( left: 5 13 13 )', '( left: 5 5 8 13 )']
 ( ( 5 + ( 5 + 8 ) ) - 13 ) 


Answer: 
 ( ( 5 + ( 5 + 8 ) ) - 13 ) 


d_thres: 27.0

step 0


distance: 9
d_threshold: 27.0

input_node:{'id': 1, 'answer': '5 + 8 = 13 ( left: 5 13 13 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


distance: 18
d_threshold: 27.0

input_node:{'id': 6, 'answer': '5 + 13 = 18 ( left: 18 13 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 11, 'answer': '18 - 13 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 12, 'answer': '18 + 13 = 31 ( left: 31 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 13, 'answer': '18 / 13 = 1.3846153846153847 ( left: 1.3846153846153847 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 14, 'answer': '18 * 13 = 234 ( left: 234 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 15, 'answer': '13 - 18 = -5 ( left: -5 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 7, 'answer': '13 - 5 = 8 ( left: 8 13 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
8 + 13 = 21
13 - 8 = 5
8 * 13 = 104
13 / 8 = 1.625



Generated answers:
['8 + 13 = 21 ( left: 21 )', '13 - 8 = 5 ( left: 5 )', '8 * 13 = 104 ( left: 104 )', '13 / 8 = 1.625 ( left: 1.625 )', '13 - 8 = 5.000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.00000000 ( left


Analysis:
21 is not equal to 24
Output: impossible (21)


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
104 is not equal to 24
Output: impossible (104)


Analysis:
1.625 is not equal to 24
Output: impossible (1.625)



Output: impossible


node:
[{'id': 16, 'answer': '8 + 13 = 21 ( left: 21 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 17, 'answer': '13 - 8 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 18, 'answer': '8 * 13 = 104 ( left: 104 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 19, 'answer': '13 / 8 = 1.625 ( left: 1.625 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 20, 'answerleftvalue': None, 'parent_node': 7, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 16, 'answer': '8 + 13 = 21 ( left: 21 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 17, 'answer': '13 - 8 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 18, 'answer': '8 * 13 = 104 ( left: 104 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 19, 'answer': '13 / 8 = 1.625 ( left: 1.625 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 28.0
d_threshold: 27.0

(prune)input_node:{'id': 20, 'answerleft: 5.000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.0000000000000001.00000000 )', 'value': None, 'parent_node': 7, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 8, 'answer': '13 * 5 = 65 ( left: 65 13 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
65 + 13 = 78
65 - 13 = 52
65 * 13 = 845
65 / 13 = 5
13 / 65 = 0.20000000000000004


Generated answers:
['65 + 13 = 78 ( left: 78 )', '65 - 13 = 52 ( left: 52 )', '65 * 13 = 845 ( left: 845 )', '65 / 13 = 5 ( left: 5 )', '13 / 65 = 0.20000000000000004 ( left: 0.20000000000000004 )']


Analysis:
78 is not equal to 24
Output: impossible (78)

Input: 100
Analysis:
100 is not equal to 24
Output: impossible (100)


Analysis:
52 is not equal to 24
Output: impossible (52)


Analysis:
845 is not equal to 24
Output: impossible (845)


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
0.20000000000000004 is not equal to 24
Output: impossible (0.20000000000000004)


node:
[{'id': 21, 'answer': '65 + 13 = 78 ( left: 78 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 22, 'answer': '65 - 13 = 52 ( left: 52 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 23, 'answer': '65 * 13 = 845 ( left: 845 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 24, 'answer': '65 / 13 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 25, 'answer': '13 / 65 = 0.20000000000000004 ( left: 0.20000000000000004 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 21, 'answer': '65 + 13 = 78 ( left: 78 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 22, 'answer': '65 - 13 = 52 ( left: 52 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 23, 'answer': '65 * 13 = 845 ( left: 845 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 24, 'answer': '65 / 13 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 25, 'answer': '13 / 65 = 0.20000000000000004 ( left: 0.20000000000000004 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 9, 'answer': '13 / 5 = 2.6 ( left: 2.6 13 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
2.6 + 13 = 15.6
13 - 2.6 = 10.4
13 * 2.6 = 33.8
13 / 2.6 = 5
2.6 * 13 = 33.8


Generated answers:
['2.6 + 13 = 15.6 ( left: 15.6 )', '13 - 2.6 = 10.4 ( left: 10.4 )', '13 * 2.6 = 33.8 ( left: 33.8 )', '13 / 2.6 = 5 ( left: 5 )', '2.6 * 13 = 33.8 ( left: 33.8 )']


Analysis:
15.6 is not equal to 24
Output: impossible (15.6)


Analysis:
10.4 is not equal to 24
Output: impossible (10.4)


Analysis:
33.8 is not equal to 24
Output: impossible (33.8)

Input: 1000
Analysis:
1000 is not equal to 24
Output: impossible (1000)


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
33.8 is not equal to 24
Output: impossible (33.8)

Input: 1000
Analysis:
1000 is not equal to 24
Output: impossible (1000)


node:
[{'id': 26, 'answer': '2.6 + 13 = 15.6 ( left: 15.6 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 27, 'answer': '13 - 2.6 = 10.4 ( left: 10.4 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 28, 'answer': '13 * 2.6 = 33.8 ( left: 33.8 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 29, 'answer': '13 / 2.6 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 30, 'answer': '2.6 * 13 = 33.8 ( left: 33.8 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 26, 'answer': '2.6 + 13 = 15.6 ( left: 15.6 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 27, 'answer': '13 - 2.6 = 10.4 ( left: 10.4 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 28, 'answer': '13 * 2.6 = 33.8 ( left: 33.8 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 29, 'answer': '13 / 2.6 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 30, 'answer': '2.6 * 13 = 33.8 ( left: 33.8 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 10, 'answer': '5 * 13 = 65 ( left: 65 13 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
65 + 13 = 78
65 - 13 = 52
65 * 13 = 835
65 / 13 = 5
13 - 65 = -52


Generated answers:
['65 + 13 = 78 ( left: 78 )', '65 - 13 = 52 ( left: 52 )', '65 * 13 = 835 ( left: 835 )', '65 / 13 = 5 ( left: 5 )', '13 - 65 = -52 ( left: -52 )']


Analysis:
78 is not equal to 24
Output: impossible (78)

Input: 100
Analysis:
100 is not equal to 24
Output: impossible (100)


Analysis:
52 is not equal to 24
Output: impossible (52)


Analysis:
835 is not equal to 24
Output: impossible (835)


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
-52 is not equal to 24
Output: impossible (-52)


node:
[{'id': 31, 'answer': '65 + 13 = 78 ( left: 78 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 32, 'answer': '65 - 13 = 52 ( left: 52 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 33, 'answer': '65 * 13 = 835 ( left: 835 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 34, 'answer': '65 / 13 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 35, 'answer': '13 - 65 = -52 ( left: -52 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 31, 'answer': '65 + 13 = 78 ( left: 78 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 32, 'answer': '65 - 13 = 52 ( left: 52 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 33, 'answer': '65 * 13 = 835 ( left: 835 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 34, 'answer': '65 / 13 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 35, 'answer': '13 - 65 = -52 ( left: -52 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 9
d_threshold: 27.0

input_node:{'id': 2, 'answer': '5 * 8 = 40 ( left: 5 40 13 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
5 + 40 = 45
13 + 5 = 18
40 - 5 = 35
5 * 40 = 200
13 * 5 = 65


Generated answers:
['5 + 40 = 45 ( left: 45 13 )', '13 + 5 = 18 ( left: 18 40 )', '40 - 5 = 35 ( left: 35 13 )', '5 * 40 = 200 ( left: 200 13 )', '13 * 5 = 65 ( left: 65 40 )']


Analysis:
45 + 13 = 58
45 - 13 = 32
45 * 13 = 585
45 / 13 = 3.5384615384615387
Output: impossible (45 13)


Analysis:
18 + 40 = 58
18 - 40 = -22
18 * 40 = 720
18 / 40 = 0.45
Output: impossible (18 40)


Analysis:
35 + 13 = 48
35 - 13 = 22
35 * 13 = 455
35 / 13 = 2.69
Output: impossible (35 13)


Analysis:
200 + 13 = 213
Output: sure (200 13)


Analysis:
65 + 40 = 105
65 - 40 = 25
65 * 40 = 2600
65 / 40 = 1.625
Output: impossible (65 40)


node:
[{'id': 36, 'answer': '5 + 40 = 45 ( left: 45 13 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 37, 'answer': '13 + 5 = 18 ( left: 18 40 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 38, 'answer': '40 - 5 = 35 ( left: 35 13 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 39, 'answer': '5 * 40 = 200 ( left: 200 13 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 40, 'answer': '13 * 5 = 65 ( left: 65 40 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 27.0

input_node:{'id': 36, 'answer': '5 + 40 = 45 ( left: 45 13 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


step 2


Generator response:
45 + 13 = 58
45 - 13 = 32
45 * 13 = 585
45 / 13 = 3
45 - 13 = 32


Generated answers:
['45 + 13 = 58 ( left: 58 )', '45 - 13 = 32 ( left: 32 )', '45 * 13 = 585 ( left: 585 )', '45 / 13 = 3 ( left: 3 )', '45 - 13 = 32 ( left: 32 )']


Analysis:
58 is not equal to 24
Output: impossible (58)

Input: 100
Analysis:
100 is not equal to 24
Output: impossible (100)


Analysis:
32 is not equal to 24
Output: impossible (32)


Analysis:
585 is not equal to 24
Output: impossible (585)


Analysis:
3 is not equal to 24
Output: impossible (3)


Analysis:
32 is not equal to 24
Output: impossible (32)


node:
[{'id': 41, 'answer': '45 + 13 = 58 ( left: 58 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}, {'id': 42, 'answer': '45 - 13 = 32 ( left: 32 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}, {'id': 43, 'answer': '45 * 13 = 585 ( left: 585 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}, {'id': 44, 'answer': '45 / 13 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}, {'id': 45, 'answer': '45 - 13 = 32 ( left: 32 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 41, 'answer': '45 + 13 = 58 ( left: 58 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 42, 'answer': '45 - 13 = 32 ( left: 32 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 43, 'answer': '45 * 13 = 585 ( left: 585 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 44, 'answer': '45 / 13 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 45, 'answer': '45 - 13 = 32 ( left: 32 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 37, 'answer': '13 + 5 = 18 ( left: 18 40 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


step 2


Generator response:
18 + 40 = 58
18 - 40 = -22
18 * 40 = 720
18 / 40 = 0.45
40 - 18 = 22


Generated answers:
['18 + 40 = 58 ( left: 58 )', '18 - 40 = -22 ( left: -22 )', '18 * 40 = 720 ( left: 720 )', '18 / 40 = 0.45 ( left: 0.45 )', '40 - 18 = 22 ( left: 22 )']


Analysis:
58 is not equal to 24
Output: impossible (58)


Analysis:
-22 is not equal to 24
Output: impossible (-22)


Analysis:
720 is not equal to 24
Output: impossible (720)


Analysis:
0.45 is not equal to 24
Output: impossible (0.45)


Analysis:
22 is not equal to 24
Output: impossible (22)


node:
[{'id': 46, 'answer': '18 + 40 = 58 ( left: 58 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}, {'id': 47, 'answer': '18 - 40 = -22 ( left: -22 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}, {'id': 48, 'answer': '18 * 40 = 720 ( left: 720 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}, {'id': 49, 'answer': '18 / 40 = 0.45 ( left: 0.45 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}, {'id': 50, 'answer': '40 - 18 = 22 ( left: 22 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 46, 'answer': '18 + 40 = 58 ( left: 58 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 47, 'answer': '18 - 40 = -22 ( left: -22 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 48, 'answer': '18 * 40 = 720 ( left: 720 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 49, 'answer': '18 / 40 = 0.45 ( left: 0.45 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 50, 'answer': '40 - 18 = 22 ( left: 22 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 38, 'answer': '40 - 5 = 35 ( left: 35 13 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


step 2


Generator response:
35 + 13 = 48
35 - 13 = 22
13 / 35 = 0.3714285714285714
35 * 13 = 455
13 - 35 = -22


Generated answers:
['35 + 13 = 48 ( left: 48 )', '35 - 13 = 22 ( left: 22 )', '13 / 35 = 0.3714285714285714 ( left: 0.3714285714285714 )', '35 * 13 = 455 ( left: 455 )', '13 - 35 = -22 ( left: -22 )']


Analysis:
48 is not equal to 24
Output: impossible (48)


Analysis:
22 is not equal to 24
Output: impossible (22)


Analysis:
0.3714285714285714 is not equal to 24
Output: impossible (0.3714285714285714)


Analysis:
455 is not equal to 24
Output: impossible (455)


Analysis:
-22 is not equal to 24
Output: impossible (-22)


node:
[{'id': 51, 'answer': '35 + 13 = 48 ( left: 48 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}, {'id': 52, 'answer': '35 - 13 = 22 ( left: 22 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}, {'id': 53, 'answer': '13 / 35 = 0.3714285714285714 ( left: 0.3714285714285714 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}, {'id': 54, 'answer': '35 * 13 = 455 ( left: 455 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}, {'id': 55, 'answer': '13 - 35 = -22 ( left: -22 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 51, 'answer': '35 + 13 = 48 ( left: 48 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 52, 'answer': '35 - 13 = 22 ( left: 22 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 53, 'answer': '13 / 35 = 0.3714285714285714 ( left: 0.3714285714285714 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 54, 'answer': '35 * 13 = 455 ( left: 455 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 55, 'answer': '13 - 35 = -22 ( left: -22 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}


distance: 9
d_threshold: 27.0

input_node:{'id': 39, 'answer': '5 * 40 = 200 ( left: 200 13 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}


step 2


Generator response:
200 + 13 = 213
200 - 13 = 187
200 * 13 = 2600
200 / 13 = 15
200 - 13 = 187


Generated answers:
['200 + 13 = 213 ( left: 213 )', '200 - 13 = 187 ( left: 187 )', '200 * 13 = 2600 ( left: 2600 )', '200 / 13 = 15 ( left: 15 )', '200 - 13 = 187 ( left: 187 )']


Analysis:
213 is not equal to 24
Output: impossible (213)


Analysis:
187 is not equal to 24
Output: impossible (187)


Analysis:
2600 is not equal to 24
Output: impossible (2600)


Analysis:
15 is not equal to 24
Output: impossible (15)


Analysis:
187 is not equal to 24
Output: impossible (187)


node:
[{'id': 56, 'answer': '200 + 13 = 213 ( left: 213 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}, {'id': 57, 'answer': '200 - 13 = 187 ( left: 187 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}, {'id': 58, 'answer': '200 * 13 = 2600 ( left: 2600 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}, {'id': 59, 'answer': '200 / 13 = 15 ( left: 15 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}, {'id': 60, 'answer': '200 - 13 = 187 ( left: 187 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 27.0

input_node:{'id': 56, 'answer': '200 + 13 = 213 ( left: 213 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


step 3


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 57, 'answer': '200 - 13 = 187 ( left: 187 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 58, 'answer': '200 * 13 = 2600 ( left: 2600 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 59, 'answer': '200 / 13 = 15 ( left: 15 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 60, 'answer': '200 - 13 = 187 ( left: 187 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 40, 'answer': '13 * 5 = 65 ( left: 65 40 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 3, 'answer': '5 - 8 = -3 ( left: 5 -3 13 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
5 + -3 = 2
5 * 13 = 65
13 - 5 = 8
5 / -3 = -1.6667
5 * -3 = -15


Generated answers:
['5 + -3 = 2 ( left: 2 13 )', '5 * 13 = 65 ( left: -3 65 )', '13 - 5 = 8 ( left: 8 -3 )', '5 / -3 = -1.6667 ( left: -1.6667 13 )', '5 * -3 = -15 ( left: -15 13 )']


Analysis:
2 + 13 = 15
2 * 13 = 26
Output: impossible (2 13)


Analysis:
-3 + 65 = 62
-3 * 65 = -195
Output: impossible (-3 65)


Analysis:
8 - 3 = 5
-3 is not equal to 24
Output: impossible (8 -3)


Analysis:
-1.6667 + 13 = 11.3333
-1.6667 * 13 = -22.2222
Output: impossible (-1.6667 13)


Analysis:
-15 + 13 = -2
-15 * 13 = -195
Output: impossible (-15 13)


node:
[{'id': 61, 'answer': '5 + -3 = 2 ( left: 2 13 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 62, 'answer': '5 * 13 = 65 ( left: -3 65 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 63, 'answer': '13 - 5 = 8 ( left: 8 -3 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 64, 'answer': '5 / -3 = -1.6667 ( left: -1.6667 13 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 65, 'answer': '5 * -3 = -15 ( left: -15 13 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 61, 'answer': '5 + -3 = 2 ( left: 2 13 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 62, 'answer': '5 * 13 = 65 ( left: -3 65 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 63, 'answer': '13 - 5 = 8 ( left: 8 -3 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 64, 'answer': '5 / -3 = -1.6667 ( left: -1.6667 13 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 65, 'answer': '5 * -3 = -15 ( left: -15 13 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 4, 'answer': '8 + 13 = 21 ( left: 5 5 21 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
5 + 5 = 10
21 / 5 = 4
5 - 21 = -16
21 + 5 = 26
5 * 5 = 25


Generated answers:
['5 + 5 = 10 ( left: 10 21 )', '21 / 5 = 4 ( left: 4 5 )', '5 - 21 = -16 ( left: 5 -16 )', '21 + 5 = 26 ( left: 26 5 )', '5 * 5 = 25 ( left: 25 21 )']


Analysis:
10 + 21 = 31
Output: impossible (10 21)


Analysis:
4 + 5 = 9
4 * 5 = 20
Output: impossible (4 5)


Analysis:
5 - 16 = -11
Output: impossible (5 -16)


Analysis:
26 is too big
5 is not equal to 24
Output: impossible (26 5)


Analysis:
25 + 21 = 46
21 - 25 = -4
25 * 21 = 525
25 / 21 = 1.238095238
Output: impossible (25 21)


node:
[{'id': 66, 'answer': '5 + 5 = 10 ( left: 10 21 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 67, 'answer': '21 / 5 = 4 ( left: 4 5 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 68, 'answer': '5 - 21 = -16 ( left: 5 -16 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 69, 'answer': '21 + 5 = 26 ( left: 26 5 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 70, 'answer': '5 * 5 = 25 ( left: 25 21 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 66, 'answer': '5 + 5 = 10 ( left: 10 21 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 67, 'answer': '21 / 5 = 4 ( left: 4 5 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 68, 'answer': '5 - 21 = -16 ( left: 5 -16 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 69, 'answer': '21 + 5 = 26 ( left: 26 5 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 70, 'answer': '5 * 5 = 25 ( left: 25 21 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 5, 'answer': '13 - 8 = 5 ( left: 5 5 5 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
5 + 5 = 10
5 - 5 = 0
5 * 5 = 25
5 / 5 = 1



Generated answers:
['5 + 5 = 10 ( left: 10 5 )', '5 - 5 = 0 ( left: 0 5 )', '5 * 5 = 25 ( left: 25 5 )', '5 / 5 = 1 ( left: 1 5 )', '5 / 2 = 2.50000000000000055512784468510727593671098384164316196250101253663934761884776320384787242366589934905119631192071964138427051358704453360813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194 ( left: 5 5 )']


Analysis:
10 + 5 = 15
10 - 5 = 5
10 * 5 = 50
10 / 5 = 2
Output: impossible (10 5)


Analysis:
0 + 5 = 5
Output: sure (0 5)


Analysis:
25 + 5 = 30
25 - 5 = 20
25 * 5 = 125
25 / 5 = 5
Output: impossible (25 5)


Analysis:
1 + 5 = 6
1 * 5 = 5
Output: impossible (1 5)


Analysis:
5 + 5 = 10
5 * 5 = 25
Output: impossible (5 5)


node:
[{'id': 71, 'answer': '5 + 5 = 10 ( left: 10 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 72, 'answer': '5 - 5 = 0 ( left: 0 5 )', 'value': 'sure', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 73, 'answer': '5 * 5 = 25 ( left: 25 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 74, 'answer': '5 / 5 = 1 ( left: 1 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 75, 'answer': '5 / 2 = 2.50000000000000055512784468510727593671098384164316196250101253663934761884776320384787242366589934905119631192071964138427051358704453360813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194 ( left: 5 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 71, 'answer': '5 + 5 = 10 ( left: 10 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 72, 'answer': '5 - 5 = 0 ( left: 0 5 )', 'value': 'sure', 'parent_node': 5, 'ancestor_value': 1.0}


step 2


Generator response:
0 + 5 = 5
5 - 0 = 5
5 * 0 = 0
5 / 0 = 0
0 + 5 = 5


Generated answers:
['0 + 5 = 5 ( left: 5 )', '5 - 0 = 5 ( left: 5 )', '5 * 0 = 0 ( left: 0 )', '5 / 0 = 0 ( left: 0 )', '0 + 5 = 5 ( left: 5 )']


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


node:
[{'id': 76, 'answer': '0 + 5 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}, {'id': 77, 'answer': '5 - 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}, {'id': 78, 'answer': '5 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}, {'id': 79, 'answer': '5 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}, {'id': 80, 'answer': '0 + 5 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 76, 'answer': '0 + 5 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 77, 'answer': '5 - 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 78, 'answer': '5 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 79, 'answer': '5 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 80, 'answer': '0 + 5 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 73, 'answer': '5 * 5 = 25 ( left: 25 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 74, 'answer': '5 / 5 = 1 ( left: 1 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 75, 'answer': '5 / 2 = 2.50000000000000055512784468510727593671098384164316196250101253663934761884776320384787242366589934905119631192071964138427051358704453360813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194 ( left: 5 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


all_nodes:
{'id': 0, 'answer': '5 5 8 13', 'value': None, 'parent_node': None, 'ancestor_value': None}
{'id': 1, 'answer': '5 + 8 = 13 ( left: 5 13 13 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 2, 'answer': '5 * 8 = 40 ( left: 5 40 13 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 3, 'answer': '5 - 8 = -3 ( left: 5 -3 13 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 4, 'answer': '8 + 13 = 21 ( left: 5 5 21 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 5, 'answer': '13 - 8 = 5 ( left: 5 5 5 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 6, 'answer': '5 + 13 = 18 ( left: 18 13 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 7, 'answer': '13 - 5 = 8 ( left: 8 13 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 8, 'answer': '13 * 5 = 65 ( left: 65 13 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 9, 'answer': '13 / 5 = 2.6 ( left: 2.6 13 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 10, 'answer': '5 * 13 = 65 ( left: 65 13 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 11, 'answer': '18 - 13 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 12, 'answer': '18 + 13 = 31 ( left: 31 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 13, 'answer': '18 / 13 = 1.3846153846153847 ( left: 1.3846153846153847 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 14, 'answer': '18 * 13 = 234 ( left: 234 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 15, 'answer': '13 - 18 = -5 ( left: -5 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 16, 'answer': '8 + 13 = 21 ( left: 21 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 17, 'answer': '13 - 8 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 18, 'answer': '8 * 13 = 104 ( left: 104 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 19, 'answer': '13 / 8 = 1.625 ( left: 1.625 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 20, 'answerleftvalue': None, 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 21, 'answer': '65 + 13 = 78 ( left: 78 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 22, 'answer': '65 - 13 = 52 ( left: 52 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 23, 'answer': '65 * 13 = 845 ( left: 845 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 24, 'answer': '65 / 13 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 25, 'answer': '13 / 65 = 0.20000000000000004 ( left: 0.20000000000000004 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 26, 'answer': '2.6 + 13 = 15.6 ( left: 15.6 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 27, 'answer': '13 - 2.6 = 10.4 ( left: 10.4 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 28, 'answer': '13 * 2.6 = 33.8 ( left: 33.8 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 29, 'answer': '13 / 2.6 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 30, 'answer': '2.6 * 13 = 33.8 ( left: 33.8 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 31, 'answer': '65 + 13 = 78 ( left: 78 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 32, 'answer': '65 - 13 = 52 ( left: 52 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 33, 'answer': '65 * 13 = 835 ( left: 835 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 34, 'answer': '65 / 13 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 35, 'answer': '13 - 65 = -52 ( left: -52 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 36, 'answer': '5 + 40 = 45 ( left: 45 13 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 37, 'answer': '13 + 5 = 18 ( left: 18 40 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 38, 'answer': '40 - 5 = 35 ( left: 35 13 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 39, 'answer': '5 * 40 = 200 ( left: 200 13 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 40, 'answer': '13 * 5 = 65 ( left: 65 40 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 41, 'answer': '45 + 13 = 58 ( left: 58 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 42, 'answer': '45 - 13 = 32 ( left: 32 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 43, 'answer': '45 * 13 = 585 ( left: 585 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 44, 'answer': '45 / 13 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 45, 'answer': '45 - 13 = 32 ( left: 32 )', 'value': 'impossible', 'parent_node': 36, 'ancestor_value': 2.0}
{'id': 46, 'answer': '18 + 40 = 58 ( left: 58 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 47, 'answer': '18 - 40 = -22 ( left: -22 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 48, 'answer': '18 * 40 = 720 ( left: 720 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 49, 'answer': '18 / 40 = 0.45 ( left: 0.45 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 50, 'answer': '40 - 18 = 22 ( left: 22 )', 'value': 'impossible', 'parent_node': 37, 'ancestor_value': 2.0}
{'id': 51, 'answer': '35 + 13 = 48 ( left: 48 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}
{'id': 52, 'answer': '35 - 13 = 22 ( left: 22 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}
{'id': 53, 'answer': '13 / 35 = 0.3714285714285714 ( left: 0.3714285714285714 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}
{'id': 54, 'answer': '35 * 13 = 455 ( left: 455 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}
{'id': 55, 'answer': '13 - 35 = -22 ( left: -22 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 2.0}
{'id': 56, 'answer': '200 + 13 = 213 ( left: 213 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 57, 'answer': '200 - 13 = 187 ( left: 187 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 58, 'answer': '200 * 13 = 2600 ( left: 2600 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 59, 'answer': '200 / 13 = 15 ( left: 15 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 60, 'answer': '200 - 13 = 187 ( left: 187 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 61, 'answer': '5 + -3 = 2 ( left: 2 13 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 62, 'answer': '5 * 13 = 65 ( left: -3 65 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 63, 'answer': '13 - 5 = 8 ( left: 8 -3 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 64, 'answer': '5 / -3 = -1.6667 ( left: -1.6667 13 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 65, 'answer': '5 * -3 = -15 ( left: -15 13 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 66, 'answer': '5 + 5 = 10 ( left: 10 21 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 67, 'answer': '21 / 5 = 4 ( left: 4 5 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 68, 'answer': '5 - 21 = -16 ( left: 5 -16 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 69, 'answer': '21 + 5 = 26 ( left: 26 5 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 70, 'answer': '5 * 5 = 25 ( left: 25 21 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 71, 'answer': '5 + 5 = 10 ( left: 10 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 72, 'answer': '5 - 5 = 0 ( left: 0 5 )', 'value': 'sure', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 73, 'answer': '5 * 5 = 25 ( left: 25 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 74, 'answer': '5 / 5 = 1 ( left: 1 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 75, 'answer': '5 / 2 = 2.50000000000000055512784468510727593671098384164316196250101253663934761884776320384787242366589934905119631192071964138427051358704453360813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194524968813382194 ( left: 5 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 76, 'answer': '0 + 5 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}
{'id': 77, 'answer': '5 - 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}
{'id': 78, 'answer': '5 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}
{'id': 79, 'answer': '5 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}
{'id': 80, 'answer': '0 + 5 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 72, 'ancestor_value': 11.0}


linked list:
000 -> 1 -> 2 -> 3 -> 4 -> 5

001 -> 6 -> 7 -> 8 -> 9 -> 10

002 -> 36 -> 37 -> 38 -> 39 -> 40

003 -> 61 -> 62 -> 63 -> 64 -> 65

004 -> 66 -> 67 -> 68 -> 69 -> 70

005 -> 71 -> 72 -> 73 -> 74 -> 75

006 -> 11 -> 12 -> 13 -> 14 -> 15

007 -> 16 -> 17 -> 18 -> 19 -> 20

008 -> 21 -> 22 -> 23 -> 24 -> 25

009 -> 26 -> 27 -> 28 -> 29 -> 30

010 -> 31 -> 32 -> 33 -> 34 -> 35

011

012

013

014

015

016

017

018

019

020

021

022

023

024

025

026

027

028

029

030

031

032

033

034

035

036 -> 41 -> 42 -> 43 -> 44 -> 45

037 -> 46 -> 47 -> 48 -> 49 -> 50

038 -> 51 -> 52 -> 53 -> 54 -> 55

039 -> 56 -> 57 -> 58 -> 59 -> 60

040

041

042

043

044

045

046

047

048

049

050

051

052

053

054

055

056

057

058

059

060

061

062

063

064

065

066

067

068

069

070

071

072 -> 76 -> 77 -> 78 -> 79 -> 80

073

074

075

076

077

078

079

080

081

082

083

084

085

086

087

088

089

090

091

092

093

094

095

096

097

098

099

100

101

102

103

104

105

106

107

108

109

110

111

112

113

114

115

116

117

118

119

120

121

122

123

124

125

126

127

128

129

130

131

132

133

134

135

136

137

138

139

140

141

142

143

144

145

146

147

148

149

150

151

152

153

154

155


best node: {'id': 56, 'answer': '200 + 13 = 213 ( left: 213 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}

best node: {'id': 39, 'answer': '5 * 40 = 200 ( left: 200 13 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}

best node: {'id': 2, 'answer': '5 * 8 = 40 ( left: 5 40 13 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}

best node: {'id': 0, 'answer': '5 5 8 13', 'value': None, 'parent_node': None, 'ancestor_value': None}

path: ['200 + 13 = 213 ( left: 213 )', '5 * 40 = 200 ( left: 200 13 )', '5 * 8 = 40 ( left: 5 40 13 )', '( left: 5 5 8 13 )']


['200 + 13 = 213 ( left: 213 )', '5 * 40 = 200 ( left: 200 13 )', '5 * 8 = 40 ( left: 5 40 13 )', '( left: 5 5 8 13 )']
 ( ( 5 * ( 5 * 8 ) ) + 13 ) 


Answer: 
 ( ( 5 * ( 5 * 8 ) ) + 13 ) 

