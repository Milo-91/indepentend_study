TheBloke/OpenHermes-2.5-Mistral-7B-GPTQ
temperature: 0.5, 0
date: 2024-01-18


step 1


Generator response:
4 + 5 = 9
5 - 4 = 1
6 + 8 = 14
8 * 5 = 40
6 / 2 = 3


Generated answers:
['4 + 5 = 9 ( left: 9 6 8 )', '5 - 4 = 1 ( left: 1 6 8 )', '6 + 8 = 14 ( left: 4 5 14 )', '8 * 5 = 40 ( left: 4 40 6 )', '6 / 2 = 3 ( left: 4 5 8 )']


Analysis:
9 + 6 + 8 = 23
9 * 6 = 54
9 / 6 = 1.5
9 - 6 = 3
Output: impossible (9 6 8)


Analysis:
1 + 6 + 8 = 15
(6 - 1) * 8 = 48
1 * 6 * 8 = 48
Output: sure (1 6 8)


Analysis:
4 + 5 + 14 = 23
4 * 5 = 20
4 * 5 + 14 = 34
Output: impossible (4 5 14)


Analysis:
4 + 40 + 6 = 40 + 6 = 46
4 * 40 = 160
40 - 6 = 34
(4 + 6) * 40 = 10 * 40 = 400
Output: impossible (4 40 6)


Analysis:
4 + 5 + 8 = 17
4 * 5 * 8 = 200
Output: impossible (4 5 8)


node:
[{'id': 2, 'answer': '5 - 4 = 1 ( left: 1 6 8 )', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 1, 'answer': '4 + 5 = 9 ( left: 9 6 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '6 + 8 = 14 ( left: 4 5 14 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '8 * 5 = 40 ( left: 4 40 6 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '6 / 2 = 3 ( left: 4 5 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}]
5


step 2


Generator response:
1 + 6 = 7
8 / 2 = 4
6 - 1 = 5
1 * 6 = 6
8 - 6 = 2


Generated answers:
['1 + 6 = 7 ( left: 7 8 )', '8 / 2 = 4 ( left: 1 6 )', '6 - 1 = 5 ( left: 5 8 )', '1 * 6 = 6 ( left: 6 8 )', '8 - 6 = 2 ( left: 1 2 )']


Analysis:
7 + 8 = 15
7 * 8 = 56
Output: impossible (7 8)


Analysis:
1 + 6 = 7
1 * 6 = 6
Output: impossible (1 6)


Analysis:
5 + 8 = 13
5 * 8 = 40
Output: impossible (5 8)


Analysis:
6 + 8 = 14
6 * 8 = 48
Output: impossible (6 8)


Analysis:
1 + 2 = 3
1 * 2 = 2
Output: impossible (1 2)


node:
[{'id': 6, 'answer': '1 + 6 = 7 ( left: 7 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}, {'id': 7, 'answer': '8 / 2 = 4 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}, {'id': 8, 'answer': '6 - 1 = 5 ( left: 5 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}, {'id': 9, 'answer': '1 * 6 = 6 ( left: 6 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}, {'id': 10, 'answer': '8 - 6 = 2 ( left: 1 2 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}]
5


step 3


Generator response:
7 + 8 = 15
7 - 8 = -1
7 * 8 = 56
7 / 8 = 0.875
7 + 8 = 15


Generated answers:
['7 + 8 = 15 ( left: 15 )', '7 - 8 = -1 ( left: -1 )', '7 * 8 = 56 ( left: 56 )', '7 / 8 = 0.875 ( left: 0.875 )', '7 + 8 = 15 ( left: 15 )']


Analysis:
15 is not equal to 24
Output: impossible (15)


Analysis:
-1 is not equal to 24
Output: impossible (-1)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
56 is not equal to 24
Output: impossible (56)


Analysis:
0.875 is not equal to 24
Output: impossible (0.875)


Analysis:
15 is not equal to 24
Output: impossible (15)


node:
[{'id': 11, 'answer': '7 + 8 = 15 ( left: 15 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}, {'id': 12, 'answer': '7 - 8 = -1 ( left: -1 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}, {'id': 13, 'answer': '7 * 8 = 56 ( left: 56 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}, {'id': 14, 'answer': '7 / 8 = 0.875 ( left: 0.875 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}, {'id': 15, 'answer': '7 + 8 = 15 ( left: 15 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}]
5


linked list:
000 -> 2 -> 1 -> 3 -> 4 -> 5

001

002 -> 6 -> 7 -> 8 -> 9 -> 10

003

004

005

006 -> 11 -> 12 -> 13 -> 14 -> 15

007

008

009

010

011

012

013

014

015

016

017

018

019

020

021

022

023

024

025

026

027

028

029

030

031

032

033

034

035

036

037

038

039

040

041

042

043

044

045

046

047

048

049

050

051

052

053

054

055

056

057

058

059

060

061

062

063

064

065

066

067

068

069

070

071

072

073

074

075

076

077

078

079

080

081

082

083

084

085

086

087

088

089

090

091

092

093

094

095

096

097

098

099

100

101

102

103

104

105

106

107

108

109

110

111

112

113

114

115

116

117

118

119

120

121

122

123

124

125

126

127

128

129

130

131

132

133

134

135

136

137

138

139

140

141

142

143

144

145

146

147

148

149

150

151

152

153

154

155


path: ['7 + 8 = 15 ( left: 15 )', '1 + 6 = 7 ( left: 7 8 )', '5 - 4 = 1 ( left: 1 6 8 )', '( left: 4 5 6 8 )']


['7 + 8 = 15 ( left: 15 )', '1 + 6 = 7 ( left: 7 8 )', '5 - 4 = 1 ( left: 1 6 8 )', '( left: 4 5 6 8 )']
 ( ( ( 5 - 4 ) + 6 ) + 8 ) 


Answer: 
 ( ( ( 5 - 4 ) + 6 ) + 8 ) 


d_thres: 18.0

step 0


distance: 0
d_threshold: 18.0

input_node:{'id': 2, 'answer': '5 - 4 = 1 ( left: 1 6 8 )', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


distance: 9
d_threshold: 18.0

input_node:{'id': 6, 'answer': '1 + 6 = 7 ( left: 7 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}


step 2


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 11, 'answer': '7 + 8 = 15 ( left: 15 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 12, 'answer': '7 - 8 = -1 ( left: -1 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 13, 'answer': '7 * 8 = 56 ( left: 56 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 14, 'answer': '7 / 8 = 0.875 ( left: 0.875 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 15, 'answer': '7 + 8 = 15 ( left: 15 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 7, 'answer': '8 / 2 = 4 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}


step 2


Generator response:
1 + 6 = 7
6 - 1 = 5
1 * 6 = 6
6 / 1 = 6
1 / 6 = 0.16666666666666666


Generated answers:
['1 + 6 = 7 ( left: 7 )', '6 - 1 = 5 ( left: 5 )', '1 * 6 = 6 ( left: 6 )', '6 / 1 = 6 ( left: 6 )', '1 / 6 = 0.16666666666666666 ( left: 0.16666666666666666 )']


Analysis:
7 is not equal to 24
Output: impossible (7)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
6 is not equal to 24
Output: impossible (6)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)


Analysis:
6 is not equal to 24
Output: impossible (6)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)


Analysis:
0.16666666666666666 is not equal to 24
Output: impossible (0.16666666666666666)


node:
[{'id': 16, 'answer': '1 + 6 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}, {'id': 17, 'answer': '6 - 1 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}, {'id': 18, 'answer': '1 * 6 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}, {'id': 19, 'answer': '6 / 1 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}, {'id': 20, 'answer': '1 / 6 = 0.16666666666666666 ( left: 0.16666666666666666 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 16, 'answer': '1 + 6 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 17, 'answer': '6 - 1 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 18, 'answer': '1 * 6 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 19, 'answer': '6 / 1 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 20, 'answer': '1 / 6 = 0.16666666666666666 ( left: 0.16666666666666666 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 8, 'answer': '6 - 1 = 5 ( left: 5 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}


step 2


Generator response:
5 + 8 = 13
5 - 8 = -3
5 * 8 = 40
5 / 8 = 0.625
5 - 8 = -3


Generated answers:
['5 + 8 = 13 ( left: 13 )', '5 - 8 = -3 ( left: -3 )', '5 * 8 = 40 ( left: 40 )', '5 / 8 = 0.625 ( left: 0.625 )', '5 - 8 = -3 ( left: -3 )']


Analysis:
13 is not equal to 24
Output: impossible (13)

Input: 10 10
Analysis:
10 + 10 = 20
Output: sure (10 10)


Analysis:
-3 is not equal to 24
Output: impossible (-3)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
40 is not equal to 24
Output: impossible (40)


Analysis:
0.625 is not equal to 24
Output: impossible (0.625)


Analysis:
-3 is not equal to 24
Output: impossible (-3)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


node:
[{'id': 21, 'answer': '5 + 8 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}, {'id': 22, 'answer': '5 - 8 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}, {'id': 23, 'answer': '5 * 8 = 40 ( left: 40 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}, {'id': 24, 'answer': '5 / 8 = 0.625 ( left: 0.625 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}, {'id': 25, 'answer': '5 - 8 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 21, 'answer': '5 + 8 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 22, 'answer': '5 - 8 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 23, 'answer': '5 * 8 = 40 ( left: 40 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 24, 'answer': '5 / 8 = 0.625 ( left: 0.625 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 25, 'answer': '5 - 8 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 9, 'answer': '1 * 6 = 6 ( left: 6 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}


step 2


Generator response:
6 + 8 = 14
8 + 6 = 14
6 - 8 = -2
8 - 6 = 2
6 * 8 = 48


Generated answers:
['6 + 8 = 14 ( left: 14 )', '8 + 6 = 14 ( left: 14 )', '6 - 8 = -2 ( left: -2 )', '8 - 6 = 2 ( left: 2 )', '6 * 8 = 48 ( left: 48 )']


Analysis:
14 is not equal to 24
Output: impossible (14)


Analysis:
14 is not equal to 24
Output: impossible (14)


Analysis:
-2 is not equal to 24
Output: impossible (-2)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
2 is not equal to 24
Output: impossible (2)


Analysis:
48 is not equal to 24
Output: impossible (48)


node:
[{'id': 26, 'answer': '6 + 8 = 14 ( left: 14 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}, {'id': 27, 'answer': '8 + 6 = 14 ( left: 14 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}, {'id': 28, 'answer': '6 - 8 = -2 ( left: -2 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}, {'id': 29, 'answer': '8 - 6 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}, {'id': 30, 'answer': '6 * 8 = 48 ( left: 48 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 26, 'answer': '6 + 8 = 14 ( left: 14 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 27, 'answer': '8 + 6 = 14 ( left: 14 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 28, 'answer': '6 - 8 = -2 ( left: -2 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 29, 'answer': '8 - 6 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 30, 'answer': '6 * 8 = 48 ( left: 48 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 10, 'answer': '8 - 6 = 2 ( left: 1 2 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}


step 2


Generator response:
1 + 2 = 3
1 * 2 = 2
2 / 1 = 2
2 - 1 = 1
1 - 2 = -1


Generated answers:
['1 + 2 = 3 ( left: 3 )', '1 * 2 = 2 ( left: 2 )', '2 / 1 = 2 ( left: 2 )', '2 - 1 = 1 ( left: 1 )', '1 - 2 = -1 ( left: -1 )']


Analysis:
3 is not equal to 24
Output: impossible (3)


Analysis:
2 is not equal to 24
Output: impossible (2)


Analysis:
2 is not equal to 24
Output: impossible (2)


Analysis:
1 is not equal to 24
Output: impossible (1)


Analysis:
-1 is not equal to 24
Output: impossible (-1)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


node:
[{'id': 31, 'answer': '1 + 2 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 32, 'answer': '1 * 2 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 33, 'answer': '2 / 1 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 34, 'answer': '2 - 1 = 1 ( left: 1 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 35, 'answer': '1 - 2 = -1 ( left: -1 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 31, 'answer': '1 + 2 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 32, 'answer': '1 * 2 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 33, 'answer': '2 / 1 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 34, 'answer': '2 - 1 = 1 ( left: 1 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 35, 'answer': '1 - 2 = -1 ( left: -1 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 1, 'answer': '4 + 5 = 9 ( left: 9 6 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
9 + 6 = 15
9 / 6 = 1.5
6 * 8 = 48
8 - 6 = 2
6 - 8 = -2


Generated answers:
['9 + 6 = 15 ( left: 15 8 )', '9 / 6 = 1.5 ( left: 1.5 8 )', '6 * 8 = 48 ( left: 9 48 )', '8 - 6 = 2 ( left: 9 2 )', '6 - 8 = -2 ( left: 9 -2 )']


Analysis:
15 + 8 = 23
15 - 8 = 7
15 * 8 = 120
15 / 8 = 1.875
Output: impossible (15 8)


Analysis:
1.5 + 8 = 9.5
1.5 * 8 = 12
Output: impossible (1.5 8)


Analysis:
9 + 48 = 57
9 * 48 = 432
Output: impossible (9 48)


Analysis:
9 + 2 = 11
9 * 2 = 18
Output: impossible (9 2)


Analysis:
9 - 2 = 7
Output: impossible (9 -2)


node:
[{'id': 36, 'answer': '9 + 6 = 15 ( left: 15 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 37, 'answer': '9 / 6 = 1.5 ( left: 1.5 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 38, 'answer': '6 * 8 = 48 ( left: 9 48 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 39, 'answer': '8 - 6 = 2 ( left: 9 2 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 40, 'answer': '6 - 8 = -2 ( left: 9 -2 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 36, 'answer': '9 + 6 = 15 ( left: 15 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 37, 'answer': '9 / 6 = 1.5 ( left: 1.5 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 38, 'answer': '6 * 8 = 48 ( left: 9 48 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 39, 'answer': '8 - 6 = 2 ( left: 9 2 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 40, 'answer': '6 - 8 = -2 ( left: 9 -2 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 3, 'answer': '6 + 8 = 14 ( left: 4 5 14 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
4 + 5 = 9
14 - 5 = 9
14 + 4 = 18
4 * 5 = 20
14 / 5 = 2.8000000000000002


Generated answers:
['4 + 5 = 9 ( left: 9 14 )', '14 - 5 = 9 ( left: 4 9 )', '14 + 4 = 18 ( left: 18 5 )', '4 * 5 = 20 ( left: 20 14 )', '14 / 5 = 2.8000000000000002 ( left: 4 2.8000000000000002 )']


Analysis:
9 + 14 = 23
9 * 14 = 126
9 / 14 = 0.64
Output: impossible (9 14)


Analysis:
4 + 9 = 13
4 * 9 = 36
Output: impossible (4 9)


Analysis:
18 + 5 = 23
18 - 5 = 13
18 * 5 = 90
18 / 5 = 3.6
Output: impossible (18 5)


Analysis:
20 + 14 = 34
20 - 14 = 6
20 * 14 = 280
20 / 14 = 1.43
Output: impossible (20 14)


Analysis:
4 + 2.8000000000000002 = 6.800000000000001
Output: impossible (4 2.8000000000000002)


node:
[{'id': 41, 'answer': '4 + 5 = 9 ( left: 9 14 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 42, 'answer': '14 - 5 = 9 ( left: 4 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 43, 'answer': '14 + 4 = 18 ( left: 18 5 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 44, 'answer': '4 * 5 = 20 ( left: 20 14 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 45, 'answer': '14 / 5 = 2.8000000000000002 ( left: 4 2.8000000000000002 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 41, 'answer': '4 + 5 = 9 ( left: 9 14 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 42, 'answer': '14 - 5 = 9 ( left: 4 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 43, 'answer': '14 + 4 = 18 ( left: 18 5 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 44, 'answer': '4 * 5 = 20 ( left: 20 14 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 45, 'answer': '14 / 5 = 2.8000000000000002 ( left: 4 2.8000000000000002 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 4, 'answer': '8 * 5 = 40 ( left: 4 40 6 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
4 + 40 = 44
40 - 4 = 36
6 * 4 = 24
4 / 4 = 1
6 - 4 = 2


Generated answers:
['4 + 40 = 44 ( left: 44 6 )', '40 - 4 = 36 ( left: 36 6 )', '6 * 4 = 24 ( left: 24 40 )', '4 / 4 = 1 ( left: 10 6 )', '6 - 4 = 2 ( left: 2 40 )']


Analysis:
44 + 6 = 50
44 - 6 = 38
44 * 6 = 264
44 / 6 = 7.333333333333333
Output: impossible (44 6)


Analysis:
36 + 6 = 42
36 - 6 = 30
36 * 6 = 216
36 / 6 = 6
Output: impossible (36 6)


Analysis:
24 + 40 = 64
Output: sure (24 40)


Analysis:
10 + 6 = 16
10 - 6 = 4
10 * 6 = 60
10 / 6 = 1.67
Output: impossible (10 6)


Analysis:
2 + 40 = 42
Output: impossible (2 40)


node:
[{'id': 46, 'answer': '4 + 40 = 44 ( left: 44 6 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 47, 'answer': '40 - 4 = 36 ( left: 36 6 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 48, 'answer': '6 * 4 = 24 ( left: 24 40 )', 'value': 'sure', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 49, 'answer': '4 / 4 = 1 ( left: 10 6 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 50, 'answer': '6 - 4 = 2 ( left: 2 40 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 46, 'answer': '4 + 40 = 44 ( left: 44 6 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 47, 'answer': '40 - 4 = 36 ( left: 36 6 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 48, 'answer': '6 * 4 = 24 ( left: 24 40 )', 'value': 'sure', 'parent_node': 4, 'ancestor_value': 1.0}


step 2


Generator response:
24 + 40 = 64
24 - 40 = -16
40 + 24 = 64
24 * 40 = 960
24 / 40 = 0.6000000000000002


Generated answers:
['24 + 40 = 64 ( left: 64 )', '24 - 40 = -16 ( left: -16 )', '40 + 24 = 64 ( left: 64 )', '24 * 40 = 960 ( left: 960 )', '24 / 40 = 0.6000000000000002 ( left: 0.6000000000000002 )']


Analysis:
64 is not equal to 24
Output: impossible (64)


Analysis:
-16 is not equal to 24
Output: impossible (-16)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
64 is not equal to 24
Output: impossible (64)

Input: 100
Analysis:
100 is not equal to 24
Output: impossible (100)


Analysis:
960 is not equal to 24
Output: impossible (960)


Analysis:
0.6000000000000002 is not equal to 24
Output: impossible (0.6000000000000002)


node:
[{'id': 51, 'answer': '24 + 40 = 64 ( left: 64 )', 'value': 'impossible', 'parent_node': 48, 'ancestor_value': 11.0}, {'id': 52, 'answer': '24 - 40 = -16 ( left: -16 )', 'value': 'impossible', 'parent_node': 48, 'ancestor_value': 11.0}, {'id': 53, 'answer': '40 + 24 = 64 ( left: 64 )', 'value': 'impossible', 'parent_node': 48, 'ancestor_value': 11.0}, {'id': 54, 'answer': '24 * 40 = 960 ( left: 960 )', 'value': 'impossible', 'parent_node': 48, 'ancestor_value': 11.0}, {'id': 55, 'answer': '24 / 40 = 0.6000000000000002 ( left: 0.6000000000000002 )', 'value': 'impossible', 'parent_node': 48, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 51, 'answer': '24 + 40 = 64 ( left: 64 )', 'value': 'impossible', 'parent_node': 48, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 52, 'answer': '24 - 40 = -16 ( left: -16 )', 'value': 'impossible', 'parent_node': 48, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 53, 'answer': '40 + 24 = 64 ( left: 64 )', 'value': 'impossible', 'parent_node': 48, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 54, 'answer': '24 * 40 = 960 ( left: 960 )', 'value': 'impossible', 'parent_node': 48, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 55, 'answer': '24 / 40 = 0.6000000000000002 ( left: 0.6000000000000002 )', 'value': 'impossible', 'parent_node': 48, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 49, 'answer': '4 / 4 = 1 ( left: 10 6 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 50, 'answer': '6 - 4 = 2 ( left: 2 40 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 5, 'answer': '6 / 2 = 3 ( left: 4 5 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
8 + 4 = 12
4 * 5 = 20
8 - 4 = 4
5 + 4 = 9
8 / 4 = 2.0000000000000003


Generated answers:
['8 + 4 = 12 ( left: 12 5 )', '4 * 5 = 20 ( left: 20 8 )', '8 - 4 = 4 ( left: 4 5 )', '5 + 4 = 9 ( left: 9 8 )', '8 / 4 = 2.0000000000000003 ( left: 2.0000000000000003 5 )']


Analysis:
12 + 5 = 17
12 - 5 = 7
12 * 5 = 60
12 / 5 = 2.4
Output: impossible (12 5)


Analysis:
20 + 8 = 28
20 - 8 = 12
20 * 8 = 160
20 / 8 = 2.5
Output: impossible (20 8)


Analysis:
4 + 5 = 9
4 * 5 = 20
Output: impossible (4 5)


Analysis:
9 + 8 = 17
9 * 8 = 72
Output: impossible (9 8)


Analysis:
2.0000000000000003 + 5 = 7.0000000000000003
2.0000000000000003 * 5 = 10.0000000000000015
Output: impossible (2.0000000000000003 5)


node:
[{'id': 56, 'answer': '8 + 4 = 12 ( left: 12 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 57, 'answer': '4 * 5 = 20 ( left: 20 8 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 58, 'answer': '8 - 4 = 4 ( left: 4 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 59, 'answer': '5 + 4 = 9 ( left: 9 8 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 60, 'answer': '8 / 4 = 2.0000000000000003 ( left: 2.0000000000000003 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 56, 'answer': '8 + 4 = 12 ( left: 12 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 57, 'answer': '4 * 5 = 20 ( left: 20 8 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 58, 'answer': '8 - 4 = 4 ( left: 4 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 59, 'answer': '5 + 4 = 9 ( left: 9 8 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 60, 'answer': '8 / 4 = 2.0000000000000003 ( left: 2.0000000000000003 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


all_nodes:
{'id': 0, 'answer': '4 5 6 8', 'value': None, 'parent_node': None, 'ancestor_value': None}
{'id': 1, 'answer': '4 + 5 = 9 ( left: 9 6 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 2, 'answer': '5 - 4 = 1 ( left: 1 6 8 )', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 3, 'answer': '6 + 8 = 14 ( left: 4 5 14 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 4, 'answer': '8 * 5 = 40 ( left: 4 40 6 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 5, 'answer': '6 / 2 = 3 ( left: 4 5 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 6, 'answer': '1 + 6 = 7 ( left: 7 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}
{'id': 7, 'answer': '8 / 2 = 4 ( left: 1 6 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}
{'id': 8, 'answer': '6 - 1 = 5 ( left: 5 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}
{'id': 9, 'answer': '1 * 6 = 6 ( left: 6 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}
{'id': 10, 'answer': '8 - 6 = 2 ( left: 1 2 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}
{'id': 11, 'answer': '7 + 8 = 15 ( left: 15 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}
{'id': 12, 'answer': '7 - 8 = -1 ( left: -1 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}
{'id': 13, 'answer': '7 * 8 = 56 ( left: 56 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}
{'id': 14, 'answer': '7 / 8 = 0.875 ( left: 0.875 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}
{'id': 15, 'answer': '7 + 8 = 15 ( left: 15 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}
{'id': 16, 'answer': '1 + 6 = 7 ( left: 7 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}
{'id': 17, 'answer': '6 - 1 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}
{'id': 18, 'answer': '1 * 6 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}
{'id': 19, 'answer': '6 / 1 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}
{'id': 20, 'answer': '1 / 6 = 0.16666666666666666 ( left: 0.16666666666666666 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}
{'id': 21, 'answer': '5 + 8 = 13 ( left: 13 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}
{'id': 22, 'answer': '5 - 8 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}
{'id': 23, 'answer': '5 * 8 = 40 ( left: 40 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}
{'id': 24, 'answer': '5 / 8 = 0.625 ( left: 0.625 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}
{'id': 25, 'answer': '5 - 8 = -3 ( left: -3 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}
{'id': 26, 'answer': '6 + 8 = 14 ( left: 14 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}
{'id': 27, 'answer': '8 + 6 = 14 ( left: 14 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}
{'id': 28, 'answer': '6 - 8 = -2 ( left: -2 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}
{'id': 29, 'answer': '8 - 6 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}
{'id': 30, 'answer': '6 * 8 = 48 ( left: 48 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}
{'id': 31, 'answer': '1 + 2 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 32, 'answer': '1 * 2 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 33, 'answer': '2 / 1 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 34, 'answer': '2 - 1 = 1 ( left: 1 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 35, 'answer': '1 - 2 = -1 ( left: -1 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 36, 'answer': '9 + 6 = 15 ( left: 15 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 37, 'answer': '9 / 6 = 1.5 ( left: 1.5 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 38, 'answer': '6 * 8 = 48 ( left: 9 48 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 39, 'answer': '8 - 6 = 2 ( left: 9 2 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 40, 'answer': '6 - 8 = -2 ( left: 9 -2 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 41, 'answer': '4 + 5 = 9 ( left: 9 14 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 42, 'answer': '14 - 5 = 9 ( left: 4 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 43, 'answer': '14 + 4 = 18 ( left: 18 5 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 44, 'answer': '4 * 5 = 20 ( left: 20 14 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 45, 'answer': '14 / 5 = 2.8000000000000002 ( left: 4 2.8000000000000002 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 46, 'answer': '4 + 40 = 44 ( left: 44 6 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 47, 'answer': '40 - 4 = 36 ( left: 36 6 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 48, 'answer': '6 * 4 = 24 ( left: 24 40 )', 'value': 'sure', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 49, 'answer': '4 / 4 = 1 ( left: 10 6 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 50, 'answer': '6 - 4 = 2 ( left: 2 40 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 51, 'answer': '24 + 40 = 64 ( left: 64 )', 'value': 'impossible', 'parent_node': 48, 'ancestor_value': 11.0}
{'id': 52, 'answer': '24 - 40 = -16 ( left: -16 )', 'value': 'impossible', 'parent_node': 48, 'ancestor_value': 11.0}
{'id': 53, 'answer': '40 + 24 = 64 ( left: 64 )', 'value': 'impossible', 'parent_node': 48, 'ancestor_value': 11.0}
{'id': 54, 'answer': '24 * 40 = 960 ( left: 960 )', 'value': 'impossible', 'parent_node': 48, 'ancestor_value': 11.0}
{'id': 55, 'answer': '24 / 40 = 0.6000000000000002 ( left: 0.6000000000000002 )', 'value': 'impossible', 'parent_node': 48, 'ancestor_value': 11.0}
{'id': 56, 'answer': '8 + 4 = 12 ( left: 12 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 57, 'answer': '4 * 5 = 20 ( left: 20 8 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 58, 'answer': '8 - 4 = 4 ( left: 4 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 59, 'answer': '5 + 4 = 9 ( left: 9 8 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 60, 'answer': '8 / 4 = 2.0000000000000003 ( left: 2.0000000000000003 5 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


linked list:
000 -> 2 -> 1 -> 3 -> 4 -> 5

001 -> 36 -> 37 -> 38 -> 39 -> 40

002 -> 6 -> 7 -> 8 -> 9 -> 10

003 -> 41 -> 42 -> 43 -> 44 -> 45

004 -> 46 -> 47 -> 48 -> 49 -> 50

005 -> 56 -> 57 -> 58 -> 59 -> 60

006 -> 11 -> 12 -> 13 -> 14 -> 15

007 -> 16 -> 17 -> 18 -> 19 -> 20

008 -> 21 -> 22 -> 23 -> 24 -> 25

009 -> 26 -> 27 -> 28 -> 29 -> 30

010 -> 31 -> 32 -> 33 -> 34 -> 35

011

012

013

014

015

016

017

018

019

020

021

022

023

024

025

026

027

028

029

030

031

032

033

034

035

036

037

038

039

040

041

042

043

044

045

046

047

048 -> 51 -> 52 -> 53 -> 54 -> 55

049

050

051

052

053

054

055

056

057

058

059

060

061

062

063

064

065

066

067

068

069

070

071

072

073

074

075

076

077

078

079

080

081

082

083

084

085

086

087

088

089

090

091

092

093

094

095

096

097

098

099

100

101

102

103

104

105

106

107

108

109

110

111

112

113

114

115

116

117

118

119

120

121

122

123

124

125

126

127

128

129

130

131

132

133

134

135

136

137

138

139

140

141

142

143

144

145

146

147

148

149

150

151

152

153

154

155


best node: {'id': 11, 'answer': '7 + 8 = 15 ( left: 15 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}

best node: {'id': 6, 'answer': '1 + 6 = 7 ( left: 7 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}

best node: {'id': 2, 'answer': '5 - 4 = 1 ( left: 1 6 8 )', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}

best node: {'id': 0, 'answer': '4 5 6 8', 'value': None, 'parent_node': None, 'ancestor_value': None}

path: ['7 + 8 = 15 ( left: 15 )', '1 + 6 = 7 ( left: 7 8 )', '5 - 4 = 1 ( left: 1 6 8 )', '( left: 4 5 6 8 )']


['7 + 8 = 15 ( left: 15 )', '1 + 6 = 7 ( left: 7 8 )', '5 - 4 = 1 ( left: 1 6 8 )', '( left: 4 5 6 8 )']
 ( ( ( 5 - 4 ) + 6 ) + 8 ) 


Answer: 
 ( ( ( 5 - 4 ) + 6 ) + 8 ) 

