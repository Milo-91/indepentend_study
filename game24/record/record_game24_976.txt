TheBloke/OpenHermes-2.5-Mistral-7B-GPTQ
temperature: 0.5, 0
date: 2024-01-18


step 1


Generator response:
3 + 3 = 6
12 - 3 = 9
9 * 3 = 27
3 / 3 = 1
9 + 3 = 12


Generated answers:
['3 + 3 = 6 ( left: 6 9 12 )', '12 - 3 = 9 ( left: 9 3 9 )', '9 * 3 = 27 ( left: 27 3 12 )', '3 / 3 = 1 ( left: 1 9 12 )', '9 + 3 = 12 ( left: 12 3 12 )']


Analysis:
6 + 9 + 12 = 27
6 * 9 = 54
6 / 9 = 0.6666666666666666
6 - 9 = -3
Output: impossible (6 9 12)


Analysis:
9 + 3 + 9 = 21
9 - 3 = 6
9 * 3 = 27
Output: impossible (9 3 9)


Analysis:
27 + 3 + 12 = 42
27 - 3 = 24
27 * 3 = 81
27 / 3 = 9
Output: impossible (27 3 12)


Analysis:
1 + 9 + 12 = 22
1 * 9 * 12 = 108
(1 + 9) * 12 = 108
Output: sure (1 9 12)


Analysis:
12 + 3 + 12 = 27
12 - 3 + 12 = 21
12 * 3 = 36
Output: impossible (12 3 12)


node:
[{'id': 4, 'answer': '3 / 3 = 1 ( left: 1 9 12 )', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 1, 'answer': '3 + 3 = 6 ( left: 6 9 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 2, 'answer': '12 - 3 = 9 ( left: 9 3 9 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '9 * 3 = 27 ( left: 27 3 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '9 + 3 = 12 ( left: 12 3 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}]
5


step 2


Generator response:
1 + 9 = 10
12 - 9 = 3
12 + 1 = 13
9 * 1 = 9
1 - 9 = -8


Generated answers:
['1 + 9 = 10 ( left: 10 12 )', '12 - 9 = 3 ( left: 1 3 )', '12 + 1 = 13 ( left: 13 9 )', '9 * 1 = 9 ( left: 9 12 )', '1 - 9 = -8 ( left: -8 12 )']


Analysis:
10 + 12 = 22
12 - 10 = 2
10 * 12 = 120
10 / 12 = 0.83
Output: impossible (10 12)


Analysis:
1 + 3 = 4
1 * 3 = 3
Output: impossible (1 3)


Analysis:
13 + 9 = 22
13 - 9 = 4
13 * 9 = 117
13 / 9 = 1.4888888888888888
Output: impossible (13 9)


Analysis:
9 + 12 = 21
9 * 12 = 108
Output: impossible (9 12)


Analysis:
-8 + 12 = 4
-8 * 12 = -96
Output: impossible (-8 12)


node:
[{'id': 6, 'answer': '1 + 9 = 10 ( left: 10 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 10.0}, {'id': 7, 'answer': '12 - 9 = 3 ( left: 1 3 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 10.0}, {'id': 8, 'answer': '12 + 1 = 13 ( left: 13 9 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 10.0}, {'id': 9, 'answer': '9 * 1 = 9 ( left: 9 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 10.0}, {'id': 10, 'answer': '1 - 9 = -8 ( left: -8 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 10.0}]
5


step 3


Generator response:
10 + 12 = 22
10 - 12 = -2
10 * 12 = 120
12 / 2 = 6
12 - 10 = 2


Generated answers:
['10 + 12 = 22 ( left: 22 )', '10 - 12 = -2 ( left: -2 )', '10 * 12 = 120 ( left: 120 )', '12 / 2 = 6 ( left: 10 )', '12 - 10 = 2 ( left: 2 )']


Analysis:
22 is not equal to 24
Output: impossible (22)


Analysis:
-2 is not equal to 24
Output: impossible (-2)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
120 is not equal to 24
Output: impossible (120)


Analysis:
10 is not equal to 24
Output: impossible (10)


Analysis:
2 is not equal to 24
Output: impossible (2)


node:
[{'id': 11, 'answer': '10 + 12 = 22 ( left: 22 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}, {'id': 12, 'answer': '10 - 12 = -2 ( left: -2 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}, {'id': 13, 'answer': '10 * 12 = 120 ( left: 120 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}, {'id': 14, 'answer': '12 / 2 = 6 ( left: 10 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}, {'id': 15, 'answer': '12 - 10 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}]
5


linked list:
000 -> 4 -> 1 -> 2 -> 3 -> 5

001

002

003

004 -> 6 -> 7 -> 8 -> 9 -> 10

005

006 -> 11 -> 12 -> 13 -> 14 -> 15

007

008

009

010

011

012

013

014

015

016

017

018

019

020

021

022

023

024

025

026

027

028

029

030

031

032

033

034

035

036

037

038

039

040

041

042

043

044

045

046

047

048

049

050

051

052

053

054

055

056

057

058

059

060

061

062

063

064

065

066

067

068

069

070

071

072

073

074

075

076

077

078

079

080

081

082

083

084

085

086

087

088

089

090

091

092

093

094

095

096

097

098

099

100

101

102

103

104

105

106

107

108

109

110

111

112

113

114

115

116

117

118

119

120

121

122

123

124

125

126

127

128

129

130

131

132

133

134

135

136

137

138

139

140

141

142

143

144

145

146

147

148

149

150

151

152

153

154

155


path: ['10 + 12 = 22 ( left: 22 )', '1 + 9 = 10 ( left: 10 12 )', '3 / 3 = 1 ( left: 1 9 12 )', '( left: 3 3 9 12 )']


['10 + 12 = 22 ( left: 22 )', '1 + 9 = 10 ( left: 10 12 )', '3 / 3 = 1 ( left: 1 9 12 )', '( left: 3 3 9 12 )']
 ( ( ( 3 / 3 ) + 9 ) + 12 ) 


Answer: 
 ( ( ( 3 / 3 ) + 9 ) + 12 ) 


d_thres: 18.0

step 0


distance: 0
d_threshold: 18.0

input_node:{'id': 4, 'answer': '3 / 3 = 1 ( left: 1 9 12 )', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


distance: 9
d_threshold: 18.0

input_node:{'id': 6, 'answer': '1 + 9 = 10 ( left: 10 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 10.0}


step 2


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 11, 'answer': '10 + 12 = 22 ( left: 22 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 12, 'answer': '10 - 12 = -2 ( left: -2 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 13, 'answer': '10 * 12 = 120 ( left: 120 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 14, 'answer': '12 / 2 = 6 ( left: 10 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 15, 'answer': '12 - 10 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 7, 'answer': '12 - 9 = 3 ( left: 1 3 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 10.0}


step 2


Generator response:
1 + 3 = 4
3 - 1 = 2
1 * 3 = 3
3 / 1 = 3
1 / 3 = 0.3333333333333333...


Generated answers:
['1 + 3 = 4 ( left: 4 )', '3 - 1 = 2 ( left: 2 )', '1 * 3 = 3 ( left: 3 )', '3 / 1 = 3 ( left: 3 )', '1 / 3 = 0.3333333333333333... ( left: 0.3333333333333333... )']


Analysis:
4 is not equal to 24
Output: impossible (4)


Analysis:
2 is not equal to 24
Output: impossible (2)


Analysis:
3 is not equal to 24
Output: impossible (3)


Analysis:
3 is not equal to 24
Output: impossible (3)


Analysis:
0.3333333333333333... is not equal to 24
Output: impossible (0.3333333333333333...)


node:
[{'id': 16, 'answer': '1 + 3 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}, {'id': 17, 'answer': '3 - 1 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}, {'id': 18, 'answer': '1 * 3 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}, {'id': 19, 'answer': '3 / 1 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}, {'id': 20, 'answer': '1 / 3 = 0.3333333333333333... ( left: 0.3333333333333333... )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 16, 'answer': '1 + 3 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 17, 'answer': '3 - 1 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 18, 'answer': '1 * 3 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 19, 'answer': '3 / 1 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 20, 'answer': '1 / 3 = 0.3333333333333333... ( left: 0.3333333333333333... )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 8, 'answer': '12 + 1 = 13 ( left: 13 9 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 10.0}


step 2


Generator response:
13 - 9 = 4
13 + 9 = 22
13 * 9 = 117
9 / 2 = 4.5
9 - 13 = -4


Generated answers:
['13 - 9 = 4 ( left: 4 )', '13 + 9 = 22 ( left: 22 )', '13 * 9 = 117 ( left: 117 )', '9 / 2 = 4.5 ( left: 13 )', '9 - 13 = -4 ( left: -4 )']


Analysis:
4 is not equal to 24
Output: impossible (4)


Analysis:
22 is not equal to 24
Output: impossible (22)


Analysis:
117 is not equal to 24
Output: impossible (117)


Analysis:
13 is not equal to 24
Output: impossible (13)

Input: 10 10
Analysis:
10 + 10 = 20
Output: sure (10 10)


Analysis:
-4 is not equal to 24
Output: impossible (-4)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


node:
[{'id': 21, 'answer': '13 - 9 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}, {'id': 22, 'answer': '13 + 9 = 22 ( left: 22 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}, {'id': 23, 'answer': '13 * 9 = 117 ( left: 117 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}, {'id': 24, 'answer': '9 / 2 = 4.5 ( left: 13 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}, {'id': 25, 'answer': '9 - 13 = -4 ( left: -4 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 21, 'answer': '13 - 9 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 22, 'answer': '13 + 9 = 22 ( left: 22 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 23, 'answer': '13 * 9 = 117 ( left: 117 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 24, 'answer': '9 / 2 = 4.5 ( left: 13 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 25, 'answer': '9 - 13 = -4 ( left: -4 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 9, 'answer': '9 * 1 = 9 ( left: 9 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 10.0}


step 2


Generator response:
9 + 12 = 21
12 - 9 = 3
12 * 9 = 108
9 / 12 = 0.75



Generated answers:
['9 + 12 = 21 ( left: 21 )', '12 - 9 = 3 ( left: 3 )', '12 * 9 = 108 ( left: 108 )', '9 / 12 = 0.75 ( left: 0.75 )', '12 / 9 = 1.33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333 ( left: 1.33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333 )']


Analysis:
21 is not equal to 24
Output: impossible (21)


Analysis:
3 is not equal to 24
Output: impossible (3)


Analysis:
108 is not equal to 24
Output: impossible (108)


Analysis:
0.75 is not equal to 24
Output: impossible (0.75)



Input


node:
[{'id': 26, 'answer': '9 + 12 = 21 ( left: 21 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}, {'id': 27, 'answer': '12 - 9 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}, {'id': 28, 'answer': '12 * 9 = 108 ( left: 108 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}, {'id': 29, 'answer': '9 / 12 = 0.75 ( left: 0.75 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}, {'id': 30, 'answerleftvalue': None, 'parent_node': 9, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 26, 'answer': '9 + 12 = 21 ( left: 21 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 27, 'answer': '12 - 9 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 28, 'answer': '12 * 9 = 108 ( left: 108 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 29, 'answer': '9 / 12 = 0.75 ( left: 0.75 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}


distance: 19.0
d_threshold: 18.0

(prune)input_node:{'id': 30, 'answerleftvalue': None, 'parent_node': 9, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 10, 'answer': '1 - 9 = -8 ( left: -8 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 10.0}


step 2


Generator response:
-8 + 12 = 4
12 - 8 = 4
12 / -8 = -1.5
12 * -8 = -96
12 + 8 = 20


Generated answers:
['-8 + 12 = 4 ( left: 4 )', '12 - 8 = 4 ( left: -4 )', '12 / -8 = -1.5 ( left: -1.5 )', '12 * -8 = -96 ( left: -96 )', '12 + 8 = 20 ( left: -20 )']


Analysis:
4 is not equal to 24
Output: impossible (4)


Analysis:
-4 is not equal to 24
Output: impossible (-4)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
-1.5 is not equal to 24
Output: impossible (-1.5)


Analysis:
-96 is not equal to 24
Output: impossible (-96)


Analysis:
-20 is not equal to 24
Output: impossible (-20)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


node:
[{'id': 31, 'answer': '-8 + 12 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 32, 'answer': '12 - 8 = 4 ( left: -4 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 33, 'answer': '12 / -8 = -1.5 ( left: -1.5 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 34, 'answer': '12 * -8 = -96 ( left: -96 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 35, 'answer': '12 + 8 = 20 ( left: -20 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 31, 'answer': '-8 + 12 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 32, 'answer': '12 - 8 = 4 ( left: -4 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 33, 'answer': '12 / -8 = -1.5 ( left: -1.5 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 34, 'answer': '12 * -8 = -96 ( left: -96 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 35, 'answer': '12 + 8 = 20 ( left: -20 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 1, 'answer': '3 + 3 = 6 ( left: 6 9 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
6 + 9 = 15
9 - 6 = 3
12 * 6 = 72
6 / 9 = 0.6667
12 - 6 = 6


Generated answers:
['6 + 9 = 15 ( left: 15 12 )', '9 - 6 = 3 ( left: 3 12 )', '12 * 6 = 72 ( left: 72 9 )', '6 / 9 = 0.6667 ( left: 0.6667 12 )', '12 - 6 = 6 ( left: 6 9 )']


Analysis:
15 + 12 = 27
15 - 12 = 3
15 * 12 = 180
15 / 12 = 1.25
Output: impossible (15 12)


Analysis:
3 + 12 = 15
3 * 12 = 36
Output: impossible (3 12)


Analysis:
72 + 9 = 81
72 - 9 = 63
72 * 9 = 648
72 / 9 = 8
Output: impossible (72 9)


Analysis:
0.6667 + 12 = 12.6667
0.6667 * 12 = 8.0004
Output: impossible (0.6667 12)


Analysis:
6 + 9 = 15
6 * 9 = 54
Output: impossible (6 9)


node:
[{'id': 36, 'answer': '6 + 9 = 15 ( left: 15 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 37, 'answer': '9 - 6 = 3 ( left: 3 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 38, 'answer': '12 * 6 = 72 ( left: 72 9 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 39, 'answer': '6 / 9 = 0.6667 ( left: 0.6667 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 40, 'answer': '12 - 6 = 6 ( left: 6 9 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 36, 'answer': '6 + 9 = 15 ( left: 15 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 37, 'answer': '9 - 6 = 3 ( left: 3 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 38, 'answer': '12 * 6 = 72 ( left: 72 9 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 39, 'answer': '6 / 9 = 0.6667 ( left: 0.6667 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 40, 'answer': '12 - 6 = 6 ( left: 6 9 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 2, 'answer': '12 - 3 = 9 ( left: 9 3 9 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
9 + 3 = 12
9 - 3 = 6
3 * 9 = 27
9 / 3 = 3
3 + 9 = 12


Generated answers:
['9 + 3 = 12 ( left: 12 9 )', '9 - 3 = 6 ( left: 6 9 )', '3 * 9 = 27 ( left: 27 9 )', '9 / 3 = 3 ( left: 3 9 )', '3 + 9 = 12 ( left: 12 9 )']


Analysis:
12 + 9 = 21
12 - 9 = 3
12 * 9 = 108
12 / 9 = 1.33
Output: impossible (12 9)


Analysis:
6 + 9 = 15
6 * 9 = 54
Output: impossible (6 9)


Analysis:
27 + 9 = 36
27 - 9 = 18
27 * 9 = 243
27 / 9 = 3
Output: impossible (27 9)


Analysis:
3 + 9 = 12
3 * 9 = 27
Output: impossible (3 9)


Analysis:
12 + 9 = 21
12 - 9 = 3
12 * 9 = 108
12 / 9 = 1.33
Output: impossible (12 9)


node:
[{'id': 41, 'answer': '9 + 3 = 12 ( left: 12 9 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 42, 'answer': '9 - 3 = 6 ( left: 6 9 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 43, 'answer': '3 * 9 = 27 ( left: 27 9 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 44, 'answer': '9 / 3 = 3 ( left: 3 9 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 45, 'answer': '3 + 9 = 12 ( left: 12 9 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 41, 'answer': '9 + 3 = 12 ( left: 12 9 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 42, 'answer': '9 - 3 = 6 ( left: 6 9 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 43, 'answer': '3 * 9 = 27 ( left: 27 9 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 44, 'answer': '9 / 3 = 3 ( left: 3 9 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 45, 'answer': '3 + 9 = 12 ( left: 12 9 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 3, 'answer': '9 * 3 = 27 ( left: 27 3 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
27 - 3 = 24
27 + 3 = 30
27 * 3 = 81
3 / 2 = 1.5
12 - 3 = 9


Generated answers:
['27 - 3 = 24 ( left: 24 12 )', '27 + 3 = 30 ( left: 30 12 )', '27 * 3 = 81 ( left: 81 12 )', '3 / 2 = 1.5 ( left: 1.57 12 )', '12 - 3 = 9 ( left: 27 9 )']


Analysis:
24 + 12 = 36
Output: sure (24 12)


Analysis:
30 + 12 = 42
30 - 12 = 18
30 * 12 = 360
30 / 12 = 2.5
Output: impossible (30 12)


Analysis:
81 + 12 = 93
81 - 12 = 69
81 * 12 = 972
81 / 12 = 6.75
Output: impossible (81 12)


Analysis:
1.57 + 12 = 13.57
12 - 1.57 = 10.43
1.57 * 12 = 18.84
1.57 / 12 = 0.13125
Output: impossible (1.57 12)


Analysis:
27 + 9 = 36
27 - 9 = 18
27 * 9 = 243
27 / 9 = 3
Output: impossible (27 9)


node:
[{'id': 46, 'answer': '27 - 3 = 24 ( left: 24 12 )', 'value': 'sure', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 47, 'answer': '27 + 3 = 30 ( left: 30 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 48, 'answer': '27 * 3 = 81 ( left: 81 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 49, 'answer': '3 / 2 = 1.5 ( left: 1.57 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 50, 'answer': '12 - 3 = 9 ( left: 27 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}]
5


distance: 9
d_threshold: 18.0

input_node:{'id': 46, 'answer': '27 - 3 = 24 ( left: 24 12 )', 'value': 'sure', 'parent_node': 3, 'ancestor_value': 1.0}


step 2


Generator response:
24 + 12 = 36
24 - 12 = 12
24 / 12 = 2
24 * 12 = 288
12 - 24 = -12


Generated answers:
['24 + 12 = 36 ( left: 36 )', '24 - 12 = 12 ( left: 12 )', '24 / 12 = 2 ( left: 2 )', '24 * 12 = 288 ( left: 288 )', '12 - 24 = -12 ( left: -12 )']


Analysis:
36 is not equal to 24
Output: impossible (36)


Analysis:
12 is not equal to 24
Output: impossible (12)


Analysis:
2 is not equal to 24
Output: impossible (2)


Analysis:
288 is not equal to 24
Output: impossible (288)


Analysis:
-12 is not equal to 24
Output: impossible (-12)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


node:
[{'id': 51, 'answer': '24 + 12 = 36 ( left: 36 )', 'value': 'impossible', 'parent_node': 46, 'ancestor_value': 11.0}, {'id': 52, 'answer': '24 - 12 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 46, 'ancestor_value': 11.0}, {'id': 53, 'answer': '24 / 12 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 46, 'ancestor_value': 11.0}, {'id': 54, 'answer': '24 * 12 = 288 ( left: 288 )', 'value': 'impossible', 'parent_node': 46, 'ancestor_value': 11.0}, {'id': 55, 'answer': '12 - 24 = -12 ( left: -12 )', 'value': 'impossible', 'parent_node': 46, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 51, 'answer': '24 + 12 = 36 ( left: 36 )', 'value': 'impossible', 'parent_node': 46, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 52, 'answer': '24 - 12 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 46, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 53, 'answer': '24 / 12 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 46, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 54, 'answer': '24 * 12 = 288 ( left: 288 )', 'value': 'impossible', 'parent_node': 46, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 55, 'answer': '12 - 24 = -12 ( left: -12 )', 'value': 'impossible', 'parent_node': 46, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 47, 'answer': '27 + 3 = 30 ( left: 30 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 48, 'answer': '27 * 3 = 81 ( left: 81 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 49, 'answer': '3 / 2 = 1.5 ( left: 1.57 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 50, 'answer': '12 - 3 = 9 ( left: 27 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 5, 'answer': '9 + 3 = 12 ( left: 12 3 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
12 + 3 = 15
12 / 3 = 4
3 + 12 = 15
12 - 3 = 9
3 * 12 = 36


Generated answers:
['12 + 3 = 15 ( left: 15 12 )', '12 / 3 = 4 ( left: 4 12 )', '3 + 12 = 15 ( left: 15 12 )', '12 - 3 = 9 ( left: 9 12 )', '3 * 12 = 36 ( left: 36 12 )']


Analysis:
15 + 12 = 27
15 - 12 = 3
15 * 12 = 180
15 / 12 = 1.25
Output: impossible (15 12)


Analysis:
4 + 12 = 16
4 * 12 = 48
Output: impossible (4 12)


Analysis:
15 + 12 = 27
15 - 12 = 3
15 * 12 = 180
15 / 12 = 1.25
Output: impossible (15 12)


Analysis:
9 + 12 = 21
9 * 12 = 108
Output: impossible (9 12)


Analysis:
36 + 12 = 48
36 - 12 = 24
36 * 12 = 432
36 / 12 = 3
Output: impossible (36 12)


node:
[{'id': 56, 'answer': '12 + 3 = 15 ( left: 15 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 57, 'answer': '12 / 3 = 4 ( left: 4 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 58, 'answer': '3 + 12 = 15 ( left: 15 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 59, 'answer': '12 - 3 = 9 ( left: 9 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 60, 'answer': '3 * 12 = 36 ( left: 36 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 56, 'answer': '12 + 3 = 15 ( left: 15 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 57, 'answer': '12 / 3 = 4 ( left: 4 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 58, 'answer': '3 + 12 = 15 ( left: 15 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 59, 'answer': '12 - 3 = 9 ( left: 9 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 60, 'answer': '3 * 12 = 36 ( left: 36 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


all_nodes:
{'id': 0, 'answer': '3 3 9 12', 'value': None, 'parent_node': None, 'ancestor_value': None}
{'id': 1, 'answer': '3 + 3 = 6 ( left: 6 9 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 2, 'answer': '12 - 3 = 9 ( left: 9 3 9 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 3, 'answer': '9 * 3 = 27 ( left: 27 3 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 4, 'answer': '3 / 3 = 1 ( left: 1 9 12 )', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 5, 'answer': '9 + 3 = 12 ( left: 12 3 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 6, 'answer': '1 + 9 = 10 ( left: 10 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 10.0}
{'id': 7, 'answer': '12 - 9 = 3 ( left: 1 3 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 10.0}
{'id': 8, 'answer': '12 + 1 = 13 ( left: 13 9 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 10.0}
{'id': 9, 'answer': '9 * 1 = 9 ( left: 9 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 10.0}
{'id': 10, 'answer': '1 - 9 = -8 ( left: -8 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 10.0}
{'id': 11, 'answer': '10 + 12 = 22 ( left: 22 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}
{'id': 12, 'answer': '10 - 12 = -2 ( left: -2 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}
{'id': 13, 'answer': '10 * 12 = 120 ( left: 120 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}
{'id': 14, 'answer': '12 / 2 = 6 ( left: 10 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}
{'id': 15, 'answer': '12 - 10 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}
{'id': 16, 'answer': '1 + 3 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}
{'id': 17, 'answer': '3 - 1 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}
{'id': 18, 'answer': '1 * 3 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}
{'id': 19, 'answer': '3 / 1 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}
{'id': 20, 'answer': '1 / 3 = 0.3333333333333333... ( left: 0.3333333333333333... )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}
{'id': 21, 'answer': '13 - 9 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}
{'id': 22, 'answer': '13 + 9 = 22 ( left: 22 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}
{'id': 23, 'answer': '13 * 9 = 117 ( left: 117 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}
{'id': 24, 'answer': '9 / 2 = 4.5 ( left: 13 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}
{'id': 25, 'answer': '9 - 13 = -4 ( left: -4 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 11.0}
{'id': 26, 'answer': '9 + 12 = 21 ( left: 21 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}
{'id': 27, 'answer': '12 - 9 = 3 ( left: 3 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}
{'id': 28, 'answer': '12 * 9 = 108 ( left: 108 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}
{'id': 29, 'answer': '9 / 12 = 0.75 ( left: 0.75 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 11.0}
{'id': 30, 'answerleftvalue': None, 'parent_node': 9, 'ancestor_value': 11.0}
{'id': 31, 'answer': '-8 + 12 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 32, 'answer': '12 - 8 = 4 ( left: -4 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 33, 'answer': '12 / -8 = -1.5 ( left: -1.5 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 34, 'answer': '12 * -8 = -96 ( left: -96 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 35, 'answer': '12 + 8 = 20 ( left: -20 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 36, 'answer': '6 + 9 = 15 ( left: 15 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 37, 'answer': '9 - 6 = 3 ( left: 3 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 38, 'answer': '12 * 6 = 72 ( left: 72 9 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 39, 'answer': '6 / 9 = 0.6667 ( left: 0.6667 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 40, 'answer': '12 - 6 = 6 ( left: 6 9 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 41, 'answer': '9 + 3 = 12 ( left: 12 9 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 42, 'answer': '9 - 3 = 6 ( left: 6 9 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 43, 'answer': '3 * 9 = 27 ( left: 27 9 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 44, 'answer': '9 / 3 = 3 ( left: 3 9 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 45, 'answer': '3 + 9 = 12 ( left: 12 9 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 46, 'answer': '27 - 3 = 24 ( left: 24 12 )', 'value': 'sure', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 47, 'answer': '27 + 3 = 30 ( left: 30 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 48, 'answer': '27 * 3 = 81 ( left: 81 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 49, 'answer': '3 / 2 = 1.5 ( left: 1.57 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 50, 'answer': '12 - 3 = 9 ( left: 27 9 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 51, 'answer': '24 + 12 = 36 ( left: 36 )', 'value': 'impossible', 'parent_node': 46, 'ancestor_value': 11.0}
{'id': 52, 'answer': '24 - 12 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 46, 'ancestor_value': 11.0}
{'id': 53, 'answer': '24 / 12 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 46, 'ancestor_value': 11.0}
{'id': 54, 'answer': '24 * 12 = 288 ( left: 288 )', 'value': 'impossible', 'parent_node': 46, 'ancestor_value': 11.0}
{'id': 55, 'answer': '12 - 24 = -12 ( left: -12 )', 'value': 'impossible', 'parent_node': 46, 'ancestor_value': 11.0}
{'id': 56, 'answer': '12 + 3 = 15 ( left: 15 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 57, 'answer': '12 / 3 = 4 ( left: 4 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 58, 'answer': '3 + 12 = 15 ( left: 15 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 59, 'answer': '12 - 3 = 9 ( left: 9 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 60, 'answer': '3 * 12 = 36 ( left: 36 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


linked list:
000 -> 4 -> 1 -> 2 -> 3 -> 5

001 -> 36 -> 37 -> 38 -> 39 -> 40

002 -> 41 -> 42 -> 43 -> 44 -> 45

003 -> 46 -> 47 -> 48 -> 49 -> 50

004 -> 6 -> 7 -> 8 -> 9 -> 10

005 -> 56 -> 57 -> 58 -> 59 -> 60

006 -> 11 -> 12 -> 13 -> 14 -> 15

007 -> 16 -> 17 -> 18 -> 19 -> 20

008 -> 21 -> 22 -> 23 -> 24 -> 25

009 -> 26 -> 27 -> 28 -> 29 -> 30

010 -> 31 -> 32 -> 33 -> 34 -> 35

011

012

013

014

015

016

017

018

019

020

021

022

023

024

025

026

027

028

029

030

031

032

033

034

035

036

037

038

039

040

041

042

043

044

045

046 -> 51 -> 52 -> 53 -> 54 -> 55

047

048

049

050

051

052

053

054

055

056

057

058

059

060

061

062

063

064

065

066

067

068

069

070

071

072

073

074

075

076

077

078

079

080

081

082

083

084

085

086

087

088

089

090

091

092

093

094

095

096

097

098

099

100

101

102

103

104

105

106

107

108

109

110

111

112

113

114

115

116

117

118

119

120

121

122

123

124

125

126

127

128

129

130

131

132

133

134

135

136

137

138

139

140

141

142

143

144

145

146

147

148

149

150

151

152

153

154

155


best node: {'id': 11, 'answer': '10 + 12 = 22 ( left: 22 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}

best node: {'id': 6, 'answer': '1 + 9 = 10 ( left: 10 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 10.0}

best node: {'id': 4, 'answer': '3 / 3 = 1 ( left: 1 9 12 )', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}

best node: {'id': 0, 'answer': '3 3 9 12', 'value': None, 'parent_node': None, 'ancestor_value': None}

path: ['10 + 12 = 22 ( left: 22 )', '1 + 9 = 10 ( left: 10 12 )', '3 / 3 = 1 ( left: 1 9 12 )', '( left: 3 3 9 12 )']


['10 + 12 = 22 ( left: 22 )', '1 + 9 = 10 ( left: 10 12 )', '3 / 3 = 1 ( left: 1 9 12 )', '( left: 3 3 9 12 )']
 ( ( ( 3 / 3 ) + 9 ) + 12 ) 


Answer: 
 ( ( ( 3 / 3 ) + 9 ) + 12 ) 

