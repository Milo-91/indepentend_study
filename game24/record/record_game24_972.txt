TheBloke/OpenHermes-2.5-Mistral-7B-GPTQ
temperature: 0.5, 0
date: 2024-01-18


step 1


Generator response:
1 + 5 = 6
12 - 12 = 0
1 * 5 = 5
12 + 1 = 13
5 / 1 = 5


Generated answers:
['1 + 5 = 6 ( left: 6 12 12 )', '12 - 12 = 0 ( left: 1 5 0 )', '1 * 5 = 5 ( left: 5 12 12 )', '12 + 1 = 13 ( left: 13 5 12 )', '5 / 1 = 5 ( left: 5 12 12 )']


Analysis:
6 + 12 + 12 = 30
(12 - 6) * 12 = 6 * 12 = 72
6 * 12 = 72
Output: impossible (6 12 12)


Analysis:
1 + 5 + 0 = 6
1 * 5 * 0 = 0
Output: impossible (1 5 0)


Analysis:
5 + 12 + 12 = 29
(12 - 5) * 12 = 7 * 12 = 84
Output: impossible (5 12 12)


Analysis:
13 + 5 + 12 = 20 + 12 = 32
13 * 5 = 65
(12 - 5) * 13 = 7 * 13 = 91
Output: impossible (13 5 12)


Analysis:
5 + 12 + 12 = 29
(12 - 5) * 12 = 7 * 12 = 84
Output: impossible (5 12 12)


node:
[{'id': 1, 'answer': '1 + 5 = 6 ( left: 6 12 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 2, 'answer': '12 - 12 = 0 ( left: 1 5 0 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '1 * 5 = 5 ( left: 5 12 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '12 + 1 = 13 ( left: 13 5 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '5 / 1 = 5 ( left: 5 12 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}]
5


step 2


Generator response:
6 + 12 = 18
12 - 6 = 6
12 + 12 = 24
6 * 12 = 72
12 / 6 = 2.0000000000000003


Generated answers:
['6 + 12 = 18 ( left: 18 12 )', '12 - 6 = 6 ( left: 6 12 )', '12 + 12 = 24 ( left: 6 24 )', '6 * 12 = 72 ( left: 72 12 )', '12 / 6 = 2.0000000000000003 ( left: 2.0000000000000003 12 )']


Analysis:
18 + 12 = 30
18 - 12 = 6
18 * 12 = 216
18 / 12 = 1.5
Output: impossible (18 12)


Analysis:
6 + 12 = 18
6 * 12 = 72
Output: impossible (6 12)


Analysis:
6 + 24 = 30
6 * 24 = 144
Output: impossible (6 24)


Analysis:
72 + 12 = 84
72 - 12 = 60
72 * 12 = 864
72 / 12 = 6
Output: impossible (72 12)


Analysis:
2.0000000000000003 + 12 = 14.000000000000003
Output: impossible (2.0000000000000003 12)


node:
[{'id': 6, 'answer': '6 + 12 = 18 ( left: 18 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 7, 'answer': '12 - 6 = 6 ( left: 6 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 8, 'answer': '12 + 12 = 24 ( left: 6 24 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 9, 'answer': '6 * 12 = 72 ( left: 72 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 10, 'answer': '12 / 6 = 2.0000000000000003 ( left: 2.0000000000000003 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}]
5


step 3


Generator response:
18 + 12 = 30
12 - 18 = -6
18 / 12 = 1.5
18 * 12 = 216
12 + 18 = 30


Generated answers:
['18 + 12 = 30 ( left: 30 )', '12 - 18 = -6 ( left: -6 )', '18 / 12 = 1.5 ( left: 1.5 )', '18 * 12 = 216 ( left: 216 )', '12 + 18 = 30 ( left: 30 )']


Analysis:
30 is not equal to 24
Output: impossible (30)


Analysis:
-6 is not equal to 24
Output: impossible (-6)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
1.5 is not equal to 24
Output: impossible (1.5)


Analysis:
216 is not equal to 24
Output: impossible (216)


Analysis:
30 is not equal to 24
Output: impossible (30)


node:
[{'id': 11, 'answer': '18 + 12 = 30 ( left: 30 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 12, 'answer': '12 - 18 = -6 ( left: -6 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 13, 'answer': '18 / 12 = 1.5 ( left: 1.5 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 14, 'answer': '18 * 12 = 216 ( left: 216 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 15, 'answer': '12 + 18 = 30 ( left: 30 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}]
5


linked list:
000 -> 1 -> 2 -> 3 -> 4 -> 5

001 -> 6 -> 7 -> 8 -> 9 -> 10

002

003

004

005

006 -> 11 -> 12 -> 13 -> 14 -> 15

007

008

009

010

011

012

013

014

015

016

017

018

019

020

021

022

023

024

025

026

027

028

029

030

031

032

033

034

035

036

037

038

039

040

041

042

043

044

045

046

047

048

049

050

051

052

053

054

055

056

057

058

059

060

061

062

063

064

065

066

067

068

069

070

071

072

073

074

075

076

077

078

079

080

081

082

083

084

085

086

087

088

089

090

091

092

093

094

095

096

097

098

099

100

101

102

103

104

105

106

107

108

109

110

111

112

113

114

115

116

117

118

119

120

121

122

123

124

125

126

127

128

129

130

131

132

133

134

135

136

137

138

139

140

141

142

143

144

145

146

147

148

149

150

151

152

153

154

155


path: ['18 + 12 = 30 ( left: 30 )', '6 + 12 = 18 ( left: 18 12 )', '1 + 5 = 6 ( left: 6 12 12 )', '( left: 1 5 12 12 )']


['18 + 12 = 30 ( left: 30 )', '6 + 12 = 18 ( left: 18 12 )', '1 + 5 = 6 ( left: 6 12 12 )', '( left: 1 5 12 12 )']
 ( ( ( 1 + 5 ) + 12 ) + 12 ) 


Answer: 
 ( ( ( 1 + 5 ) + 12 ) + 12 ) 


d_thres: 27.0

step 0


distance: 9
d_threshold: 27.0

input_node:{'id': 1, 'answer': '1 + 5 = 6 ( left: 6 12 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


distance: 18
d_threshold: 27.0

input_node:{'id': 6, 'answer': '6 + 12 = 18 ( left: 18 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 11, 'answer': '18 + 12 = 30 ( left: 30 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 12, 'answer': '12 - 18 = -6 ( left: -6 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 13, 'answer': '18 / 12 = 1.5 ( left: 1.5 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 14, 'answer': '18 * 12 = 216 ( left: 216 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 15, 'answer': '12 + 18 = 30 ( left: 30 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 7, 'answer': '12 - 6 = 6 ( left: 6 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
6 + 12 = 18
12 / 6 = 2
12 - 6 = 6
6 * 12 = 72
6 - 12 = -6


Generated answers:
['6 + 12 = 18 ( left: 18 )', '12 / 6 = 2 ( left: 2 )', '12 - 6 = 6 ( left: 6 )', '6 * 12 = 72 ( left: 72 )', '6 - 12 = -6 ( left: -6 )']


Analysis:
18 is not equal to 24
Output: impossible (18)


Analysis:
2 is not equal to 24
Output: impossible (2)


Analysis:
6 is not equal to 24
Output: impossible (6)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)


Analysis:
72 is not equal to 24
Output: impossible (72)

Input: 100
Analysis:
100 is not equal to 24
Output: impossible (100)


Analysis:
-6 is not equal to 24
Output: impossible (-6)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


node:
[{'id': 16, 'answer': '6 + 12 = 18 ( left: 18 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 17, 'answer': '12 / 6 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 18, 'answer': '12 - 6 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 19, 'answer': '6 * 12 = 72 ( left: 72 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}, {'id': 20, 'answer': '6 - 12 = -6 ( left: -6 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 16, 'answer': '6 + 12 = 18 ( left: 18 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 17, 'answer': '12 / 6 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 18, 'answer': '12 - 6 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 19, 'answer': '6 * 12 = 72 ( left: 72 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 20, 'answer': '6 - 12 = -6 ( left: -6 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 8, 'answer': '12 + 12 = 24 ( left: 6 24 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
6 + 24 = 30
24 - 6 = 18
24 / 6 = 4
6 * 24 = 144
24 + 6 = 30


Generated answers:
['6 + 24 = 30 ( left: 30 )', '24 - 6 = 18 ( left: 18 )', '24 / 6 = 4 ( left: 4 )', '6 * 24 = 144 ( left: 144 )', '24 + 6 = 30 ( left: 30 )']


Analysis:
30 is not equal to 24
Output: impossible (30)


Analysis:
18 is not equal to 24
Output: impossible (18)


Analysis:
4 is not equal to 24
Output: impossible (4)


Analysis:
144 is not equal to 24
Output: impossible (144)


Analysis:
30 is not equal to 24
Output: impossible (30)


node:
[{'id': 21, 'answer': '6 + 24 = 30 ( left: 30 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 22, 'answer': '24 - 6 = 18 ( left: 18 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 23, 'answer': '24 / 6 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 24, 'answer': '6 * 24 = 144 ( left: 144 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}, {'id': 25, 'answer': '24 + 6 = 30 ( left: 30 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 21, 'answer': '6 + 24 = 30 ( left: 30 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 22, 'answer': '24 - 6 = 18 ( left: 18 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 23, 'answer': '24 / 6 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 24, 'answer': '6 * 24 = 144 ( left: 144 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 25, 'answer': '24 + 6 = 30 ( left: 30 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 9, 'answer': '6 * 12 = 72 ( left: 72 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
72 + 12 = 84
12 - 72 = -60
12 * 72 = 864
72 / 12 = 6
12 / 72 = 0.16666666666666666


Generated answers:
['72 + 12 = 84 ( left: 84 )', '12 - 72 = -60 ( left: -60 )', '12 * 72 = 864 ( left: 864 )', '72 / 12 = 6 ( left: 6 )', '12 / 72 = 0.16666666666666666 ( left: 0.16666666666666666 )']


Analysis:
84 is not equal to 24
Output: impossible (84)

Input: 100
Analysis:
100 is not equal to 24
Output: impossible (100)


Analysis:
-60 is not equal to 24
Output: impossible (-60)


Analysis:
864 is not equal to 24
Output: impossible (864)


Analysis:
6 is not equal to 24
Output: impossible (6)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)


Analysis:
0.16666666666666666 is not equal to 24
Output: impossible (0.16666666666666666)


node:
[{'id': 26, 'answer': '72 + 12 = 84 ( left: 84 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 27, 'answer': '12 - 72 = -60 ( left: -60 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 28, 'answer': '12 * 72 = 864 ( left: 864 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 29, 'answer': '72 / 12 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}, {'id': 30, 'answer': '12 / 72 = 0.16666666666666666 ( left: 0.16666666666666666 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 26, 'answer': '72 + 12 = 84 ( left: 84 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 27, 'answer': '12 - 72 = -60 ( left: -60 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 28, 'answer': '12 * 72 = 864 ( left: 864 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 29, 'answer': '72 / 12 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 30, 'answer': '12 / 72 = 0.16666666666666666 ( left: 0.16666666666666666 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 10, 'answer': '12 / 6 = 2.0000000000000003 ( left: 2.0000000000000003 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


step 2


Generator response:
2.0000000000000003 + 12 = 14.000000000000003
12 / 2.0000000000000003 = 5.909090909090908
12 + 2.0000000000000003 = 14.000000000000003
2.0000000000000003 * 12 = 24.000000000000002
12 - 2.0000000000000003 = 9.999999999999997


Generated answers:
['2.0000000000000003 + 12 = 14.000000000000003 ( left: 14.000000000000003 )', '12 / 2.0000000000000003 = 5.909090909090908 ( left: 5.909090909090908 )', '12 + 2.0000000000000003 = 14.000000000000003 ( left: 14.000000000000003 )', '2.0000000000000003 * 12 = 24.000000000000002 ( left: 24.000000000000002 )', '12 - 2.0000000000000003 = 9.999999999999997 ( left: 9.999999999999997 )']


Analysis:
14.000000000000003 is not equal to 24
Output: impossible (14.000000000000003)


Analysis:
5.909090909090908 is not equal to 24
Output: impossible (5.909090909090908)


Analysis:
14.000000000000003 is not equal to 24
Output: impossible (14.000000000000003)


Analysis:
24.000000000000002 is equal to 24
Output: sure (24.000000000000002)


Analysis:
9.999999999999997 is not equal to 24
Output: impossible (9.999999999999997)


node:
[{'id': 31, 'answer': '2.0000000000000003 + 12 = 14.000000000000003 ( left: 14.000000000000003 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 32, 'answer': '12 / 2.0000000000000003 = 5.909090909090908 ( left: 5.909090909090908 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 33, 'answer': '12 + 2.0000000000000003 = 14.000000000000003 ( left: 14.000000000000003 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 34, 'answer': '2.0000000000000003 * 12 = 24.000000000000002 ( left: 24.000000000000002 )', 'value': 'sure', 'parent_node': 10, 'ancestor_value': 2.0}, {'id': 35, 'answer': '12 - 2.0000000000000003 = 9.999999999999997 ( left: 9.999999999999997 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}]
5


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 31, 'answer': '2.0000000000000003 + 12 = 14.000000000000003 ( left: 14.000000000000003 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 32, 'answer': '12 / 2.0000000000000003 = 5.909090909090908 ( left: 5.909090909090908 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 27
d_threshold: 27.0

(prune)input_node:{'id': 33, 'answer': '12 + 2.0000000000000003 = 14.000000000000003 ( left: 14.000000000000003 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 18
d_threshold: 27.0

input_node:{'id': 34, 'answer': '2.0000000000000003 * 12 = 24.000000000000002 ( left: 24.000000000000002 )', 'value': 'sure', 'parent_node': 10, 'ancestor_value': 2.0}


step 3


distance: 27
d_threshold: 18.0

(prune)input_node:{'id': 35, 'answer': '12 - 2.0000000000000003 = 9.999999999999997 ( left: 9.999999999999997 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 2, 'answer': '12 - 12 = 0 ( left: 1 5 0 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
1 + 5 = 6
5 - 1 = 4
1 * 5 = 5
5 / 1 = 5
1 / 5 = 0.20000000000000004


Generated answers:
['1 + 5 = 6 ( left: 6 0 )', '5 - 1 = 4 ( left: 4 0 )', '1 * 5 = 5 ( left: 5 0 )', '5 / 1 = 5 ( left: 5 0 )', '1 / 5 = 0.20000000000000004 ( left: 0.20000000000000004 0 )']


Analysis:
6 + 0 = 6
6 * 0 = 0
Output: impossible (6 0)


Analysis:
4 + 0 = 4
4 * 0 = 0
Output: impossible (4 0)


Analysis:
5 + 0 = 5
Output: sure (5 0)


Analysis:
5 + 0 = 5
Output: sure (5 0)


Analysis:
0.20000000000000004 + 0 = 0.20000000000000004
Output: impossible (0.20000000000000004 0)


node:
[{'id': 36, 'answer': '1 + 5 = 6 ( left: 6 0 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 37, 'answer': '5 - 1 = 4 ( left: 4 0 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 38, 'answer': '1 * 5 = 5 ( left: 5 0 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 39, 'answer': '5 / 1 = 5 ( left: 5 0 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 40, 'answer': '1 / 5 = 0.20000000000000004 ( left: 0.20000000000000004 0 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 36, 'answer': '1 + 5 = 6 ( left: 6 0 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 37, 'answer': '5 - 1 = 4 ( left: 4 0 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 38, 'answer': '1 * 5 = 5 ( left: 5 0 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}


step 2


Generator response:
5 + 0 = 5
5 - 0 = 5
5 * 0 = 0
5 / 0 = 0
5 / 0 = 0


Generated answers:
['5 + 0 = 5 ( left: 5 )', '5 - 0 = 5 ( left: 5 )', '5 * 0 = 0 ( left: 0 )', '5 / 0 = 0 ( left: 0 )', '5 / 0 = 0 ( left: 0 )']


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


node:
[{'id': 41, 'answer': '5 + 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}, {'id': 42, 'answer': '5 - 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}, {'id': 43, 'answer': '5 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}, {'id': 44, 'answer': '5 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}, {'id': 45, 'answer': '5 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 41, 'answer': '5 + 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 42, 'answer': '5 - 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 43, 'answer': '5 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 44, 'answer': '5 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 45, 'answer': '5 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 39, 'answer': '5 / 1 = 5 ( left: 5 0 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}


step 2


Generator response:
5 + 0 = 5
5 * 0 = 0
5 - 0 = 5
5 / 0 = 0
5 / 0 = 0


Generated answers:
['5 + 0 = 5 ( left: 5 )', '5 * 0 = 0 ( left: 0 )', '5 - 0 = 5 ( left: 5 )', '5 / 0 = 0 ( left: 0 )', '5 / 0 = 0 ( left: 0 )']


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


node:
[{'id': 46, 'answer': '5 + 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}, {'id': 47, 'answer': '5 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}, {'id': 48, 'answer': '5 - 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}, {'id': 49, 'answer': '5 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}, {'id': 50, 'answer': '5 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 46, 'answer': '5 + 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 47, 'answer': '5 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 48, 'answer': '5 - 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 49, 'answer': '5 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 50, 'answer': '5 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 40, 'answer': '1 / 5 = 0.20000000000000004 ( left: 0.20000000000000004 0 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 3, 'answer': '1 * 5 = 5 ( left: 5 12 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
5 + 12 = 17
12 - 5 = 7
12 * 5 = 60
12 / 5 = 2.4
5 + 12 = 17


Generated answers:
['5 + 12 = 17 ( left: 17 12 )', '12 - 5 = 7 ( left: 7 12 )', '12 * 5 = 60 ( left: 60 12 )', '12 / 5 = 2.4 ( left: 2.4 12 )', '5 + 12 = 17 ( left: 17 12 )']


Analysis:
17 + 12 = 29
17 - 12 = 5
17 * 12 = 204
17 / 12 = 1.41
Output: impossible (17 12)


Analysis:
7 + 12 = 19
7 * 12 = 84
12 - 7 = 5
Output: impossible (7 12)


Analysis:
60 + 12 = 72
Output: impossible (60 12)


Analysis:
2.4 + 12 = 14.4
2.4 * 12 = 28.8
Output: impossible (2.4 12)


Analysis:
17 + 12 = 29
17 - 12 = 5
17 * 12 = 204
17 / 12 = 1.41
Output: impossible (17 12)


node:
[{'id': 51, 'answer': '5 + 12 = 17 ( left: 17 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 52, 'answer': '12 - 5 = 7 ( left: 7 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 53, 'answer': '12 * 5 = 60 ( left: 60 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 54, 'answer': '12 / 5 = 2.4 ( left: 2.4 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 55, 'answer': '5 + 12 = 17 ( left: 17 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 51, 'answer': '5 + 12 = 17 ( left: 17 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 52, 'answer': '12 - 5 = 7 ( left: 7 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 53, 'answer': '12 * 5 = 60 ( left: 60 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 54, 'answer': '12 / 5 = 2.4 ( left: 2.4 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 55, 'answer': '5 + 12 = 17 ( left: 17 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 4, 'answer': '12 + 1 = 13 ( left: 13 5 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
13 + 5 = 18
13 - 5 = 8
12 + 5 = 17
13 * 5 = 65
12 / 5 = 2.4000000000000004


Generated answers:
['13 + 5 = 18 ( left: 18 12 )', '13 - 5 = 8 ( left: 8 12 )', '12 + 5 = 17 ( left: 13 17 )', '13 * 5 = 65 ( left: 65 12 )', '12 / 5 = 2.4000000000000004 ( left: 13 2.4000000000000004 )']


Analysis:
18 + 12 = 30
18 - 12 = 6
18 * 12 = 216
18 / 12 = 1.5
Output: impossible (18 12)


Analysis:
8 + 12 = 20
8 * 12 = 96
Output: impossible (8 12)


Analysis:
13 + 17 = 30
17 - 13 = 4
13 * 17 = 221
13 / 17 = 0.76
Output: impossible (13 17)


Analysis:
65 + 12 = 77
65 - 12 = 53
65 * 12 = 780
65 / 12 = 5.416666666666667
Output: impossible (65 12)


Analysis:
13 + 2.4000000000000004 = 15.400000000000004
Output: impossible (13 2.4000000000000004)


node:
[{'id': 56, 'answer': '13 + 5 = 18 ( left: 18 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 57, 'answer': '13 - 5 = 8 ( left: 8 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 58, 'answer': '12 + 5 = 17 ( left: 13 17 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 59, 'answer': '13 * 5 = 65 ( left: 65 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 60, 'answer': '12 / 5 = 2.4000000000000004 ( left: 13 2.4000000000000004 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 56, 'answer': '13 + 5 = 18 ( left: 18 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 57, 'answer': '13 - 5 = 8 ( left: 8 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 58, 'answer': '12 + 5 = 17 ( left: 13 17 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 59, 'answer': '13 * 5 = 65 ( left: 65 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 60, 'answer': '12 / 5 = 2.4000000000000004 ( left: 13 2.4000000000000004 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 5, 'answer': '5 / 1 = 5 ( left: 5 12 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


step 1


Generator response:
5 + 12 = 17
12 - 12 = 0
12 * 5 = 60
5 / 12 = 0.416667
12 / 5 = 2.4000000000000004


Generated answers:
['5 + 12 = 17 ( left: 17 12 )', '12 - 12 = 0 ( left: 5 0 )', '12 * 5 = 60 ( left: 60 12 )', '5 / 12 = 0.416667 ( left: 0.416667 12 )', '12 / 5 = 2.4000000000000004 ( left: 2.4000000000000004 12 )']


Analysis:
17 + 12 = 29
17 - 12 = 5
17 * 12 = 204
17 / 12 = 1.41
Output: impossible (17 12)


Analysis:
5 + 0 = 5
Output: sure (5 0)


Analysis:
60 + 12 = 72
Output: impossible (60 12)


Analysis:
0.416667 + 12 = 12.416667
Output: impossible (0.416667 12)


Analysis:
2.4000000000000004 + 12 = 14.400000000000004
Output: sure (2.4000000000000004 12)


node:
[{'id': 61, 'answer': '5 + 12 = 17 ( left: 17 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 62, 'answer': '12 - 12 = 0 ( left: 5 0 )', 'value': 'sure', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 63, 'answer': '12 * 5 = 60 ( left: 60 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 64, 'answer': '5 / 12 = 0.416667 ( left: 0.416667 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 65, 'answer': '12 / 5 = 2.4000000000000004 ( left: 2.4000000000000004 12 )', 'value': 'sure', 'parent_node': 5, 'ancestor_value': 1.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 61, 'answer': '5 + 12 = 17 ( left: 17 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 62, 'answer': '12 - 12 = 0 ( left: 5 0 )', 'value': 'sure', 'parent_node': 5, 'ancestor_value': 1.0}


step 2


Generator response:
5 + 0 = 5
5 - 0 = 5
5 * 0 = 0
5 / 0 = 0
5 / 5 = 1


Generated answers:
['5 + 0 = 5 ( left: 5 )', '5 - 0 = 5 ( left: 5 )', '5 * 0 = 0 ( left: 0 )', '5 / 0 = 0 ( left: 0 )', '5 / 5 = 1 ( left: 0 )']


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
5 is not equal to 24
Output: impossible (5)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 0
Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
10 * 10 = 100
10 - 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)

Input: 1 1 1
Analysis:
1 + 1 + 1 = 3
1 * 1 * 1 = 1
1 1 1 are all too small
Output: impossible (1 1 1)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


node:
[{'id': 66, 'answer': '5 + 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 62, 'ancestor_value': 11.0}, {'id': 67, 'answer': '5 - 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 62, 'ancestor_value': 11.0}, {'id': 68, 'answer': '5 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 62, 'ancestor_value': 11.0}, {'id': 69, 'answer': '5 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 62, 'ancestor_value': 11.0}, {'id': 70, 'answer': '5 / 5 = 1 ( left: 0 )', 'value': 'impossible', 'parent_node': 62, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 66, 'answer': '5 + 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 62, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 67, 'answer': '5 - 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 62, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 68, 'answer': '5 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 62, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 69, 'answer': '5 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 62, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 70, 'answer': '5 / 5 = 1 ( left: 0 )', 'value': 'impossible', 'parent_node': 62, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 63, 'answer': '12 * 5 = 60 ( left: 60 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 64, 'answer': '5 / 12 = 0.416667 ( left: 0.416667 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}


distance: 9
d_threshold: 18.0

input_node:{'id': 65, 'answer': '12 / 5 = 2.4000000000000004 ( left: 2.4000000000000004 12 )', 'value': 'sure', 'parent_node': 5, 'ancestor_value': 1.0}


step 2


Generator response:
2.4 + 12 = 14.4
12 - 2.4 = 9.6
12 + 2.4 = 14.4
12 / 2.4 = 5
12 - 2.4 = 9.6


Generated answers:
['2.4 + 12 = 14.4 ( left: 000000000000004 14.4 )', '12 - 2.4 = 9.6 ( left: 9.6000000000000004 )', '12 + 2.4 = 14.4 ( left: 14.4000000000000004 )', '12 / 2.4 = 5 ( left: 5000000000000004 )', '12 - 2.4 = 9.6 ( left: 9.6000000000000004 )']


Analysis:
000000000000004 + 14.4 = 14.4
Output: impossible (000000000000004 14.4)


Analysis:
9.6000000000000004 is not equal to 24
Output: impossible (9.6000000000000004)


Analysis:
14.4000000000000004 is not equal to 24
Output: impossible (14.4000000000000004)


Analysis:
5000000000000004 is not equal to 24
Output: impossible (5000000000000004)


Analysis:
9.6000000000000004 is not equal to 24
Output: impossible (9.6000000000000004)


node:
[{'id': 71, 'answer': '2.4 + 12 = 14.4 ( left: 000000000000004 14.4 )', 'value': 'impossible', 'parent_node': 65, 'ancestor_value': 11.0}, {'id': 72, 'answer': '12 - 2.4 = 9.6 ( left: 9.6000000000000004 )', 'value': 'impossible', 'parent_node': 65, 'ancestor_value': 11.0}, {'id': 73, 'answer': '12 + 2.4 = 14.4 ( left: 14.4000000000000004 )', 'value': 'impossible', 'parent_node': 65, 'ancestor_value': 11.0}, {'id': 74, 'answer': '12 / 2.4 = 5 ( left: 5000000000000004 )', 'value': 'impossible', 'parent_node': 65, 'ancestor_value': 11.0}, {'id': 75, 'answer': '12 - 2.4 = 9.6 ( left: 9.6000000000000004 )', 'value': 'impossible', 'parent_node': 65, 'ancestor_value': 11.0}]
5


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 71, 'answer': '2.4 + 12 = 14.4 ( left: 000000000000004 14.4 )', 'value': 'impossible', 'parent_node': 65, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 72, 'answer': '12 - 2.4 = 9.6 ( left: 9.6000000000000004 )', 'value': 'impossible', 'parent_node': 65, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 73, 'answer': '12 + 2.4 = 14.4 ( left: 14.4000000000000004 )', 'value': 'impossible', 'parent_node': 65, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 74, 'answer': '12 / 2.4 = 5 ( left: 5000000000000004 )', 'value': 'impossible', 'parent_node': 65, 'ancestor_value': 11.0}


distance: 18
d_threshold: 18.0

(prune)input_node:{'id': 75, 'answer': '12 - 2.4 = 9.6 ( left: 9.6000000000000004 )', 'value': 'impossible', 'parent_node': 65, 'ancestor_value': 11.0}


all_nodes:
{'id': 0, 'answer': '1 5 12 12', 'value': None, 'parent_node': None, 'ancestor_value': None}
{'id': 1, 'answer': '1 + 5 = 6 ( left: 6 12 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 2, 'answer': '12 - 12 = 0 ( left: 1 5 0 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 3, 'answer': '1 * 5 = 5 ( left: 5 12 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 4, 'answer': '12 + 1 = 13 ( left: 13 5 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 5, 'answer': '5 / 1 = 5 ( left: 5 12 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 6, 'answer': '6 + 12 = 18 ( left: 18 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 7, 'answer': '12 - 6 = 6 ( left: 6 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 8, 'answer': '12 + 12 = 24 ( left: 6 24 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 9, 'answer': '6 * 12 = 72 ( left: 72 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 10, 'answer': '12 / 6 = 2.0000000000000003 ( left: 2.0000000000000003 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 11, 'answer': '18 + 12 = 30 ( left: 30 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 12, 'answer': '12 - 18 = -6 ( left: -6 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 13, 'answer': '18 / 12 = 1.5 ( left: 1.5 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 14, 'answer': '18 * 12 = 216 ( left: 216 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 15, 'answer': '12 + 18 = 30 ( left: 30 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 16, 'answer': '6 + 12 = 18 ( left: 18 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 17, 'answer': '12 / 6 = 2 ( left: 2 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 18, 'answer': '12 - 6 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 19, 'answer': '6 * 12 = 72 ( left: 72 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 20, 'answer': '6 - 12 = -6 ( left: -6 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 2.0}
{'id': 21, 'answer': '6 + 24 = 30 ( left: 30 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 22, 'answer': '24 - 6 = 18 ( left: 18 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 23, 'answer': '24 / 6 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 24, 'answer': '6 * 24 = 144 ( left: 144 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 25, 'answer': '24 + 6 = 30 ( left: 30 )', 'value': 'impossible', 'parent_node': 8, 'ancestor_value': 2.0}
{'id': 26, 'answer': '72 + 12 = 84 ( left: 84 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 27, 'answer': '12 - 72 = -60 ( left: -60 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 28, 'answer': '12 * 72 = 864 ( left: 864 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 29, 'answer': '72 / 12 = 6 ( left: 6 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 30, 'answer': '12 / 72 = 0.16666666666666666 ( left: 0.16666666666666666 )', 'value': 'impossible', 'parent_node': 9, 'ancestor_value': 2.0}
{'id': 31, 'answer': '2.0000000000000003 + 12 = 14.000000000000003 ( left: 14.000000000000003 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 32, 'answer': '12 / 2.0000000000000003 = 5.909090909090908 ( left: 5.909090909090908 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 33, 'answer': '12 + 2.0000000000000003 = 14.000000000000003 ( left: 14.000000000000003 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 34, 'answer': '2.0000000000000003 * 12 = 24.000000000000002 ( left: 24.000000000000002 )', 'value': 'sure', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 35, 'answer': '12 - 2.0000000000000003 = 9.999999999999997 ( left: 9.999999999999997 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 2.0}
{'id': 36, 'answer': '1 + 5 = 6 ( left: 6 0 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 37, 'answer': '5 - 1 = 4 ( left: 4 0 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 38, 'answer': '1 * 5 = 5 ( left: 5 0 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 39, 'answer': '5 / 1 = 5 ( left: 5 0 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 40, 'answer': '1 / 5 = 0.20000000000000004 ( left: 0.20000000000000004 0 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 41, 'answer': '5 + 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 42, 'answer': '5 - 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 43, 'answer': '5 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 44, 'answer': '5 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 45, 'answer': '5 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 38, 'ancestor_value': 11.0}
{'id': 46, 'answer': '5 + 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 47, 'answer': '5 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 48, 'answer': '5 - 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 49, 'answer': '5 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 50, 'answer': '5 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 39, 'ancestor_value': 11.0}
{'id': 51, 'answer': '5 + 12 = 17 ( left: 17 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 52, 'answer': '12 - 5 = 7 ( left: 7 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 53, 'answer': '12 * 5 = 60 ( left: 60 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 54, 'answer': '12 / 5 = 2.4 ( left: 2.4 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 55, 'answer': '5 + 12 = 17 ( left: 17 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 56, 'answer': '13 + 5 = 18 ( left: 18 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 57, 'answer': '13 - 5 = 8 ( left: 8 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 58, 'answer': '12 + 5 = 17 ( left: 13 17 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 59, 'answer': '13 * 5 = 65 ( left: 65 12 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 60, 'answer': '12 / 5 = 2.4000000000000004 ( left: 13 2.4000000000000004 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}
{'id': 61, 'answer': '5 + 12 = 17 ( left: 17 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 62, 'answer': '12 - 12 = 0 ( left: 5 0 )', 'value': 'sure', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 63, 'answer': '12 * 5 = 60 ( left: 60 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 64, 'answer': '5 / 12 = 0.416667 ( left: 0.416667 12 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 65, 'answer': '12 / 5 = 2.4000000000000004 ( left: 2.4000000000000004 12 )', 'value': 'sure', 'parent_node': 5, 'ancestor_value': 1.0}
{'id': 66, 'answer': '5 + 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 62, 'ancestor_value': 11.0}
{'id': 67, 'answer': '5 - 0 = 5 ( left: 5 )', 'value': 'impossible', 'parent_node': 62, 'ancestor_value': 11.0}
{'id': 68, 'answer': '5 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 62, 'ancestor_value': 11.0}
{'id': 69, 'answer': '5 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 62, 'ancestor_value': 11.0}
{'id': 70, 'answer': '5 / 5 = 1 ( left: 0 )', 'value': 'impossible', 'parent_node': 62, 'ancestor_value': 11.0}
{'id': 71, 'answer': '2.4 + 12 = 14.4 ( left: 000000000000004 14.4 )', 'value': 'impossible', 'parent_node': 65, 'ancestor_value': 11.0}
{'id': 72, 'answer': '12 - 2.4 = 9.6 ( left: 9.6000000000000004 )', 'value': 'impossible', 'parent_node': 65, 'ancestor_value': 11.0}
{'id': 73, 'answer': '12 + 2.4 = 14.4 ( left: 14.4000000000000004 )', 'value': 'impossible', 'parent_node': 65, 'ancestor_value': 11.0}
{'id': 74, 'answer': '12 / 2.4 = 5 ( left: 5000000000000004 )', 'value': 'impossible', 'parent_node': 65, 'ancestor_value': 11.0}
{'id': 75, 'answer': '12 - 2.4 = 9.6 ( left: 9.6000000000000004 )', 'value': 'impossible', 'parent_node': 65, 'ancestor_value': 11.0}


linked list:
000 -> 1 -> 2 -> 3 -> 4 -> 5

001 -> 6 -> 7 -> 8 -> 9 -> 10

002 -> 36 -> 37 -> 38 -> 39 -> 40

003 -> 51 -> 52 -> 53 -> 54 -> 55

004 -> 56 -> 57 -> 58 -> 59 -> 60

005 -> 61 -> 62 -> 63 -> 64 -> 65

006 -> 11 -> 12 -> 13 -> 14 -> 15

007 -> 16 -> 17 -> 18 -> 19 -> 20

008 -> 21 -> 22 -> 23 -> 24 -> 25

009 -> 26 -> 27 -> 28 -> 29 -> 30

010 -> 31 -> 32 -> 33 -> 34 -> 35

011

012

013

014

015

016

017

018

019

020

021

022

023

024

025

026

027

028

029

030

031

032

033

034

035

036

037

038 -> 41 -> 42 -> 43 -> 44 -> 45

039 -> 46 -> 47 -> 48 -> 49 -> 50

040

041

042

043

044

045

046

047

048

049

050

051

052

053

054

055

056

057

058

059

060

061

062 -> 66 -> 67 -> 68 -> 69 -> 70

063

064

065 -> 71 -> 72 -> 73 -> 74 -> 75

066

067

068

069

070

071

072

073

074

075

076

077

078

079

080

081

082

083

084

085

086

087

088

089

090

091

092

093

094

095

096

097

098

099

100

101

102

103

104

105

106

107

108

109

110

111

112

113

114

115

116

117

118

119

120

121

122

123

124

125

126

127

128

129

130

131

132

133

134

135

136

137

138

139

140

141

142

143

144

145

146

147

148

149

150

151

152

153

154

155


best node: {'id': 34, 'answer': '2.0000000000000003 * 12 = 24.000000000000002 ( left: 24.000000000000002 )', 'value': 'sure', 'parent_node': 10, 'ancestor_value': 2.0}

best node: {'id': 10, 'answer': '12 / 6 = 2.0000000000000003 ( left: 2.0000000000000003 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}

best node: {'id': 1, 'answer': '1 + 5 = 6 ( left: 6 12 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}

best node: {'id': 0, 'answer': '1 5 12 12', 'value': None, 'parent_node': None, 'ancestor_value': None}

path: ['2.0000000000000003 * 12 = 24.000000000000002 ( left: 24.000000000000002 )', '12 / 6 = 2.0000000000000003 ( left: 2.0000000000000003 12 )', '1 + 5 = 6 ( left: 6 12 12 )', '( left: 1 5 12 12 )']


['2.0000000000000003 * 12 = 24.000000000000002 ( left: 24.000000000000002 )', '12 / 6 = 2.0000000000000003 ( left: 2.0000000000000003 12 )', '1 + 5 = 6 ( left: 6 12 12 )', '( left: 1 5 12 12 )']
 ( ( 12 / ( 1 + 5 ) ) * 12 ) 


Answer: 
 ( ( 12 / ( 1 + 5 ) ) * 12 ) 

