TheBloke/OpenHermes-2.5-Mistral-7B-GPTQ
temperature: 0.5, 0
date: 2024-01-18


step 1


Generator response:
2 + 8 = 10
2 + 8 = 10
8 + 2 = 10
2 * 8 = 16
8 - 2 = 6


Generated answers:
['2 + 8 = 10 ( left: 2 10 8 )', '2 + 8 = 10 ( left: 2 10 8 )', '8 + 2 = 10 ( left: 10 2 8 )', '2 * 8 = 16 ( left: 2 16 8 )', '8 - 2 = 6 ( left: 6 2 8 )']


Analysis:
2 + 10 + 8 = 20
2 * 10 * 8 = 160
Output: sure (2 10 8)


Analysis:
2 + 10 + 8 = 20
2 * 10 * 8 = 160
Output: sure (2 10 8)


Analysis:
10 + 2 + 8 = 20
(8 - 2) * 10 = 60
Output: sure (10 2 8)


Analysis:
2 + 16 + 8 = 26
2 * 16 * 8 = 128
Output: impossible (2 16 8)


Analysis:
6 + 2 + 8 = 16
6 * 2 = 12
(8 - 6) * 2 = 4 * 2 = 8
Output: impossible (6 2 8)


node:
[{'id': 1, 'answer': '2 + 8 = 10 ( left: 2 10 8 )', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 2, 'answer': '2 + 8 = 10 ( left: 2 10 8 )', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '8 + 2 = 10 ( left: 10 2 8 )', 'value': 'sure', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '2 * 8 = 16 ( left: 2 16 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '8 - 2 = 6 ( left: 6 2 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}]
5


step 2


Generator response:
2 + 10 = 12
10 - 2 = 8
2 * 8 = 16
8 / 2 = 4
10 / 2 = 5


Generated answers:
['2 + 10 = 12 ( left: 12 8 )', '10 - 2 = 8 ( left: 8 8 )', '2 * 8 = 16 ( left: 10 16 )', '8 / 2 = 4 ( left: 4 10 )', '10 / 2 = 5 ( left: 5 8 )']


Generator response:
2 + 8 = 10
8 + 2 = 10
10 - 2 = 8
10 / 2 = 5
8 - 2 = 6


Generated answers:
['2 + 8 = 10 ( left: 10 10 )', '8 + 2 = 10 ( left: 10 10 )', '10 - 2 = 8 ( left: 8 8 )', '10 / 2 = 5 ( left: 5 8 )', '8 - 2 = 6 ( left: 6 10 )']


Generator response:
10 + 2 = 12
10 / 2 = 5
8 + 2 = 10
8 - 2 = 6
2 * 8 = 16


Generated answers:
['10 + 2 = 12 ( left: 12 8 )', '10 / 2 = 5 ( left: 5 8 )', '8 + 2 = 10 ( left: 10 10 )', '8 - 2 = 6 ( left: 10 6 )', '2 * 8 = 16 ( left: 10 16 )']


Generator response:
2 + 16 = 18
2 * 16 = 32
16 - 8 = 8
16 / 2 = 8
16 + 8 = 24


Generated answers:
['2 + 16 = 18 ( left: 18 8 )', '2 * 16 = 32 ( left: 32 8 )', '16 - 8 = 8 ( left: 2 8 )', '16 / 2 = 8 ( left: 8 8 )', '16 + 8 = 24 ( left: 2 24 )']


Generator response:
6 + 2 = 8
8 - 2 = 6
8 / 2 = 4
2 * 8 = 16
6 - 8 = -2


Generated answers:
['6 + 2 = 8 ( left: 8 8 )', '8 - 2 = 6 ( left: 6 6 )', '8 / 2 = 4 ( left: 6 4 )', '2 * 8 = 16 ( left: 6 16 )', '6 - 8 = -2 ( left: 2 -2 )']


Analysis:
12 + 8 = 20
12 - 8 = 4
12 * 8 = 96
12 / 8 = 1.5
Output: impossible (12 8)


Analysis:
8 + 8 = 16
8 * 8 = 64
Output: impossible (8 8)


Analysis:
10 + 16 = 26
16 - 10 = 6
10 * 16 = 160
10 / 16 = 0.625
Output: impossible (10 16)


Analysis:
4 + 10 = 14
4 * 10 = 40
Output: impossible (4 10)


Analysis:
5 + 8 = 13
5 * 8 = 40
Output: impossible (5 8)


Analysis:
10 + 10 = 20
Output: sure (10 10)


Analysis:
10 + 10 = 20
Output: sure (10 10)


Analysis:
8 + 8 = 16
8 * 8 = 64
Output: impossible (8 8)


Analysis:
5 + 8 = 13
5 * 8 = 40
Output: impossible (5 8)


Analysis:
6 + 10 = 16
6 * 10 = 60
Output: impossible (6 10)


Analysis:
12 + 8 = 20
12 - 8 = 4
12 * 8 = 96
12 / 8 = 1.5
Output: impossible (12 8)


Analysis:
5 + 8 = 13
5 * 8 = 40
Output: impossible (5 8)


Analysis:
10 + 10 = 20
Output: sure (10 10)


Analysis:
10 + 6 = 16
10 - 6 = 4
10 * 6 = 60
10 / 6 = 1.67
Output: impossible (10 6)


Analysis:
10 + 16 = 26
16 - 10 = 6
10 * 16 = 160
10 / 16 = 0.625
Output: impossible (10 16)


Analysis:
18 + 8 = 26
18 - 8 = 10
18 * 8 = 144
18 / 8 = 2.25
Output: impossible (18 8)


Analysis:
32 + 8 = 40
32 - 8 = 24
Output: sure (32 8)


Analysis:
2 + 8 = 10
2 * 8 = 16
Output: impossible (2 8)


Analysis:
8 + 8 = 16
8 * 8 = 64
Output: impossible (8 8)


Analysis:
2 + 24 = 26
Output: impossible (2 24)


Analysis:
8 + 8 = 16
8 * 8 = 64
Output: impossible (8 8)


Analysis:
6 + 6 = 12
6 * 6 = 36
Output: impossible (6 6)


Analysis:
6 + 4 = 10
6 * 4 = 24
Output: sure (6 4)


Analysis:
6 + 16 = 22
6 * 16 = 96
Output: impossible (6 16)


Analysis:
2 + (-2) = 0
Output: impossible (2 -2)


node:
[{'id': 11, 'answer': '2 + 8 = 10 ( left: 10 10 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 10.0}, {'id': 12, 'answer': '8 + 2 = 10 ( left: 10 10 )', 'value': 'sure', 'parent_node': 2, 'ancestor_value': 10.0}, {'id': 18, 'answer': '8 + 2 = 10 ( left: 10 10 )', 'value': 'sure', 'parent_node': 3, 'ancestor_value': 10.0}, {'id': 6, 'answer': '2 + 10 = 12 ( left: 12 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 10.0}, {'id': 7, 'answer': '10 - 2 = 8 ( left: 8 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 10.0}, {'id': 8, 'answer': '2 * 8 = 16 ( left: 10 16 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 10.0}, {'id': 9, 'answer': '8 / 2 = 4 ( left: 4 10 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 10.0}, {'id': 10, 'answer': '10 / 2 = 5 ( left: 5 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 10.0}, {'id': 13, 'answer': '10 - 2 = 8 ( left: 8 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}, {'id': 14, 'answer': '10 / 2 = 5 ( left: 5 8 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}, {'id': 15, 'answer': '8 - 2 = 6 ( left: 6 10 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 10.0}, {'id': 16, 'answer': '10 + 2 = 12 ( left: 12 8 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 10.0}, {'id': 17, 'answer': '10 / 2 = 5 ( left: 5 8 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 10.0}, {'id': 19, 'answer': '8 - 2 = 6 ( left: 10 6 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 10.0}, {'id': 20, 'answer': '2 * 8 = 16 ( left: 10 16 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 10.0}, {'id': 22, 'answer': '2 * 16 = 32 ( left: 32 8 )', 'value': 'sure', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 28, 'answer': '8 / 2 = 4 ( left: 6 4 )', 'value': 'sure', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 21, 'answer': '2 + 16 = 18 ( left: 18 8 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 23, 'answer': '16 - 8 = 8 ( left: 2 8 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 24, 'answer': '16 / 2 = 8 ( left: 8 8 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 25, 'answer': '16 + 8 = 24 ( left: 2 24 )', 'value': 'impossible', 'parent_node': 4, 'ancestor_value': 1.0}, {'id': 26, 'answer': '6 + 2 = 8 ( left: 8 8 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 27, 'answer': '8 - 2 = 6 ( left: 6 6 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 29, 'answer': '2 * 8 = 16 ( left: 6 16 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}, {'id': 30, 'answer': '6 - 8 = -2 ( left: 2 -2 )', 'value': 'impossible', 'parent_node': 5, 'ancestor_value': 1.0}]
25


step 3


Generator response:
10 + 10 = 20
10 - 10 = 0
10 * 10 = 100
10 / 10 = 1



Generated answers:
['10 + 10 = 20 ( left: 20 )', '10 - 10 = 0 ( left: 0 )', '10 * 10 = 100 ( left: 100 )', '10 / 10 = 1 ( left: 1 )', '10 - 10 = 0.001000000000000000244642865471606971718758109375195438798628656745123752519535942459076368164583252968730381798183362773937674417561128658253996198989858683289389078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890 ( left


Generator response:
10 + 10 = 20
10 - 10 = 0
10 * 10 = 100
10 / 10 = 1
10 - 10 = 0


Generated answers:
['10 + 10 = 20 ( left: 20 )', '10 - 10 = 0 ( left: 0 )', '10 * 10 = 100 ( left: 100 )', '10 / 10 = 1 ( left: 1 )', '10 - 10 = 0 ( left: 0 )']


Generator response:
10 / 2 = 5
10 - 10 = 0
10 * 10 = 100
10 + 10 = 20
10 - 10 = 0


Generated answers:
['10 / 2 = 5 ( left: 10 )', '10 - 10 = 0 ( left: 0 )', '10 * 10 = 100 ( left: 100 )', '10 + 10 = 20 ( left: 20 )', '10 - 10 = 0 ( left: 0 )']


Generator response:
12 + 8 = 20
8 - 12 = -4
12 * 8 = 96
8 / 2 = 4
12 / 2 = 6


Generated answers:
['12 + 8 = 20 ( left: 20 )', '8 - 12 = -4 ( left: -4 )', '12 * 8 = 96 ( left: 96 )', '8 / 2 = 4 ( left: 14 )', '12 / 2 = 6 ( left: 8 )']


Generator response:
8 + 8 = 16
8 - 8 = 0
8 * 8 = 64
8 / 8 = 1
8 / 2 = 4


Generated answers:
['8 + 8 = 16 ( left: 16 )', '8 - 8 = 0 ( left: 0 )', '8 * 8 = 64 ( left: 64 )', '8 / 8 = 1 ( left: 1 )', '8 / 2 = 4 ( left: 8 )']


Analysis:
20 is not equal to 24
Output: impossible (20)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
100 is not equal to 24
Output: impossible (100)


Analysis:
1 is not equal to 24
Output: impossible (1)



Input


Analysis:
20 is not equal to 24
Output: impossible (20)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
100 is not equal to 24
Output: impossible (100)


Analysis:
1 is not equal to 24
Output: impossible (1)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
10 is not equal to 24
Output: impossible (10)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
100 is not equal to 24
Output: impossible (100)


Analysis:
20 is not equal to 24
Output: impossible (20)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
20 is not equal to 24
Output: impossible (20)


Analysis:
-4 is not equal to 24
Output: impossible (-4)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
96 is not equal to 24
Output: impossible (96)


Analysis:
14 is not equal to 24
Output: impossible (14)


Analysis:
8 is not equal to 24
Output: impossible (8)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)


Analysis:
16 is not equal to 24
Output: impossible (16)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
64 is not equal to 24
Output: impossible (64)


Analysis:
1 is not equal to 24
Output: impossible (1)


Analysis:
8 is not equal to 24
Output: impossible (8)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)


node:
[{'id': 31, 'answer': '10 + 10 = 20 ( left: 20 )', 'value': 'impossible', 'parent_node': 11, 'ancestor_value': 20.0}, {'id': 32, 'answer': '10 - 10 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 11, 'ancestor_value': 20.0}, {'id': 33, 'answer': '10 * 10 = 100 ( left: 100 )', 'value': 'impossible', 'parent_node': 11, 'ancestor_value': 20.0}, {'id': 34, 'answer': '10 / 10 = 1 ( left: 1 )', 'value': 'impossible', 'parent_node': 11, 'ancestor_value': 20.0}, {'id': 36, 'answer': '10 + 10 = 20 ( left: 20 )', 'value': 'impossible', 'parent_node': 12, 'ancestor_value': 20.0}, {'id': 37, 'answer': '10 - 10 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 12, 'ancestor_value': 20.0}, {'id': 38, 'answer': '10 * 10 = 100 ( left: 100 )', 'value': 'impossible', 'parent_node': 12, 'ancestor_value': 20.0}, {'id': 39, 'answer': '10 / 10 = 1 ( left: 1 )', 'value': 'impossible', 'parent_node': 12, 'ancestor_value': 20.0}, {'id': 40, 'answer': '10 - 10 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 12, 'ancestor_value': 20.0}, {'id': 41, 'answer': '10 / 2 = 5 ( left: 10 )', 'value': 'impossible', 'parent_node': 18, 'ancestor_value': 20.0}, {'id': 42, 'answer': '10 - 10 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 18, 'ancestor_value': 20.0}, {'id': 43, 'answer': '10 * 10 = 100 ( left: 100 )', 'value': 'impossible', 'parent_node': 18, 'ancestor_value': 20.0}, {'id': 44, 'answer': '10 + 10 = 20 ( left: 20 )', 'value': 'impossible', 'parent_node': 18, 'ancestor_value': 20.0}, {'id': 45, 'answer': '10 - 10 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 18, 'ancestor_value': 20.0}, {'id': 35, 'answer': '10 - 10 = 0.001000000000000000244642865471606971718758109375195438798628656745123752519535942459076368164583252968730381798183362773937674417561128658253996198989858683289389078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890783868907838689078386890 ( leftvalue': None, 'parent_node': 11, 'ancestor_value': 20.0}, {'id': 46, 'answer': '12 + 8 = 20 ( left: 20 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}, {'id': 47, 'answer': '8 - 12 = -4 ( left: -4 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}, {'id': 48, 'answer': '12 * 8 = 96 ( left: 96 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}, {'id': 49, 'answer': '8 / 2 = 4 ( left: 14 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}, {'id': 50, 'answer': '12 / 2 = 6 ( left: 8 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 11.0}, {'id': 51, 'answer': '8 + 8 = 16 ( left: 16 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}, {'id': 52, 'answer': '8 - 8 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}, {'id': 53, 'answer': '8 * 8 = 64 ( left: 64 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}, {'id': 54, 'answer': '8 / 8 = 1 ( left: 1 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}, {'id': 55, 'answer': '8 / 2 = 4 ( left: 8 )', 'value': 'impossible', 'parent_node': 7, 'ancestor_value': 11.0}]
25


linked list:
000 -> 1 -> 2 -> 3 -> 4 -> 5

001 -> 6 -> 7 -> 8 -> 9 -> 10

002 -> 11 -> 12 -> 13 -> 14 -> 15

003 -> 18 -> 16 -> 17 -> 19 -> 20

004 -> 22 -> 21 -> 23 -> 24 -> 25

005 -> 28 -> 26 -> 27 -> 29 -> 30

006 -> 46 -> 47 -> 48 -> 49 -> 50

007 -> 51 -> 52 -> 53 -> 54 -> 55

008

009

010

011 -> 31 -> 32 -> 33 -> 34 -> 35

012 -> 36 -> 37 -> 38 -> 39 -> 40

013

014

015

016

017

018 -> 41 -> 42 -> 43 -> 44 -> 45

019

020

021

022

023

024

025

026

027

028

029

030

031

032

033

034

035

036

037

038

039

040

041

042

043

044

045

046

047

048

049

050

051

052

053

054

055

056

057

058

059

060

061

062

063

064

065

066

067

068

069

070

071

072

073

074

075

076

077

078

079

080

081

082

083

084

085

086

087

088

089

090

091

092

093

094

095

096

097

098

099

100

101

102

103

104

105

106

107

108

109

110

111

112

113

114

115

116

117

118

119

120

121

122

123

124

125

126

127

128

129

130

131

132

133

134

135

136

137

138

139

140

141

142

143

144

145

146

147

148

149

150

151

152

153

154

155


path: ['10 + 10 = 20 ( left: 20 )', '2 + 8 = 10 ( left: 10 10 )', '2 + 8 = 10 ( left: 2 10 8 )', '( left: 2 2 8 8 )']


['10 + 10 = 20 ( left: 20 )', '2 + 8 = 10 ( left: 10 10 )', '2 + 8 = 10 ( left: 2 10 8 )', '( left: 2 2 8 8 )']
 ( ( 2 + 8 ) + ( 2 + 8 ) ) 


Answer: 
 ( ( 2 + 8 ) + ( 2 + 8 ) ) 

