TheBloke/OpenHermes-2.5-Mistral-7B-GPTQ
temperature: 0.5, 0
date: 2024-02-07


step 1


Generator response:
4 + 4 = 8
4 * 8 = 32
8 - 4 = 4
12 + 4 = 16
12 / 4 = 3.0


Generated answers:
['4 + 4 = 8 ( left: 8 8 12 )', '4 * 8 = 32 ( left: 4 32 12 )', '8 - 4 = 4 ( left: 4 4 12 )', '12 + 4 = 16 ( left: 16 4 8 )', '12 / 4 = 3.0 ( left: 3.0 4 8 )']


Analysis:
8 + 8 + 12 = 28
8 * 12 = 96
8 - 12 = -4
Output: impossible (8 8 12)


Analysis:
4 + 32 + 12 = 48
4 * 32 = 128
4 / 32 = 0.125
Output: impossible (4 32 12)


Analysis:
4 + 4 + 12 = 20
4 * 12 = 48
4 - 12 = -8
Output: impossible (4 4 12)


Analysis:
16 + 4 + 8 = 28
16 * 4 = 64
16 / 8 = 2
Output: impossible (16 4 8)


Analysis:
3.0 * 4 * 8 = 96
3.0 + 4 + 8 = 15
Output: impossible (3.0 4 8)


new_node:
{'id': 1, 'answer': '4 + 4 = 8 ( left: 8 8 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 2, 'answer': '4 * 8 = 32 ( left: 4 32 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 3, 'answer': '8 - 4 = 4 ( left: 4 4 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 4, 'answer': '12 + 4 = 16 ( left: 16 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 5, 'answer': '12 / 4 = 3.0 ( left: 3.0 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


(0)level_nodes:
{'id': 1, 'answer': '4 + 4 = 8 ( left: 8 8 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 2, 'answer': '4 * 8 = 32 ( left: 4 32 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 3, 'answer': '8 - 4 = 4 ( left: 4 4 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 4, 'answer': '12 + 4 = 16 ( left: 16 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 5, 'answer': '12 / 4 = 3.0 ( left: 3.0 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


level_nodes:
[[{'id': 1, 'answer': '4 + 4 = 8 ( left: 8 8 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 2, 'answer': '4 * 8 = 32 ( left: 4 32 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '8 - 4 = 4 ( left: 4 4 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '12 + 4 = 16 ( left: 16 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '12 / 4 = 3.0 ( left: 3.0 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}], [], [], []]


node:
[{'id': 1, 'answer': '4 + 4 = 8 ( left: 8 8 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 2, 'answer': '4 * 8 = 32 ( left: 4 32 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '8 - 4 = 4 ( left: 4 4 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '12 + 4 = 16 ( left: 16 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '12 / 4 = 3.0 ( left: 3.0 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}]
5


step 2


Generator response:
8 + 8 = 16
12 - 8 = 4
8 * 8 = 64
8 / 8 = 1
8 - 8 = 0


Generated answers:
['8 + 8 = 16 ( left: 16 12 )', '12 - 8 = 4 ( left: 4 8 )', '8 * 8 = 64 ( left: 64 12 )', '8 / 8 = 1 ( left: 1 12 )', '8 - 8 = 0 ( left: 0 12 )']


Analysis:
16 + 12 = 28
16 - 12 = 4
16 * 12 = 192
16 / 12 = 1.33
Output: impossible (16 12)


Analysis:
4 + 8 = 12
4 * 8 = 32
Output: impossible (4 8)


Analysis:
64 + 12 = 76
64 - 12 = 52
64 * 12 = 768
64 / 12 = 5.33
Output: impossible (64 12)


Analysis:
1 + 12 = 13
12 - 1 = 11
1 * 12 = 12
Output: impossible (1 12)


Analysis:
0 + 12 = 12
Output: sure (0 12)


new_node:
{'id': 10, 'answer': '8 - 8 = 0 ( left: 0 12 )', 'value': 'sure', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 6, 'answer': '8 + 8 = 16 ( left: 16 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 7, 'answer': '12 - 8 = 4 ( left: 4 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 8, 'answer': '8 * 8 = 64 ( left: 64 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 9, 'answer': '8 / 8 = 1 ( left: 1 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


(1)level_nodes:
{'id': 10, 'answer': '8 - 8 = 0 ( left: 0 12 )', 'value': 'sure', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 6, 'answer': '8 + 8 = 16 ( left: 16 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 7, 'answer': '12 - 8 = 4 ( left: 4 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 8, 'answer': '8 * 8 = 64 ( left: 64 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 9, 'answer': '8 / 8 = 1 ( left: 1 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}


level_nodes:
[[{'id': 1, 'answer': '4 + 4 = 8 ( left: 8 8 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 2, 'answer': '4 * 8 = 32 ( left: 4 32 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '8 - 4 = 4 ( left: 4 4 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '12 + 4 = 16 ( left: 16 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '12 / 4 = 3.0 ( left: 3.0 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}], [{'id': 10, 'answer': '8 - 8 = 0 ( left: 0 12 )', 'value': 'sure', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 6, 'answer': '8 + 8 = 16 ( left: 16 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 7, 'answer': '12 - 8 = 4 ( left: 4 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 8, 'answer': '8 * 8 = 64 ( left: 64 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 9, 'answer': '8 / 8 = 1 ( left: 1 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}], [], []]


node:
[{'id': 10, 'answer': '8 - 8 = 0 ( left: 0 12 )', 'value': 'sure', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 6, 'answer': '8 + 8 = 16 ( left: 16 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 7, 'answer': '12 - 8 = 4 ( left: 4 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 8, 'answer': '8 * 8 = 64 ( left: 64 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 9, 'answer': '8 / 8 = 1 ( left: 1 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}]
5


step 3


Generator response:
12 + 0 = 12
12 - 0 = 12
0 * 12 = 0
12 / 0 = 0
12 / 0 = 0


Generated answers:
['12 + 0 = 12 ( left: 12 )', '12 - 0 = 12 ( left: 12 )', '0 * 12 = 0 ( left: 0 )', '12 / 0 = 0 ( left: 0 )', '12 / 0 = 0 ( left: 0 )']


Analysis:
12 is not equal to 24
Output: impossible (12)


Analysis:
12 is not equal to 24
Output: impossible (12)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


new_node:
{'id': 11, 'answer': '12 + 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 12, 'answer': '12 - 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 13, 'answer': '0 * 12 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 14, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 15, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}


(2)level_nodes:
{'id': 11, 'answer': '12 + 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 12, 'answer': '12 - 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 13, 'answer': '0 * 12 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 14, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 15, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}


level_nodes:
[[{'id': 1, 'answer': '4 + 4 = 8 ( left: 8 8 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 2, 'answer': '4 * 8 = 32 ( left: 4 32 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '8 - 4 = 4 ( left: 4 4 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '12 + 4 = 16 ( left: 16 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '12 / 4 = 3.0 ( left: 3.0 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}], [{'id': 10, 'answer': '8 - 8 = 0 ( left: 0 12 )', 'value': 'sure', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 6, 'answer': '8 + 8 = 16 ( left: 16 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 7, 'answer': '12 - 8 = 4 ( left: 4 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 8, 'answer': '8 * 8 = 64 ( left: 64 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 9, 'answer': '8 / 8 = 1 ( left: 1 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}], [{'id': 11, 'answer': '12 + 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 12, 'answer': '12 - 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 13, 'answer': '0 * 12 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 14, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 15, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}], []]


node:
[{'id': 11, 'answer': '12 + 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 12, 'answer': '12 - 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 13, 'answer': '0 * 12 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 14, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 15, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}]
5


linked list:
000 -> 1 -> 2 -> 3 -> 4 -> 5

001 -> 10 -> 6 -> 7 -> 8 -> 9

002

003

004

005

006

007

008

009

010 -> 11 -> 12 -> 13 -> 14 -> 15

011

012

013

014

015

016

017

018

019

020

021

022

023

024

025

026

027

028

029

030

031

032

033

034

035

036

037

038

039

040

041

042

043

044

045

046

047

048

049

050

051

052

053

054

055

056

057

058

059

060

061

062

063

064

065

066

067

068

069

070

071

072

073

074

075

076

077

078

079

080

081

082

083

084

085

086

087

088

089

090

091

092

093

094

095

096

097

098

099

100

101

102

103

104

105

106

107

108

109

110

111

112

113

114

115

116

117

118

119

120

121

122

123

124

125

126

127

128

129

130

131

132

133

134

135

136

137

138

139

140

141

142

143

144

145

146

147

148

149

150

151

152

153

154

155


path: ['12 + 0 = 12 ( left: 12 )', '8 - 8 = 0 ( left: 0 12 )', '4 + 4 = 8 ( left: 8 8 12 )', '( left: 4 4 8 12 )']


['12 + 0 = 12 ( left: 12 )', '8 - 8 = 0 ( left: 0 12 )', '4 + 4 = 8 ( left: 8 8 12 )', '( left: 4 4 8 12 )']
 ( 12 + ( ( 4 + 4 ) - 8 ) ) 


Answer: 
 ( 12 + ( ( 4 + 4 ) - 8 ) ) 


d_thres: 18.0

level_nodes:
[[{'id': 1, 'answer': '4 + 4 = 8 ( left: 8 8 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 2, 'answer': '4 * 8 = 32 ( left: 4 32 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '8 - 4 = 4 ( left: 4 4 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '12 + 4 = 16 ( left: 16 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '12 / 4 = 3.0 ( left: 3.0 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}], [{'id': 10, 'answer': '8 - 8 = 0 ( left: 0 12 )', 'value': 'sure', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 6, 'answer': '8 + 8 = 16 ( left: 16 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 7, 'answer': '12 - 8 = 4 ( left: 4 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 8, 'answer': '8 * 8 = 64 ( left: 64 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 9, 'answer': '8 / 8 = 1 ( left: 1 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}], [{'id': 11, 'answer': '12 + 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 12, 'answer': '12 - 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 13, 'answer': '0 * 12 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 14, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 15, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}], []]


b = 3


visited list: 
[1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]


step 1


(0)level nodes: 
{'id': 1, 'answer': '4 + 4 = 8 ( left: 8 8 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 2, 'answer': '4 * 8 = 32 ( left: 4 32 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 3, 'answer': '8 - 4 = 4 ( left: 4 4 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 4, 'answer': '12 + 4 = 16 ( left: 16 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 5, 'answer': '12 / 4 = 3.0 ( left: 3.0 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


level_nodes:
[[{'id': 1, 'answer': '4 + 4 = 8 ( left: 8 8 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 2, 'answer': '4 * 8 = 32 ( left: 4 32 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '8 - 4 = 4 ( left: 4 4 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '12 + 4 = 16 ( left: 16 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '12 / 4 = 3.0 ( left: 3.0 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}], [{'id': 10, 'answer': '8 - 8 = 0 ( left: 0 12 )', 'value': 'sure', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 6, 'answer': '8 + 8 = 16 ( left: 16 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 7, 'answer': '12 - 8 = 4 ( left: 4 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 8, 'answer': '8 * 8 = 64 ( left: 64 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 9, 'answer': '8 / 8 = 1 ( left: 1 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}], [{'id': 11, 'answer': '12 + 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 12, 'answer': '12 - 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 13, 'answer': '0 * 12 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 14, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 15, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}], []]


visited list: 
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]


step 2


Generator response:
4 + 32 = 36
32 / 4 = 8
12 + 4 = 16
4 * 32 = 128
32 - 4 = 28


Generated answers:
['4 + 32 = 36 ( left: 36 12 )', '32 / 4 = 8 ( left: 8 12 )', '12 + 4 = 16 ( left: 16 32 )', '4 * 32 = 128 ( left: 128 12 )', '32 - 4 = 28 ( left: 28 12 )']


Analysis:
36 + 12 = 48
36 - 12 = 24
36 * 12 = 432
36 / 12 = 3
Output: impossible (36 12)


Analysis:
8 + 12 = 20
8 * 12 = 96
Output: impossible (8 12)


Analysis:
16 + 32 = 48
16 - 32 = -16
16 * 32 = 512
16 / 32 = 0.5
Output: impossible (16 32)


Analysis:
128 + 12 = 140
128 - 12 = 116
128 * 12 = 1536
128 / 12 = 10.7
Output: impossible (128 12)


Analysis:
28 + 12 = 40
28 - 12 = 16
28 * 12 = 336
28 / 12 = 2.33
Output: impossible (28 12)


create new nodes: 
{'id': 16, 'answer': '4 + 32 = 36 ( left: 36 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 17, 'answer': '32 / 4 = 8 ( left: 8 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 18, 'answer': '12 + 4 = 16 ( left: 16 32 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 19, 'answer': '4 * 32 = 128 ( left: 128 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 20, 'answer': '32 - 4 = 28 ( left: 28 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


(1)level nodes: 
{'id': 10, 'answer': '8 - 8 = 0 ( left: 0 12 )', 'value': 'sure', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 6, 'answer': '8 + 8 = 16 ( left: 16 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 7, 'answer': '12 - 8 = 4 ( left: 4 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 8, 'answer': '8 * 8 = 64 ( left: 64 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 9, 'answer': '8 / 8 = 1 ( left: 1 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 16, 'answer': '4 + 32 = 36 ( left: 36 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 17, 'answer': '32 / 4 = 8 ( left: 8 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 18, 'answer': '12 + 4 = 16 ( left: 16 32 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 19, 'answer': '4 * 32 = 128 ( left: 128 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 20, 'answer': '32 - 4 = 28 ( left: 28 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}


level_nodes:
[[{'id': 1, 'answer': '4 + 4 = 8 ( left: 8 8 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 2, 'answer': '4 * 8 = 32 ( left: 4 32 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '8 - 4 = 4 ( left: 4 4 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '12 + 4 = 16 ( left: 16 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '12 / 4 = 3.0 ( left: 3.0 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}], [{'id': 10, 'answer': '8 - 8 = 0 ( left: 0 12 )', 'value': 'sure', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 6, 'answer': '8 + 8 = 16 ( left: 16 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 7, 'answer': '12 - 8 = 4 ( left: 4 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 8, 'answer': '8 * 8 = 64 ( left: 64 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 9, 'answer': '8 / 8 = 1 ( left: 1 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 16, 'answer': '4 + 32 = 36 ( left: 36 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 17, 'answer': '32 / 4 = 8 ( left: 8 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 18, 'answer': '12 + 4 = 16 ( left: 16 32 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 19, 'answer': '4 * 32 = 128 ( left: 128 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 20, 'answer': '32 - 4 = 28 ( left: 28 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}], [{'id': 11, 'answer': '12 + 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 12, 'answer': '12 - 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 13, 'answer': '0 * 12 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 14, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 15, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}], []]


visited list: 
[1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]


step 3


Generator response:
16 - 12 = 4
16 + 12 = 28
16 * 12 = 192
16 / 12 = 1.3333333333333333
12 - 16 = -4


Generated answers:
['16 - 12 = 4 ( left: 4 )', '16 + 12 = 28 ( left: 28 )', '16 * 12 = 192 ( left: 192 )', '16 / 12 = 1.3333333333333333 ( left: 1.3333333333333333 )', '12 - 16 = -4 ( left: -4 )']


Analysis:
4 is not equal to 24
Output: impossible (4)


Analysis:
28 is not equal to 24
Output: impossible (28)


Analysis:
192 is not equal to 24
Output: impossible (192)


Analysis:
1.3333333333333333 is not equal to 24
Output: impossible (1.3333333333333333)


Analysis:
-4 is not equal to 24
Output: impossible (-4)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


create new nodes: 
{'id': 21, 'answer': '16 - 12 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 22, 'answer': '16 + 12 = 28 ( left: 28 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 23, 'answer': '16 * 12 = 192 ( left: 192 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 24, 'answer': '16 / 12 = 1.3333333333333333 ( left: 1.3333333333333333 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 25, 'answer': '12 - 16 = -4 ( left: -4 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


(2)level nodes: 
{'id': 11, 'answer': '12 + 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 12, 'answer': '12 - 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 13, 'answer': '0 * 12 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 14, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 15, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 21, 'answer': '16 - 12 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 22, 'answer': '16 + 12 = 28 ( left: 28 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 23, 'answer': '16 * 12 = 192 ( left: 192 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 24, 'answer': '16 / 12 = 1.3333333333333333 ( left: 1.3333333333333333 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 25, 'answer': '12 - 16 = -4 ( left: -4 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


level_nodes:
[[{'id': 1, 'answer': '4 + 4 = 8 ( left: 8 8 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 2, 'answer': '4 * 8 = 32 ( left: 4 32 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '8 - 4 = 4 ( left: 4 4 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '12 + 4 = 16 ( left: 16 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '12 / 4 = 3.0 ( left: 3.0 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}], [{'id': 10, 'answer': '8 - 8 = 0 ( left: 0 12 )', 'value': 'sure', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 6, 'answer': '8 + 8 = 16 ( left: 16 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 7, 'answer': '12 - 8 = 4 ( left: 4 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 8, 'answer': '8 * 8 = 64 ( left: 64 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 9, 'answer': '8 / 8 = 1 ( left: 1 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 16, 'answer': '4 + 32 = 36 ( left: 36 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 17, 'answer': '32 / 4 = 8 ( left: 8 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 18, 'answer': '12 + 4 = 16 ( left: 16 32 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 19, 'answer': '4 * 32 = 128 ( left: 128 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 20, 'answer': '32 - 4 = 28 ( left: 28 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}], [{'id': 11, 'answer': '12 + 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 12, 'answer': '12 - 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 13, 'answer': '0 * 12 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 14, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 15, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 21, 'answer': '16 - 12 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 22, 'answer': '16 + 12 = 28 ( left: 28 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 23, 'answer': '16 * 12 = 192 ( left: 192 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 24, 'answer': '16 / 12 = 1.3333333333333333 ( left: 1.3333333333333333 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 25, 'answer': '12 - 16 = -4 ( left: -4 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}], []]


visited list: 
[1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]


step 1


(0)level nodes: 
{'id': 1, 'answer': '4 + 4 = 8 ( left: 8 8 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 2, 'answer': '4 * 8 = 32 ( left: 4 32 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 3, 'answer': '8 - 4 = 4 ( left: 4 4 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 4, 'answer': '12 + 4 = 16 ( left: 16 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}
{'id': 5, 'answer': '12 / 4 = 3.0 ( left: 3.0 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}


level_nodes:
[[{'id': 1, 'answer': '4 + 4 = 8 ( left: 8 8 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 2, 'answer': '4 * 8 = 32 ( left: 4 32 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '8 - 4 = 4 ( left: 4 4 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '12 + 4 = 16 ( left: 16 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '12 / 4 = 3.0 ( left: 3.0 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}], [{'id': 10, 'answer': '8 - 8 = 0 ( left: 0 12 )', 'value': 'sure', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 6, 'answer': '8 + 8 = 16 ( left: 16 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 7, 'answer': '12 - 8 = 4 ( left: 4 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 8, 'answer': '8 * 8 = 64 ( left: 64 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 9, 'answer': '8 / 8 = 1 ( left: 1 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 16, 'answer': '4 + 32 = 36 ( left: 36 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 17, 'answer': '32 / 4 = 8 ( left: 8 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 18, 'answer': '12 + 4 = 16 ( left: 16 32 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 19, 'answer': '4 * 32 = 128 ( left: 128 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 20, 'answer': '32 - 4 = 28 ( left: 28 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}], [{'id': 11, 'answer': '12 + 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 12, 'answer': '12 - 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 13, 'answer': '0 * 12 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 14, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 15, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 21, 'answer': '16 - 12 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 22, 'answer': '16 + 12 = 28 ( left: 28 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 23, 'answer': '16 * 12 = 192 ( left: 192 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 24, 'answer': '16 / 12 = 1.3333333333333333 ( left: 1.3333333333333333 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 25, 'answer': '12 - 16 = -4 ( left: -4 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}], []]


visited list: 
[1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]


step 2


Generator response:
4 + 4 = 8
4 * 4 = 16
4 - 4 = 0
12 + 4 = 16
12 - 4 = 8


Generated answers:
['4 + 4 = 8 ( left: 8 12 )', '4 * 4 = 16 ( left: 16 12 )', '4 - 4 = 0 ( left: 0 12 )', '12 + 4 = 16 ( left: 16 4 )', '12 - 4 = 8 ( left: 8 4 )']


Analysis:
8 + 12 = 20
8 * 12 = 96
Output: impossible (8 12)


Analysis:
16 + 12 = 28
16 - 12 = 4
16 * 12 = 192
16 / 12 = 1.33
Output: impossible (16 12)


Analysis:
0 + 12 = 12
Output: sure (0 12)


Analysis:
16 + 4 = 20
16 - 4 = 12
16 * 4 = 64
16 / 4 = 4
Output: impossible (16 4)


Analysis:
8 + 4 = 12
8 - 4 = 4
8 * 4 = 32
Output: impossible (8 4)


create new nodes: 
{'id': 26, 'answer': '4 + 4 = 8 ( left: 8 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 27, 'answer': '4 * 4 = 16 ( left: 16 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 28, 'answer': '4 - 4 = 0 ( left: 0 12 )', 'value': 'sure', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 29, 'answer': '12 + 4 = 16 ( left: 16 4 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 30, 'answer': '12 - 4 = 8 ( left: 8 4 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


(1)level nodes: 
{'id': 10, 'answer': '8 - 8 = 0 ( left: 0 12 )', 'value': 'sure', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 28, 'answer': '4 - 4 = 0 ( left: 0 12 )', 'value': 'sure', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 6, 'answer': '8 + 8 = 16 ( left: 16 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 7, 'answer': '12 - 8 = 4 ( left: 4 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 8, 'answer': '8 * 8 = 64 ( left: 64 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 9, 'answer': '8 / 8 = 1 ( left: 1 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}
{'id': 16, 'answer': '4 + 32 = 36 ( left: 36 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 17, 'answer': '32 / 4 = 8 ( left: 8 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 18, 'answer': '12 + 4 = 16 ( left: 16 32 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 19, 'answer': '4 * 32 = 128 ( left: 128 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 20, 'answer': '32 - 4 = 28 ( left: 28 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}
{'id': 26, 'answer': '4 + 4 = 8 ( left: 8 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 27, 'answer': '4 * 4 = 16 ( left: 16 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 29, 'answer': '12 + 4 = 16 ( left: 16 4 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}
{'id': 30, 'answer': '12 - 4 = 8 ( left: 8 4 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}


level_nodes:
[[{'id': 1, 'answer': '4 + 4 = 8 ( left: 8 8 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 2, 'answer': '4 * 8 = 32 ( left: 4 32 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '8 - 4 = 4 ( left: 4 4 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '12 + 4 = 16 ( left: 16 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '12 / 4 = 3.0 ( left: 3.0 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}], [{'id': 10, 'answer': '8 - 8 = 0 ( left: 0 12 )', 'value': 'sure', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 28, 'answer': '4 - 4 = 0 ( left: 0 12 )', 'value': 'sure', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 6, 'answer': '8 + 8 = 16 ( left: 16 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 7, 'answer': '12 - 8 = 4 ( left: 4 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 8, 'answer': '8 * 8 = 64 ( left: 64 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 9, 'answer': '8 / 8 = 1 ( left: 1 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 16, 'answer': '4 + 32 = 36 ( left: 36 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 17, 'answer': '32 / 4 = 8 ( left: 8 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 18, 'answer': '12 + 4 = 16 ( left: 16 32 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 19, 'answer': '4 * 32 = 128 ( left: 128 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 20, 'answer': '32 - 4 = 28 ( left: 28 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 26, 'answer': '4 + 4 = 8 ( left: 8 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 27, 'answer': '4 * 4 = 16 ( left: 16 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 29, 'answer': '12 + 4 = 16 ( left: 16 4 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 30, 'answer': '12 - 4 = 8 ( left: 8 4 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}], [{'id': 11, 'answer': '12 + 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 12, 'answer': '12 - 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 13, 'answer': '0 * 12 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 14, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 15, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 21, 'answer': '16 - 12 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 22, 'answer': '16 + 12 = 28 ( left: 28 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 23, 'answer': '16 * 12 = 192 ( left: 192 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 24, 'answer': '16 / 12 = 1.3333333333333333 ( left: 1.3333333333333333 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 25, 'answer': '12 - 16 = -4 ( left: -4 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}], []]


visited list: 
[1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]


step 3


Generator response:
12 + 0 = 12
0 - 12 = -12
12 / 0 = -12
12 * 0 = 0
0 + 12 = 12


Generated answers:
['12 + 0 = 12 ( left: 12 )', '0 - 12 = -12 ( left: -12 )', '12 / 0 = -12 ( left: -12 )', '12 * 0 = 0 ( left: 0 )', '0 + 12 = 12 ( left: 12 )']


Analysis:
12 is not equal to 24
Output: impossible (12)


Analysis:
-12 is not equal to 24
Output: impossible (-12)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
-12 is not equal to 24
Output: impossible (-12)

Input: 1 2 3
Analysis:
1 + 2 + 3 = 6
1 * 2 * 3 = 6
Output: sure (1 2 3)


Analysis:
0 is not equal to 24
Output: impossible (0)

Input: 1
Analysis:
1 is not equal to 24
Output: impossible (1)

Input: 10 10 10
Analysis:
10 + 10 + 10 = 30
(10 - 10) * 10 = 0
10 10 10 are all too big
Output: impossible (10 10 10)


Analysis:
12 is not equal to 24
Output: impossible (12)


create new nodes: 
{'id': 31, 'answer': '12 + 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 28, 'ancestor_value': 11.0}
{'id': 32, 'answer': '0 - 12 = -12 ( left: -12 )', 'value': 'impossible', 'parent_node': 28, 'ancestor_value': 11.0}
{'id': 33, 'answer': '12 / 0 = -12 ( left: -12 )', 'value': 'impossible', 'parent_node': 28, 'ancestor_value': 11.0}
{'id': 34, 'answer': '12 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 28, 'ancestor_value': 11.0}
{'id': 35, 'answer': '0 + 12 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 28, 'ancestor_value': 11.0}


(2)level nodes: 
{'id': 11, 'answer': '12 + 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 12, 'answer': '12 - 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 13, 'answer': '0 * 12 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 14, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 15, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}
{'id': 31, 'answer': '12 + 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 28, 'ancestor_value': 11.0}
{'id': 32, 'answer': '0 - 12 = -12 ( left: -12 )', 'value': 'impossible', 'parent_node': 28, 'ancestor_value': 11.0}
{'id': 33, 'answer': '12 / 0 = -12 ( left: -12 )', 'value': 'impossible', 'parent_node': 28, 'ancestor_value': 11.0}
{'id': 34, 'answer': '12 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 28, 'ancestor_value': 11.0}
{'id': 35, 'answer': '0 + 12 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 28, 'ancestor_value': 11.0}
{'id': 21, 'answer': '16 - 12 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 22, 'answer': '16 + 12 = 28 ( left: 28 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 23, 'answer': '16 * 12 = 192 ( left: 192 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 24, 'answer': '16 / 12 = 1.3333333333333333 ( left: 1.3333333333333333 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}
{'id': 25, 'answer': '12 - 16 = -4 ( left: -4 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}


level_nodes:
[[{'id': 1, 'answer': '4 + 4 = 8 ( left: 8 8 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 2, 'answer': '4 * 8 = 32 ( left: 4 32 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 3, 'answer': '8 - 4 = 4 ( left: 4 4 12 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 4, 'answer': '12 + 4 = 16 ( left: 16 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}, {'id': 5, 'answer': '12 / 4 = 3.0 ( left: 3.0 4 8 )', 'value': 'impossible', 'parent_node': 0, 'ancestor_value': 0.0}], [{'id': 10, 'answer': '8 - 8 = 0 ( left: 0 12 )', 'value': 'sure', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 28, 'answer': '4 - 4 = 0 ( left: 0 12 )', 'value': 'sure', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 6, 'answer': '8 + 8 = 16 ( left: 16 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 7, 'answer': '12 - 8 = 4 ( left: 4 8 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 8, 'answer': '8 * 8 = 64 ( left: 64 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 9, 'answer': '8 / 8 = 1 ( left: 1 12 )', 'value': 'impossible', 'parent_node': 1, 'ancestor_value': 1.0}, {'id': 16, 'answer': '4 + 32 = 36 ( left: 36 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 17, 'answer': '32 / 4 = 8 ( left: 8 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 18, 'answer': '12 + 4 = 16 ( left: 16 32 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 19, 'answer': '4 * 32 = 128 ( left: 128 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 20, 'answer': '32 - 4 = 28 ( left: 28 12 )', 'value': 'impossible', 'parent_node': 2, 'ancestor_value': 1.0}, {'id': 26, 'answer': '4 + 4 = 8 ( left: 8 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 27, 'answer': '4 * 4 = 16 ( left: 16 12 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 29, 'answer': '12 + 4 = 16 ( left: 16 4 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}, {'id': 30, 'answer': '12 - 4 = 8 ( left: 8 4 )', 'value': 'impossible', 'parent_node': 3, 'ancestor_value': 1.0}], [{'id': 11, 'answer': '12 + 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 12, 'answer': '12 - 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 13, 'answer': '0 * 12 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 14, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 15, 'answer': '12 / 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 10, 'ancestor_value': 11.0}, {'id': 31, 'answer': '12 + 0 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 28, 'ancestor_value': 11.0}, {'id': 32, 'answer': '0 - 12 = -12 ( left: -12 )', 'value': 'impossible', 'parent_node': 28, 'ancestor_value': 11.0}, {'id': 33, 'answer': '12 / 0 = -12 ( left: -12 )', 'value': 'impossible', 'parent_node': 28, 'ancestor_value': 11.0}, {'id': 34, 'answer': '12 * 0 = 0 ( left: 0 )', 'value': 'impossible', 'parent_node': 28, 'ancestor_value': 11.0}, {'id': 35, 'answer': '0 + 12 = 12 ( left: 12 )', 'value': 'impossible', 'parent_node': 28, 'ancestor_value': 11.0}, {'id': 21, 'answer': '16 - 12 = 4 ( left: 4 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 22, 'answer': '16 + 12 = 28 ( left: 28 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 23, 'answer': '16 * 12 = 192 ( left: 192 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 24, 'answer': '16 / 12 = 1.3333333333333333 ( left: 1.3333333333333333 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}, {'id': 25, 'answer': '12 - 16 = -4 ( left: -4 )', 'value': 'impossible', 'parent_node': 6, 'ancestor_value': 2.0}], []]


linked list:
000 -> 1 -> 2 -> 3 -> 4 -> 5

001 -> 10 -> 6 -> 7 -> 8 -> 9

002 -> 16 -> 17 -> 18 -> 19 -> 20

003 -> 26 -> 27 -> 28 -> 29 -> 30

004

005

006 -> 21 -> 22 -> 23 -> 24 -> 25

007

008

009

010 -> 11 -> 12 -> 13 -> 14 -> 15

011

012

013

014

015

016

017

018

019

020

021

022

023

024

025

026

027

028 -> 31 -> 32 -> 33 -> 34 -> 35

029

030

031

032

033

034

035

036

037

038

039

040

041

042

043

044

045

046

047

048

049

050

051

052

053

054

055

056

057

058

059

060

061

062

063

064

065

066

067

068

069

070

071

072

073

074

075

076

077

078

079

080

081

082

083

084

085

086

087

088

089

090

091

092

093

094

095

096

097

098

099

100

101

102

103

104

105

106

107

108

109

110

111

112

113

114

115

116

117

118

119

120

121

122

123

124

125

126

127

128

129

130

131

132

133

134

135

136

137

138

139

140

141

142

143

144

145

146

147

148

149

150

151

152

153

154

155


path: ['12 + 0 = 12 ( left: 12 )', '8 - 8 = 0 ( left: 0 12 )', '4 + 4 = 8 ( left: 8 8 12 )', '( left: 4 4 8 12 )']


['12 + 0 = 12 ( left: 12 )', '8 - 8 = 0 ( left: 0 12 )', '4 + 4 = 8 ( left: 8 8 12 )', '( left: 4 4 8 12 )']
 ( 12 + ( ( 4 + 4 ) - 8 ) ) 


Answer: 
 ( 12 + ( ( 4 + 4 ) - 8 ) ) 

